<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2018r3" FormatVersion="2" MinIDEVersion="20070100">
<block type="Project" ID="0">
 <ProjectSavedInVers>2018.03</ProjectSavedInVers>
 <MajorVersion>1</MajorVersion>
 <MinorVersion>0</MinorVersion>
 <SubVersion>0</SubVersion>
 <Release>0</Release>
 <NonRelease>23</NonRelease>
 <Region></Region>
 <ShortVersion></ShortVersion>
 <LongVersion></LongVersion>
 <InfoVersion></InfoVersion>
 <AutoIncVersion>1</AutoIncVersion>
 <DefaultViewID>369946633</DefaultViewID>
 <ProjectType>0</ProjectType>
 <DefaultLanguage>5</DefaultLanguage>
 <CurrentLanguage>5</CurrentLanguage>
 <DefaultEncoding>0</DefaultEncoding>
 <BuildFlags>2064</BuildFlags>
 <UseBuildsFolder>1</UseBuildsFolder>
 <WebApp>0</WebApp>
 <Icon>
 </Icon>
 <MacCreator></MacCreator>
 <BuildCarbonMachOName>sd_ebay_pneuss_job</BuildCarbonMachOName>
 <BundleIdentifier>com.mycompany.sdebaypneussjob</BundleIdentifier>
 <WinMDICaption></WinMDICaption>
 <BuildWinName>sd_ebay_pneuss_job</BuildWinName>
 <BuildWinMDI>0</BuildWinMDI>
 <BuildWinCompanyName>Supporto Digitale srl</BuildWinCompanyName>
 <BuildWinProductName></BuildWinProductName>
 <BuildWinInternalName></BuildWinInternalName>
 <BuildWinFileDescription></BuildWinFileDescription>
 <UseGDIPlus>0</UseGDIPlus>
 <BuildLinuxX86Name>MiaApplicazione</BuildLinuxX86Name>
 <DebuggerCommandLine>batch ebay_aus crea</DebuggerCommandLine>
 <WindowsArchitecture>1</WindowsArchitecture>
 <OptimizationLevel>0</OptimizationLevel>
 <CopyWindowsRedist>0</CopyWindowsRedist>
 <WindowsVersions>{35138b9a-5d96-4fbd-8e2d-a2440225f93a}|{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}|{1f676c76-80e1-4239-95bb-83d0f6d0da78}|{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}</WindowsVersions>
 <WindowsRunAs>0</WindowsRunAs>
</block>
<block type="Module" ID="1543649662">
 <ObjName>App</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Application</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <IsApplicationObject>1</IsApplicationObject>
 <Compatibility></Compatibility>
 <PropertyVal Name="MenuBar">727919572</PropertyVal>
 <ViewBehavior>
 </ViewBehavior>
 <Constant>
  <ItemName>kFileQuitShortcut</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1176084479</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>1</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Cmd+Q</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Ctrl+Q</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kFileQuit</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1761120255</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>Esci</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Esci</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>kEditClear</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1012537343</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>Elimina</ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Elimina</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>Elimina</ItemDef>
  </ConstantInstance>
 </Constant>
</block>
<block type="Window" ID="369946633">
 <ObjName>mainWindow</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>Window</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1608437759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Open()</SourceLine>
   <SourceLine>Dim d as Date</SourceLine>
   <SourceLine>d=New Date</SourceLine>
   <SourceLine>Dim mese as String, giorno as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cbSite.AddRow("IT")</SourceLine>
   <SourceLine>cbSite.AddRow("DE")</SourceLine>
   <SourceLine>cbSite.AddRow("NL")</SourceLine>
   <SourceLine>cbSite.AddRow("UK")</SourceLine>
   <SourceLine>cbSite.AddRow("FR")</SourceLine>
   <SourceLine>cbSite.AddRow("ES")</SourceLine>
   <SourceLine>cbSite.AddRow("US")</SourceLine>
   <SourceLine>cbSite.AddRow("AUS")</SourceLine>
   <SourceLine>cbSite.AddRow("IE")</SourceLine>
   <SourceLine>cbSite.AddRow("CH")</SourceLine>
   <SourceLine>cbSite.ListIndex=0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if instr(0, System.CommandLine,"debug") &gt; 0 then</SourceLine>
   <SourceLine>'ignoro il path dell'applicazione</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sPath="/Users/alessandroconti/Documents/Sviluppo/Xojo/mmac_pneus_ebay/genericini"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>sPath=app.ExecutableFile.Parent.ShellPath</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#if DebugBuild = true then</SourceLine>
   <SourceLine>sPath = App.ExecutableFile.Parent.Parent.Parent.Parent.ShellPath + "/genericini"</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if instr(0, System.CommandLine,"ebay_it") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=0</SourceLine>
   <SourceLine>linkyCountry="IT"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_de") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=1</SourceLine>
   <SourceLine>linkyCountry="DE"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_uk") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=3</SourceLine>
   <SourceLine>linkyCountry="UK"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_nl") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=2</SourceLine>
   <SourceLine>linkyCountry="NL"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_fr") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=4</SourceLine>
   <SourceLine>linkyCountry="FR"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_es") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=5</SourceLine>
   <SourceLine>linkyCountry="ES"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_us") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=6</SourceLine>
   <SourceLine>linkyCountry="US"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_aus") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=7</SourceLine>
   <SourceLine>linkyCountry="AUS"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_ie") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=8</SourceLine>
   <SourceLine>linkyCountry="IE"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_ch") &gt; 0 then</SourceLine>
   <SourceLine>partner=""</SourceLine>
   <SourceLine>cbSite.ListIndex=9</SourceLine>
   <SourceLine>linkyCountry="CH"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_nl") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=2</SourceLine>
   <SourceLine>linkyCountry="NL"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_it") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=0</SourceLine>
   <SourceLine>linkyCountry="IT"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_de") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=1</SourceLine>
   <SourceLine>linkyCountry="DE"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_uk") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=3</SourceLine>
   <SourceLine>linkyCountry="UK"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_fr") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=4</SourceLine>
   <SourceLine>linkyCountry="FR"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_es") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=5</SourceLine>
   <SourceLine>linkyCountry="ES"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_us") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=6</SourceLine>
   <SourceLine>linkyCountry="US"</SourceLine>
   <SourceLine>ElseIf instr(0, System.CommandLine,"ebay_mak_aus") &gt; 0 then</SourceLine>
   <SourceLine>partner="MAK"</SourceLine>
   <SourceLine>cbSite.ListIndex=7</SourceLine>
   <SourceLine>linkyCountry="AUS"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if instr(0, System.CommandLine,"linky_action") &gt; 0 then 'registra l'azione che sta eseguendo</SourceLine>
   <SourceLine>dim azioneintera as string, inizio as Integer, fine as integer</SourceLine>
   <SourceLine>azioneintera=System.CommandLine</SourceLine>
   <SourceLine>inizio=instr(azioneintera,"linky_action")</SourceLine>
   <SourceLine>fine=instr(inizio,azioneintera," ")</SourceLine>
   <SourceLine>linkyAction=mid(System.CommandLine,inizio+13,fine-inizio-13) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if instr(0, System.CommandLine,"sandbox") &gt; 0 then</SourceLine>
   <SourceLine>SANDBOX = true</SourceLine>
   <SourceLine>me.Title ="Ebay Control Panel (SANDBOX)"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if instr(0, System.CommandLine,"batch") &gt; 0 then</SourceLine>
   <SourceLine>Batch = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#If TargetMacOS Then</SourceLine>
   <SourceLine>//Mac specific code here.</SourceLine>
   <SourceLine>FolderSeparator = "/"</SourceLine>
   <SourceLine>#ElseIf TargetWin32 Then</SourceLine>
   <SourceLine>//Windows code goes here.</SourceLine>
   <SourceLine>FolderSeparator ="\"</SourceLine>
   <SourceLine>#ElseIf TargetLinux Then</SourceLine>
   <SourceLine>//Linux code goes right here.</SourceLine>
   <SourceLine>FolderSeparator="/"</SourceLine>
   <SourceLine>#EndIf</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if instr(0, System.CommandLine,"vendite") &gt; 0 then</SourceLine>
   <SourceLine>GetEbayOrders</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"chiudi") &gt; 0 then</SourceLine>
   <SourceLine>CloseEbayItems</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"closebyitem") &gt; 0 then</SourceLine>
   <SourceLine>CloseEbayByItems</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"special") &gt; 0 then</SourceLine>
   <SourceLine>CloseEbaySpecial</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"inventory") &gt; 0 then</SourceLine>
   <SourceLine>me.Title="Recupero l'inventario"</SourceLine>
   <SourceLine>GetActiveInventory</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"giacenze") &gt; 0 then</SourceLine>
   <SourceLine>UpdateEbayStockItems</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"revisereturn") &gt; 0 then</SourceLine>
   <SourceLine>ReviseReturn</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"newapp") &gt; 0 then</SourceLine>
   <SourceLine>AddEbayItemsApp</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"tpms") &gt; 0 then</SourceLine>
   <SourceLine>AddEbayItemsTPMS</SourceLine>
   <SourceLine>elseif instr(0, System.CommandLine,"crea") &gt; 0 then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>'MsgBox "crea le inserzioni"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>AddEbayItems</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <PropertyVal Name="MenuBarVisible">True</PropertyVal>
 <PropertyVal Name="MenuBar">727919572</PropertyVal>
 <PropertyVal Name="Backdrop">0</PropertyVal>
 <PropertyVal Name="BackColor">16777215</PropertyVal>
 <PropertyVal Name="HasBackColor">False</PropertyVal>
 <PropertyVal Name="FullScreen">False</PropertyVal>
 <PropertyVal Name="LiveResize">True</PropertyVal>
 <PropertyVal Name="Visible">True</PropertyVal>
 <PropertyVal Name="Placement">0</PropertyVal>
 <PropertyVal Name="ImplicitInstance">True</PropertyVal>
 <PropertyVal Name="MacProcID">0</PropertyVal>
 <PropertyVal Name="Composite">False</PropertyVal>
 <PropertyVal Name="FullScreenButton">False</PropertyVal>
 <PropertyVal Name="MinimizeButton">True</PropertyVal>
 <PropertyVal Name="MaximizeButton">False</PropertyVal>
 <PropertyVal Name="Resizeable">True</PropertyVal>
 <PropertyVal Name="CloseButton">True</PropertyVal>
 <PropertyVal Name="Title">Ebay exec Job</PropertyVal>
 <PropertyVal Name="Frame">0</PropertyVal>
 <PropertyVal Name="MaxHeight">32000</PropertyVal>
 <PropertyVal Name="MaxWidth">32000</PropertyVal>
 <PropertyVal Name="MinHeight">64</PropertyVal>
 <PropertyVal Name="MinWidth">64</PropertyVal>
 <PropertyVal Name="Height">170</PropertyVal>
 <PropertyVal Name="Width">413</PropertyVal>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>FullScreenButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>String</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Interfaces</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>String</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>String</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Placement</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Default</ItemDef>
    <ItemDef>1 - Parent Window</ItemDef>
    <ItemDef>2 - Main Screen</ItemDef>
    <ItemDef>3 - Parent Window Screen</ItemDef>
    <ItemDef>4 - Stagger</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Width</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>600</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Height</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>400</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>64</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxWidth</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaxHeight</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>32000</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Frame</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
   <EditorType>Enum</EditorType>
   <Enumeration>
    <ItemDef>0 - Document</ItemDef>
    <ItemDef>1 - Movable Modal</ItemDef>
    <ItemDef>2 - Modal Dialog</ItemDef>
    <ItemDef>3 - Floating Window</ItemDef>
    <ItemDef>4 - Plain Box</ItemDef>
    <ItemDef>5 - Shadowed Box</ItemDef>
    <ItemDef>6 - Rounded Window</ItemDef>
    <ItemDef>7 - Global Floating Window</ItemDef>
    <ItemDef>8 - Sheet Window</ItemDef>
    <ItemDef>9 - Metal Window</ItemDef>
    <ItemDef>11 - Modeless Dialog</ItemDef>
   </Enumeration>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Composite</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>HasBackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BackColor</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>&amp;hFFFFFF</PropertyValue>
   <ItemType>Color</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Backdrop</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>Picture</ItemType>
   <EditorType>Picture</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Title</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>Untitled</PropertyValue>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FullScreen</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBarVisible</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>CloseButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Resizeable</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LiveResize</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MaximizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>False</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MinimizeButton</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacProcID</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MenuBar</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <ItemType>MenuBar</ItemType>
   <EditorType>MenuBar</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ImplicitInstance</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Appearance</PropertyGroup>
   <PropertyValue>True</PropertyValue>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
 </ViewBehavior>
 <ControlBehavior>
  <Superclass>TextArea</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>ComboBox</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>1918756863</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>Dim lJobs as new XmlDocument</SourceLine>
    <SourceLine>Dim jobIds as String</SourceLine>
    <SourceLine>Dim cEbay as new Ebay</SourceLine>
    <SourceLine>Me.MouseCursor=System.Cursors.Wait</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>select Case cbSite.List(cbSite.ListIndex)</SourceLine>
    <SourceLine>case "IT"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "DE"</SourceLine>
    <SourceLine>cEbay.userToken=DE_Token</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>'cEbay.userToken=UK_Token</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if SANDBOX=true then</SourceLine>
    <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
    <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>cEbay.siteID="186"</SourceLine>
    <SourceLine>jobIds = cEbay.GeteBayDetails</SourceLine>
    <SourceLine>'txtJobId.Text=jobIds</SourceLine>
    <SourceLine>'tmJobOrder.Period=12000</SourceLine>
    <SourceLine>'tmJobOrder.Mode=2</SourceLine>
    <SourceLine>'pgWheel.Visible=True</SourceLine>
    <SourceLine>'pbGetOrders.Enabled=False</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Me.MouseCursor=System.Cursors.StandardPointer</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Timer</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>1597835263</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>Dim jobID as  String, jobFileID as String</SourceLine>
    <SourceLine>Dim cEbay as new Ebay</SourceLine>
    <SourceLine>Dim CreaOrdini as Boolean</SourceLine>
    <SourceLine>Dim eRRore as String, orderFilePath as String</SourceLine>
    <SourceLine>Dim jobStatus as String</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if SANDBOX=true then</SourceLine>
    <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
    <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
    <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>select Case cbSite.List(cbSite.ListIndex)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>case "IT"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "DE"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "NL"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if txtJobId.Text&lt;&gt;""  then</SourceLine>
    <SourceLine>jobStatus = cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/jobStatus")</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if jobStatus &lt;&gt; "Completed" then</SourceLine>
    <SourceLine>pgBarVendite.Value =val( cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/percentComplete"))</SourceLine>
    <SourceLine>DebugLog "Attendo conclusione esecuzione report"</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Try</SourceLine>
    <SourceLine>pgBarVendite.Value=0</SourceLine>
    <SourceLine>tmJobOrder.Enabled=False</SourceLine>
    <SourceLine>pgWheel.Visible=false</SourceLine>
    <SourceLine>pbGetOrders.Enabled=true</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>' Generazione file eseguita, ora eseguo il download e poi dezzippo</SourceLine>
    <SourceLine>'Cerco il riferimento al file</SourceLine>
    <SourceLine>eRRore = "JobStatus"</SourceLine>
    <SourceLine>DebugLog "Prelevo il riferimento al file"</SourceLine>
    <SourceLine>jobFileID = cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/fileReferenceId")</SourceLine>
    <SourceLine>'eseguo il download del file</SourceLine>
    <SourceLine>eRRore = "DownloadFile"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>orderFilePath = sPath +FolderSeparator +"orders"+FolderSeparator +"ebay_it_orders.zip"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>DebugLog "Eseguo il download del file" + orderFilePath</SourceLine>
    <SourceLine>jobID= cEbay.DownloadFile(txtJobId.Text,jobFileID, orderFilePath)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>dim extractor as new ZipExtractor</SourceLine>
    <SourceLine>Dim f as FolderItem, d as FolderItem</SourceLine>
    <SourceLine>f=New FolderItem(sPath +FolderSeparator +"orders"+FolderSeparator +"ebay_it_orders.zip",FolderItem.PathTypeShell)</SourceLine>
    <SourceLine>d=New FolderItem(sPath +FolderSeparator + "orders"+FolderSeparator ,FolderItem.PathTypeShell)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>eRRore = "ZIP"</SourceLine>
    <SourceLine>DebugLog "Dezip del file"</SourceLine>
    <SourceLine>if not extractor.ExtractAllSilently (f, d) then</SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(1)</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>return</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Dim zar as ZipArchive</SourceLine>
    <SourceLine>zar = new ZipArchive</SourceLine>
    <SourceLine>if zar.Open(f, false) then</SourceLine>
    <SourceLine>eRRore = "CreaRigheOrdini"</SourceLine>
    <SourceLine>CreaOrdini = AddEbayOrders(sPath +FolderSeparator +"orders"+FolderSeparator  + zar.Entry(1).name)</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>DebugLog "Impossibile aprire il file zip"</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(1)</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>DebugLog "Esecuzione completata"</SourceLine>
    <SourceLine>Exception</SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(0)</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>'msgbox "Operazione completata con errori !! " + eRRore</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>'Leggo il file</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>ProgressWheel</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>ProgressBar</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>PushButton</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>1930862591</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>'GetCategoryFeatures(9891)</SourceLine>
    <SourceLine>CheckJobBeforeStart "AddFixedPriceItem"</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>TextField</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Timer</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>963295231</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>Dim jobID as  String, jobFileID as String</SourceLine>
    <SourceLine>Dim cEbay as new Ebay</SourceLine>
    <SourceLine>Dim CreaOrdini as Boolean</SourceLine>
    <SourceLine>Dim eRRore as String, orderFilePath as String</SourceLine>
    <SourceLine>Dim jobStatus as String</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if SANDBOX=true then</SourceLine>
    <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
    <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
    <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>select Case cbSite.List(cbSite.ListIndex)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>case "IT"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "DE"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "NL"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if txtJobId.Text&lt;&gt;""  then</SourceLine>
    <SourceLine>jobStatus = cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/jobStatus")</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if jobStatus &lt;&gt; "Completed" then</SourceLine>
    <SourceLine>pgBarVendite.Value =val( cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/percentComplete"))</SourceLine>
    <SourceLine>DebugLog "Attendo conclusione esecuzione report"</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Try</SourceLine>
    <SourceLine>pgBarVendite.Value=0</SourceLine>
    <SourceLine>tmJobstatus.Enabled=False</SourceLine>
    <SourceLine>pgWheel.Visible=false</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>eRRore = "JobStatus"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>DebugLog "Prelevo il riferimento al file"</SourceLine>
    <SourceLine>jobFileID = cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/fileReferenceId")</SourceLine>
    <SourceLine>'eseguo il download del file</SourceLine>
    <SourceLine>eRRore = "DownloadFile"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>orderFilePath = sPath +FolderSeparator +"log"+FolderSeparator + LogFile</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>DebugLog "Eseguo il download del file" + orderFilePath</SourceLine>
    <SourceLine>jobID= cEbay.DownloadFile(txtJobId.Text,jobFileID, orderFilePath)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>dim extractor as new ZipExtractor</SourceLine>
    <SourceLine>Dim f as FolderItem, d as FolderItem</SourceLine>
    <SourceLine>f=New FolderItem(sPath +FolderSeparator +"log"+FolderSeparator + LogFile,FolderItem.PathTypeShell)</SourceLine>
    <SourceLine>d=New FolderItem(sPath +FolderSeparator + "log"+FolderSeparator ,FolderItem.PathTypeShell)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>eRRore = "ZIP"</SourceLine>
    <SourceLine>DebugLog "Dezip del file"</SourceLine>
    <SourceLine>if not extractor.ExtractAllSilently (f, d) then</SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(1)</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>return</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Dim zar as ZipArchive</SourceLine>
    <SourceLine>zar = new ZipArchive</SourceLine>
    <SourceLine>if zar.Open(f, false) then</SourceLine>
    <SourceLine>eRRore = "CreaRigheOrdini"</SourceLine>
    <SourceLine>'CreaOrdini = AddEbayOrders(sPath +FolderSeparator +"orders"+FolderSeparator  + zar.Entry(1).name)</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>DebugLog "Impossibile aprire il file zip"</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(1)</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>DebugLog "Esecuzione completata"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Exception</SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(0)</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>'msgbox "Operazione completata con errori !! " + eRRore</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>SMTPSecureSocket</Superclass>
  <HookInstance>
   <ItemName>ServerError</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>1532043263</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub ServerError(ErrorID as integer, ErrorMessage as string, Email as EmailMessage)</SourceLine>
    <SourceLine>'msgBox "Error: " + errorMessage</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
  <HookInstance>
   <ItemName>MailSent</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>827709439</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub MailSent()</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
  <HookInstance>
   <ItemName>Error</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>1565603839</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Error()</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Canvas</Superclass>
 </ControlBehavior>
 <ControlBehavior>
  <Superclass>Timer</Superclass>
  <HookInstance>
   <ItemName>Action</ItemName>
   <Compatibility></Compatibility>
   <Visible>1</Visible>
   <PartID>200726527</PartID>
   <ItemSource>
    <TextEncoding>134217984</TextEncoding>
    <SourceLine>Sub Action()</SourceLine>
    <SourceLine>Dim jobID as  String, jobFileID as String</SourceLine>
    <SourceLine>Dim cEbay as new Ebay</SourceLine>
    <SourceLine>Dim CreaOrdini as Boolean</SourceLine>
    <SourceLine>Dim eRRore as String, orderFilePath as String</SourceLine>
    <SourceLine>Dim jobStatus as String</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>select Case cbSite.List(cbSite.ListIndex)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>case "IT"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "DE"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "AUS"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "US"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "AT"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "CH"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>case "FR"</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>cEbay.userToken=IT_Token</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>if SANDBOX=true then</SourceLine>
    <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
    <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
    <SourceLine>cEbay.FileTransferService=  SandBoxgetFileTransferService</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>if txtJobId.Text&lt;&gt;""  then</SourceLine>
    <SourceLine>jobStatus = cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/jobStatus")</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if jobStatus &lt;&gt; "Completed" then</SourceLine>
    <SourceLine>pgBarVendite.Value =val( cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/percentComplete"))</SourceLine>
    <SourceLine>DebugLog "Attendo conclusione esecuzione report"</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Try</SourceLine>
    <SourceLine>pgBarVendite.Value=0</SourceLine>
    <SourceLine>tmJobOrder.Enabled=False</SourceLine>
    <SourceLine>pgWheel.Visible=false</SourceLine>
    <SourceLine>pbGetOrders.Enabled=true</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>' Generazione file eseguita, ora eseguo il download e poi dezzippo</SourceLine>
    <SourceLine>'Cerco il riferimento al file</SourceLine>
    <SourceLine>eRRore = "JobStatus"</SourceLine>
    <SourceLine>DebugLog "Prelevo il riferimento al file"</SourceLine>
    <SourceLine>jobFileID = cEbay.GetJobStatus( txtJobId.Text,"/getJobStatusResponse/jobProfile/fileReferenceId")</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>'eseguo il download del file</SourceLine>
    <SourceLine>eRRore = "DownloadFile"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>orderFilePath = sPath +FolderSeparator +"reports"+FolderSeparator +"ebay_it_activereport.zip"</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>DebugLog "Eseguo il download del file" + orderFilePath</SourceLine>
    <SourceLine>jobID= cEbay.DownloadFile(txtJobId.Text,jobFileID, orderFilePath)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>dim extractor as new ZipExtractor</SourceLine>
    <SourceLine>Dim f as FolderItem, d as FolderItem</SourceLine>
    <SourceLine>f=New FolderItem(sPath +FolderSeparator +"reports"+FolderSeparator +"ebay_it_activereport.zip",FolderItem.PathTypeShell)</SourceLine>
    <SourceLine>d=New FolderItem(sPath +FolderSeparator + "reports"+FolderSeparator ,FolderItem.PathTypeShell)</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>eRRore = "ZIP"</SourceLine>
    <SourceLine>DebugLog "Dezip del file"</SourceLine>
    <SourceLine>if not extractor.ExtractAllSilently (f, d) then</SourceLine>
    <SourceLine>MsgBox "Error: " + extractor.LastErrMsg</SourceLine>
    <SourceLine>return</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>Dim zar as ZipArchive</SourceLine>
    <SourceLine>zar = new ZipArchive</SourceLine>
    <SourceLine>if zar.Open(f, false) then</SourceLine>
    <SourceLine>eRRore = "CreaRigheInventory"</SourceLine>
    <SourceLine>' caricamento ordini disabilitato perchè viene eseguito a livello di kettle</SourceLine>
    <SourceLine>'CreaOrdini = RefreshActiveReports(sPath +FolderSeparator +"reports"+FolderSeparator  + zar.Entry(1).name)</SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(1)</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>Else</SourceLine>
    <SourceLine>DebugLog "Impossibile aprire il file zip"</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(1)</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>DebugLog "Esecuzione completata"</SourceLine>
    <SourceLine>Exception</SourceLine>
    <SourceLine>if Batch = true then</SourceLine>
    <SourceLine>Quit(0)</SourceLine>
    <SourceLine>else</SourceLine>
    <SourceLine>msgbox "Operazione completata con errori !! " + eRRore</SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>'Leggo il file</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine></SourceLine>
    <SourceLine>end</SourceLine>
    <SourceLine>End Sub</SourceLine>
   </ItemSource>
  </HookInstance>
 </ControlBehavior>
 <Control>
  <ControlClass>TextArea</ControlClass>
  <ItemName>TextArea</ItemName>
  <PropertyVal Name="Name">resField</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">86</PropertyVal>
  <PropertyVal Name="Width">373</PropertyVal>
  <PropertyVal Name="Height">29</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">0</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="Multiline">True</PropertyVal>
  <PropertyVal Name="ScrollbarHorizontal">False</PropertyVal>
  <PropertyVal Name="ScrollbarVertical">True</PropertyVal>
  <PropertyVal Name="Styled">True</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="HideSelection">True</PropertyVal>
  <PropertyVal Name="LineHeight">0.00</PropertyVal>
  <PropertyVal Name="LineSpacing">1.00</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0.0e+</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="ReadOnly">False</PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="AcceptTabs">False</PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">True</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="Super">TextArea</PropertyVal>
  <ControlIndex>0</ControlIndex>
  <Locked>0</Locked>
  <PartID>1290575871</PartID>
 </Control>
 <Control>
  <ControlClass>ComboBox</ControlClass>
  <ItemName>ComboBox</ItemName>
  <PropertyVal Name="Name">cbSite</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">189</PropertyVal>
  <PropertyVal Name="Top">49</PropertyVal>
  <PropertyVal Name="Width">75</PropertyVal>
  <PropertyVal Name="Height">19</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">1</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="InitialValue"></PropertyVal>
  <PropertyVal Name="ListIndex">0</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0.0e+</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="AutoComplete">False</PropertyVal>
  <PropertyVal Name="Super">ComboBox</PropertyVal>
  <ControlIndex>1</ControlIndex>
  <Locked>0</Locked>
  <PartID>681502719</PartID>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">pbGetOrders</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">163</PropertyVal>
  <PropertyVal Name="Top">48</PropertyVal>
  <PropertyVal Name="Width">121</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">2</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">Scarica Vendite</PropertyVal>
  <PropertyVal Name="Default">True</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0.0e+</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>2</ControlIndex>
  <Locked>0</Locked>
  <PartID>757297151</PartID>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="Name">txtJobId</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">163</PropertyVal>
  <PropertyVal Name="Top">14</PropertyVal>
  <PropertyVal Name="Width">96</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">3</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="Password">False</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0.0e+</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="ReadOnly">True</PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="AcceptTabs">False</PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <ControlIndex>3</ControlIndex>
  <Locked>0</Locked>
  <PartID>2042138623</PartID>
 </Control>
 <Control>
  <ControlClass>Timer</ControlClass>
  <ItemName>Timer</ItemName>
  <PropertyVal Name="Name">tmJobOrder</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Mode">0</PropertyVal>
  <PropertyVal Name="Period">8000</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="Super">Timer</PropertyVal>
  <ControlIndex>4</ControlIndex>
  <Locked>0</Locked>
  <PartID>686303231</PartID>
 </Control>
 <Control>
  <ControlClass>ProgressWheel</ControlClass>
  <ItemName>ProgressWheel</ItemName>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="Name">pgWheel</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">368</PropertyVal>
  <PropertyVal Name="Top">8</PropertyVal>
  <PropertyVal Name="Width">32</PropertyVal>
  <PropertyVal Name="Height">35</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">4</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Visible">False</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Super">ProgressWheel</PropertyVal>
  <ControlIndex>5</ControlIndex>
  <Locked>0</Locked>
  <PartID>1586122751</PartID>
 </Control>
 <Control>
  <ControlClass>ProgressBar</ControlClass>
  <ItemName>ProgressBar</ItemName>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Name">pgBarVendite</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">130</PropertyVal>
  <PropertyVal Name="Width">373</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">6</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="Value">0</PropertyVal>
  <PropertyVal Name="Maximum">100</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">ProgressBar</PropertyVal>
  <ControlIndex>6</ControlIndex>
  <Locked>0</Locked>
  <PartID>1395886079</PartID>
 </Control>
 <Control>
  <ControlClass>PushButton</ControlClass>
  <ItemName>PushButton</ItemName>
  <PropertyVal Name="Name">pbtest</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">294</PropertyVal>
  <PropertyVal Name="Top">49</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">20</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">5</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Caption">test</PropertyVal>
  <PropertyVal Name="Default">False</PropertyVal>
  <PropertyVal Name="Cancel">False</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="ButtonStyle">0</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0.0e+</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">PushButton</PropertyVal>
  <ControlIndex>7</ControlIndex>
  <Locked>0</Locked>
  <PartID>1240383487</PartID>
 </Control>
 <Control>
  <ControlClass>TextField</ControlClass>
  <ItemName>TextField</ItemName>
  <PropertyVal Name="Name">txtjobStatus</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">276</PropertyVal>
  <PropertyVal Name="Top">14</PropertyVal>
  <PropertyVal Name="Width">80</PropertyVal>
  <PropertyVal Name="Height">22</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">6</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Border">True</PropertyVal>
  <PropertyVal Name="Password">False</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="TextColor">0</PropertyVal>
  <PropertyVal Name="BackColor">16777215</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="Format"></PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="TextFont">System</PropertyVal>
  <PropertyVal Name="TextSize">0.0e+</PropertyVal>
  <PropertyVal Name="TextUnit">0</PropertyVal>
  <PropertyVal Name="Bold">False</PropertyVal>
  <PropertyVal Name="Italic">False</PropertyVal>
  <PropertyVal Name="Underline">False</PropertyVal>
  <PropertyVal Name="CueText"></PropertyVal>
  <PropertyVal Name="Text"></PropertyVal>
  <PropertyVal Name="Mask"></PropertyVal>
  <PropertyVal Name="ReadOnly">True</PropertyVal>
  <PropertyVal Name="LimitText">0</PropertyVal>
  <PropertyVal Name="AcceptTabs">False</PropertyVal>
  <PropertyVal Name="Alignment">0</PropertyVal>
  <PropertyVal Name="AutomaticallyCheckSpelling">False</PropertyVal>
  <PropertyVal Name="DataSource"></PropertyVal>
  <PropertyVal Name="DataField"></PropertyVal>
  <PropertyVal Name="Super">TextField</PropertyVal>
  <ControlIndex>8</ControlIndex>
  <Locked>0</Locked>
  <PartID>694087679</PartID>
 </Control>
 <Control>
  <ControlClass>Timer</ControlClass>
  <ItemName>Timer</ItemName>
  <PropertyVal Name="Name">tmjobStatus</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Mode">0</PropertyVal>
  <PropertyVal Name="Period">8000</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="Super">Timer</PropertyVal>
  <ControlIndex>9</ControlIndex>
  <Locked>0</Locked>
  <PartID>435582975</PartID>
 </Control>
 <Control>
  <ControlClass>SMTPSecureSocket</ControlClass>
  <ItemName>SMTPSecureSocket</ItemName>
  <PropertyVal Name="Name">MailSocket</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="ConnectionType">1</PropertyVal>
  <PropertyVal Name="CertificateFile"></PropertyVal>
  <PropertyVal Name="CertificateRejectionFile"></PropertyVal>
  <PropertyVal Name="Secure">True</PropertyVal>
  <PropertyVal Name="CertificatePassword"></PropertyVal>
  <PropertyVal Name="SMTPConnectionMode">0</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="Super">SMTPSecureSocket</PropertyVal>
  <ControlIndex>10</ControlIndex>
  <Locked>0</Locked>
  <PartID>851339263</PartID>
 </Control>
 <Control>
  <ControlClass>Canvas</ControlClass>
  <ItemName>Canvas</ItemName>
  <PropertyVal Name="Name">Canvas1</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Left">20</PropertyVal>
  <PropertyVal Name="Top">9</PropertyVal>
  <PropertyVal Name="Width">124</PropertyVal>
  <PropertyVal Name="Height">67</PropertyVal>
  <PropertyVal Name="LockLeft">True</PropertyVal>
  <PropertyVal Name="LockTop">True</PropertyVal>
  <PropertyVal Name="LockRight">False</PropertyVal>
  <PropertyVal Name="LockBottom">False</PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="TabIndex">7</PropertyVal>
  <PropertyVal Name="TabStop">True</PropertyVal>
  <PropertyVal Name="Visible">True</PropertyVal>
  <PropertyVal Name="HelpTag"></PropertyVal>
  <PropertyVal Name="AutoDeactivate">True</PropertyVal>
  <PropertyVal Name="Enabled">True</PropertyVal>
  <PropertyVal Name="UseFocusRing">True</PropertyVal>
  <PropertyVal Name="Backdrop">1435636300</PropertyVal>
  <PropertyVal Name="AcceptFocus">False</PropertyVal>
  <PropertyVal Name="AcceptTabs">False</PropertyVal>
  <PropertyVal Name="DoubleBuffer">False</PropertyVal>
  <PropertyVal Name="EraseBackground">True</PropertyVal>
  <PropertyVal Name="Transparent">True</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="Super">Canvas</PropertyVal>
  <ControlIndex>11</ControlIndex>
  <Locked>0</Locked>
  <PartID>1204578303</PartID>
 </Control>
 <Control>
  <ControlClass>Timer</ControlClass>
  <ItemName>Timer</ItemName>
  <PropertyVal Name="Name">tmJobActiveReport</PropertyVal>
  <PropertyVal Name="Index">-2147483648</PropertyVal>
  <PropertyVal Name="Scope">0</PropertyVal>
  <PropertyVal Name="Mode">0</PropertyVal>
  <PropertyVal Name="Period">8000</PropertyVal>
  <PropertyVal Name="InitialParent"></PropertyVal>
  <PropertyVal Name="TabPanelIndex">0</PropertyVal>
  <PropertyVal Name="Super">Timer</PropertyVal>
  <ControlIndex>12</ControlIndex>
  <Locked>0</Locked>
  <PartID>1804812287</PartID>
 </Control>
</block>
<block type="Menu" ID="727919572">
 <ObjName>MenuBar1</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>FileMenu</ItemName>
  <ItemText>Archivio</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <MenuItemVisible>1</MenuItemVisible>
  <ItemFlags>0</ItemFlags>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>FileQuit</ItemName>
   <ItemText>#App.kFileQuit</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>#App.kFileQuitShortcut</ItemShortcut>
   <MenuShortcut>#App.kFileQuitShortcut</MenuShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>QuitMenuItem</Superclass>
  </MenuItem>
 </MenuItem>
 <MenuItem>
  <ItemSpecialMenu>0</ItemSpecialMenu>
  <ItemName>EditMenu</ItemName>
  <ItemText>Modifica</ItemText>
  <ItemIndex>-2147483648</ItemIndex>
  <ItemShortcut></ItemShortcut>
  <MenuAutoEnable>1</MenuAutoEnable>
  <TextEncoding>134217984</TextEncoding>
  <MenuItemVisible>1</MenuItemVisible>
  <ItemFlags>0</ItemFlags>
  <Superclass>MenuItem</Superclass>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditUndo</ItemName>
   <ItemText>Annulla</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+Z</ItemShortcut>
   <MenuShortcut>Z</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledMenu1</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditCut</ItemName>
   <ItemText>Taglia</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+X</ItemShortcut>
   <MenuShortcut>X</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditCopy</ItemName>
   <ItemText>Copia</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+C</ItemShortcut>
   <MenuShortcut>C</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditPaste</ItemName>
   <ItemText>Incolla</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+V</ItemShortcut>
   <MenuShortcut>V</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditClear</ItemName>
   <ItemText>#App.kEditClear</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>UntitledMenu0</ItemName>
   <ItemText>-</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut></ItemShortcut>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
  <MenuItem>
   <ItemSpecialMenu>0</ItemSpecialMenu>
   <ItemName>EditSelectAll</ItemName>
   <ItemText>Seleziona tutto</ItemText>
   <ItemIndex>-2147483648</ItemIndex>
   <ItemShortcut>Cmd+A</ItemShortcut>
   <MenuShortcut>A</MenuShortcut>
   <MenuShortcutModifier>1</MenuShortcutModifier>
   <MenuAutoEnable>1</MenuAutoEnable>
   <TextEncoding>134217984</TextEncoding>
   <MenuItemVisible>1</MenuItemVisible>
   <ItemFlags>0</ItemFlags>
   <Superclass>MenuItem</Superclass>
  </MenuItem>
 </MenuItem>
</block>
<block type="BuildAutomation" ID="2077410098">
 <ObjName>Build Automation</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="BuildStepsList" ID="1242400966">
 <ObjName>Linux</ObjName>
 <ObjContainerID>2077410098</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="1049552587">
 <ObjName>Build</ObjName>
 <ObjContainerID>1242400966</ObjContainerID>
</block>
<block type="BuildStepsList" ID="399670057">
 <ObjName>Mac OS X</ObjName>
 <ObjContainerID>2077410098</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="2073300636">
 <ObjName>Build</ObjName>
 <ObjContainerID>399670057</ObjContainerID>
</block>
<block type="BuildStepsList" ID="894149836">
 <ObjName>Windows</ObjName>
 <ObjContainerID>2077410098</ObjContainerID>
</block>
<block type="BuildProjectStep" ID="2033232399">
 <ObjName>Build</ObjName>
 <ObjContainerID>894149836</ObjContainerID>
</block>
<block type="Database" ID="1778329625">
 <ObjName>KETTLE</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <ItemType>ODBC</ItemType>
 <ItemData>DSN=KETTLE;PORT=1410;App=REAL Studio 2011;UID=sa;PWD=parado;</ItemData>
</block>
<block type="Picture" ID="1435636300">
 <ObjName>logo124</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <FullPath>Macintosh HD:Users:diegovitali:Documents:GitHub:mmac_pneus_ebay:logo124.png</FullPath>
 <PartialPath>logo124.png</PartialPath>
 <SaveInfo><Hex bytesex></SaveInfo>
 <ItemText>logo124</ItemText>
 <ItemTransparent>0</ItemTransparent>
</block>
<block type="Folder" ID="780748799">
 <ObjName>ZipPackage</ObjName>
 <ObjContainerID>0</ObjContainerID>
</block>
<block type="Folder" ID="1398882303">
 <ObjName>3rdParty</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
</block>
<block type="Module" ID="60210026">
 <ObjName>clsCRC16</ObjName>
 <ObjContainerID>1398882303</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>reflect</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1869232127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function reflect(strBinary as string, intBits as integer) As string</SourceLine>
   <SourceLine>dim intLen  as integer</SourceLine>
   <SourceLine>dim intLoop as integer</SourceLine>
   <SourceLine>dim strOut  as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>intLen    = lenb(strBinary)</SourceLine>
   <SourceLine>strBinary = leftb(fill("0", intBits - 1), intBits - intLen) + strBinary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for intLoop = 1 to intBits</SourceLine>
   <SourceLine>strOut = strOut + leftb(rightb(strBinary, intLoop), 1)</SourceLine>
   <SourceLine>next intLoop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return strOut</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>strBinary as string, intBits as integer</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>table</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1737015295</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub table(intPolynomial as Int32)</SourceLine>
   <SourceLine>dim intCrc   as Int32</SourceLine>
   <SourceLine>dim intTemp  as Int32</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for intLoop1 as integer = 0 to 255</SourceLine>
   <SourceLine>intCrc = intLoop1 * 256</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for intLoop2 as integer = 0 to 7</SourceLine>
   <SourceLine>if ((intCrc and &amp;h8000) &gt; 0) then</SourceLine>
   <SourceLine>intTemp = intPolynomial</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>intTemp = 0</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>intCrc = (intCrc * 2) xor (intTemp)</SourceLine>
   <SourceLine>next intLoop2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>crc16table(intLoop1) = intCrc and &amp;hffff</SourceLine>
   <SourceLine>next intLoop1</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>intPolynomial as Int32</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CRC16</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>126273535</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CRC16(strData as string, intInit as UInt16, blnRefin as boolean, blnRefout as boolean, intXORout as UInt16) As UInt16</SourceLine>
   <SourceLine>dim intIndex   as integer</SourceLine>
   <SourceLine>dim intLoop    as integer</SourceLine>
   <SourceLine>dim intLen     as integer</SourceLine>
   <SourceLine>dim intRCrc    as integer</SourceLine>
   <SourceLine>dim strChars() as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>intLen = lenb(strData)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if blnRefin = true then</SourceLine>
   <SourceLine>strChars = splitb(strData, "")</SourceLine>
   <SourceLine>strData  = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for intLoop = 0 to intLen - 1</SourceLine>
   <SourceLine>strData = strData + chrb(val("&amp;b" + reflect(bin(ascb(strChars(intLoop))), 8)))</SourceLine>
   <SourceLine>next intLoop</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for intLoop = 1 to intLen</SourceLine>
   <SourceLine>intIndex = ((intInit \ 256) xor ascb(midb(strData, intLoop, 1))) and &amp;hff</SourceLine>
   <SourceLine>intInit   = crc16table(intIndex) xor (intInit * 256)</SourceLine>
   <SourceLine>intInit   = intInit and &amp;hffff</SourceLine>
   <SourceLine>next intLoop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if blnRefout = false then </SourceLine>
   <SourceLine>return intInit xor intXorout</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>intRCrc = val("&amp;b" + reflect(bin(intInit), 16))</SourceLine>
   <SourceLine>return intRCrc xor intXorout</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>strData as string, intInit as UInt16, blnRefin as boolean, blnRefout as boolean, intXORout as UInt16</ItemParams>
  <ItemResult>UInt16</ItemResult>
 </Method>
 <Method>
  <ItemName>fill</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1449555967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function fill(strChr as string, intAmount as integer) As string</SourceLine>
   <SourceLine>dim intLoop as integer</SourceLine>
   <SourceLine>dim strOut  as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for intLoop = 1 to intAmount</SourceLine>
   <SourceLine>strOut = strOut + strChr</SourceLine>
   <SourceLine>next intLoop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return strOut</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>strChr as string, intAmount as integer</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1701459967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(intPolynomial as UInt16)</SourceLine>
   <SourceLine>table (intPolynomial)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>intPolynomial as UInt16</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CCITT</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2037164031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function CCITT(mb as MemoryBlock, ofs as Integer, len as Integer) As UInt16</SourceLine>
   <SourceLine>if mCCITT = nil then</SourceLine>
   <SourceLine>mCCITT = new clsCRC16 (&amp;h1021)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mCCITT.CRC16 (mb.StringValue(ofs,len), 0, false, false, 0)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>mb as MemoryBlock, ofs as Integer, len as Integer</ItemParams>
  <ItemResult>UInt16</ItemResult>
 </Method>
 <Note>
  <ItemName>CRC16 Catalogue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>758931455</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>CRC16 Catalogue</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  ARC</NoteLine>
   <NoteLine>Alias(es):  CRC-16; CRC-IBM; CRC-16/ARC; CRC-16/LHA</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h8005, &amp;h0, true, true, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  N/A</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/AUG-2-CCITT</NoteLine>
   <NoteLine>Alias(es):  CRC-16/SPI-FUJITSU</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;h84c0, false, false, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  Init value given as 0x1D0F but this is an augment prepended to the message.  Not necessarily the algorithm used in FlexRay communications.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/AUG-CCITT</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;h1d0f, false, false, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  Init value is equivalent to an augment of 0xFFFF prepended to the message.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/BT-CHIP</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;hffff, true, false, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  Used to talk to an unidentified Bluetooth transceiver. Not necessarily the algorithm used in Bluetooth communications.</NoteLine>
   <NoteLine>              For implementations that take a single Reflect parameter, specify True and manually reflect the result.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/BUYPASS</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h8005, &amp;h0, false, false, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  Reported for the multi-threaded portion of the Buypass transaction processing network.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/CCITT</NoteLine>
   <NoteLine>Alias(es):  CRC-16/CITT; CRC-CCITT</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;hffff, false, false, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  For the ITU-T algorithm see X.25.  Not the true CCITT algorithm according to Numeric Recipes, see KERMIT.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/DNP</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h3d65, &amp;h0, true, true, &amp;hffff)</NoteLine>
   <NoteLine>    Notes:  N/A</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/EN-13757</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h3d65, &amp;h0, false, false, &amp;hffff)</NoteLine>
   <NoteLine>    Notes:  N/A</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/I-CODE</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;hffff, false, false, &amp;hffff)</NoteLine>
   <NoteLine>    Notes:  Presented high byte first.  Remainder = 0x1D0F</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/MCRF4XX</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;hffff, true, true, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  Nibble oriented.  For byte wide algorithms swap nibbles of each byte.  CRC presented low nibble first.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  CRC-16/USB</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h8005, &amp;hffff, true, true, &amp;hffff)</NoteLine>
   <NoteLine>    Notes:  CRC appended low byte first.  Remainder = 0x800D.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  KERMIT</NoteLine>
   <NoteLine>Alias(es):  CRC-16/CCITT-TRUE</NoteLine>
   <NoteLine>crc16({strData}, &amp;h1021, &amp;hffff, false, false, &amp;h0)</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;h0, true, true, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  'Same as' the CCITT algorithm according to Numeric Recipes.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  MODBUS</NoteLine>
   <NoteLine>Alias(es):  N/A</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h8005, &amp;hffff, true, true, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  CRC presented low byte first.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  X-25</NoteLine>
   <NoteLine>Alias(es):  CRC-16/IBM-SDLC; CRC-16/ISO-HDLC</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;hffff, true, true, &amp;hffff)</NoteLine>
   <NoteLine>    Notes:  Remainder = 0xF0B8.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>     Name:  XMODEM</NoteLine>
   <NoteLine>Alias(es):  ZMODEM; CRC-16/ACORN</NoteLine>
   <NoteLine>     Call:  crc16({strData}, &amp;h1021, &amp;h0, false, false, &amp;h0)</NoteLine>
   <NoteLine>    Notes:  CRC presented MSB first.  Remainder = 0x0000.  Used in the MultiMediaCard interface.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>305874943</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  CRC-16 Checksum adapation for REALbasic</NoteLine>
   <NoteLine>  written by Eric D. Brown</NoteLine>
   <NoteLine>  improved by Thomas Tempelmann</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  See "CRC16 Catalogue" for possible checksum calls.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>-----------------------------------------------------------</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  CODE EXAMPLE:</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  dim checksum as new clsCrc16</NoteLine>
   <NoteLine>  dim intCrc   as integer</NoteLine>
   <NoteLine>  dim strData  as string</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  strData = "123456789"</NoteLine>
   <NoteLine>  intCrc  = checksum.crc16(strData, &amp;h8005, &amp;h0, true, true, &amp;h0)</NoteLine>
   <NoteLine>  statictext1.text = left("000", 4 - len(hex(str(intCrc)))) + hex(str(intCrc))  //displays the CRC in 16-bit HEX (ie. 00FF)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>-----------------------------------------------------------</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>crc16table(255)</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1630515199</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>crc16table(255) As int32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>crc16table(255) As int32</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mCCITT</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1620951039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared mCCITT As clsCRC16</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCCITT As clsCRC16</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Folder" ID="595281919">
 <ObjName>RemoveWhenUsingEinhugurPlugin</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
</block>
<block type="Module" ID="-1164257612">
 <ObjName>IStreamReader</ObjName>
 <ObjContainerID>595281919</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>1</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>624111615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(amount as Integer) As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>amount as Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="-1164257618">
 <ObjName>IStreamWriter</ObjName>
 <ObjContainerID>595281919</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>1</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1775136767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Write(data as String)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Folder" ID="1888749567">
 <ObjName>StreamSupport</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
</block>
<block type="Module" ID="480703551">
 <ObjName>FileReader</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>SeqDataInputStream</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>385884159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine>me.error = false</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>318877695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine>if me.bs &lt;&gt; nil then</SourceLine>
   <SourceLine>me.bs.Close</SourceLine>
   <SourceLine>me.bs = nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>388329471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>me.Close</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EOF</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1253052415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function EOF() As Boolean</SourceLine>
   <SourceLine>return me.bs = nil or me.bs.EOF</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1091530751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(f as FolderItem)</SourceLine>
   <SourceLine>// Constructor.</SourceLine>
   <SourceLine>// Pass a FolderItem to designate the file the stream should read from</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.f = f</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>941443071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code As Integer, ByRef msg As String)</SourceLine>
   <SourceLine>if me.error then</SourceLine>
   <SourceLine>code = -1</SourceLine>
   <SourceLine>msg = "open or read error"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>code = 0</SourceLine>
   <SourceLine>msg = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code As Integer, ByRef msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HadError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1242875903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HadError() As Boolean</SourceLine>
   <SourceLine>return me.error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2096834559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine>if me.bs &lt;&gt; nil then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if RBVersion &gt;= 2012</SourceLine>
   <SourceLine>me.bs = BinaryStream.Open(f, false)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>me.bs = f.OpenAsBinaryFile(false)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.error = me.bs = nil</SourceLine>
   <SourceLine>return not me.error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1329129471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(count As Integer) As String</SourceLine>
   <SourceLine>if me.bs = nil then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return me.bs.Read(count)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1951074303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count As UInt64) As Boolean</SourceLine>
   <SourceLine>dim newpos, pos, len as UInt64</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.bs = nil then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = me.bs.Position</SourceLine>
   <SourceLine>len = me.bs.Length</SourceLine>
   <SourceLine>newpos = pos + count</SourceLine>
   <SourceLine>if newpos &gt; len then</SourceLine>
   <SourceLine>// wants to skip more than available</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>me.bs.Position = newpos</SourceLine>
   <SourceLine>if me.bs.Position &lt;&gt; newpos then</SourceLine>
   <SourceLine>me.error = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return not me.error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Property>
  <ItemName>bs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2059669503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>bs As BinaryStream</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>bs As BinaryStream</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>error</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1822203903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>error As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>error As Boolean</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>f</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1096194047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>f As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>f As FolderItem</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="351118449">
 <ObjName>FileWriter</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>SeqDataOutputStream</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1091973119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine>me.error = false</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1480724479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Close() As Boolean</SourceLine>
   <SourceLine>if me.bs = nil then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if me.bs.Length &lt;&gt; me.written then</SourceLine>
   <SourceLine>if me.bs.Length &lt;&gt; mPreAllocated then</SourceLine>
   <SourceLine>me.error = true</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>me.bs.Length = me.written</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>me.bs.Close</SourceLine>
   <SourceLine>me.bs = nil</SourceLine>
   <SourceLine>return not me.error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2073628671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>if me.Close then</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>327426047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(f as FolderItem)</SourceLine>
   <SourceLine>// Constructor.</SourceLine>
   <SourceLine>// Pass a FolderItem to designate the file the stream should write to</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.f = f</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Flush</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1410486271</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Flush() As Boolean</SourceLine>
   <SourceLine>if me.bs = nil then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>bs.Flush</SourceLine>
   <SourceLine>if me.bs.Length &lt;&gt; me.written then</SourceLine>
   <SourceLine>me.error = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return not me.error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1119494143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code As Integer, ByRef msg As String)</SourceLine>
   <SourceLine>if me.error then</SourceLine>
   <SourceLine>code = -1</SourceLine>
   <SourceLine>msg = "open or write error"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>code = 0</SourceLine>
   <SourceLine>msg = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code As Integer, ByRef msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1611413503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine>if me.bs &lt;&gt; nil then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not f.exists then</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2012</SourceLine>
   <SourceLine>me.bs = BinaryStream.Create(f)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>me.bs = f.CreateBinaryFile("")</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2012</SourceLine>
   <SourceLine>me.bs = BinaryStream.Open(f, true)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>me.bs = f.OpenAsBinaryFile(true)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if me.bs &lt;&gt; nil then</SourceLine>
   <SourceLine>me.bs.Length = 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>me.error = (me.bs = nil) or (me.bs.Length &gt; 0)</SourceLine>
   <SourceLine>return not me.error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1032972287</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count As UInt64) As Boolean</SourceLine>
   <SourceLine>if me.bs = nil then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>me.written = me.written + count</SourceLine>
   <SourceLine>if me.bs.Length &lt; me.written then</SourceLine>
   <SourceLine>me.bs.Length = me.written</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1363056639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Write(data As String) As Boolean</SourceLine>
   <SourceLine>if me.bs = nil then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>me.written = me.written + LenB(data)</SourceLine>
   <SourceLine>me.bs.Write data</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data As String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>PreAllocate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>34402303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PreAllocate(count as UInt64)</SourceLine>
   <SourceLine>if me.bs = nil or count &lt; 0 then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mPreAllocated = count</SourceLine>
   <SourceLine>if me.bs.Length &lt; count then</SourceLine>
   <SourceLine>me.bs.Length = count</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count as UInt64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>bs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>432218111</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>bs As BinaryStream</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>bs As BinaryStream</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>error</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1577676799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>error As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>error As Boolean</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>f</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1615001599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>f As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>f As FolderItem</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>written</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>334641151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>written As UInt64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>written As UInt64</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mPreAllocated</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>408428543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mPreAllocated As Int64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mPreAllocated As Int64</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="2110210840">
 <ObjName>RsrcForkReader</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>SeqDataInputStream</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1514825727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine>me.errCode = 0</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1715943423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Declare Function FSCloseFork Lib CarbonLibName (refNum as Integer) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum &lt;&gt; 0 then</SourceLine>
   <SourceLine>res = FSCloseFork(me.refnum) // we can quite safely ignore the result</SourceLine>
   <SourceLine>me.refnum = 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>867151871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>me.Close</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EOF</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1482985471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function EOF() As Boolean</SourceLine>
   <SourceLine>return me.bytesRead &gt;= me.length or me.refnum = 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>783855615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code As Integer, ByRef msg As String)</SourceLine>
   <SourceLine>code = me.errCode</SourceLine>
   <SourceLine>if me.errCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>msg = "open or read error ("+Str(me.errCode)+")"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>msg = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code As Integer, ByRef msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HadError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1932828671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HadError() As Boolean</SourceLine>
   <SourceLine>return me.errCode &lt;&gt; 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>374026239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Declare Sub FSGetResourceForkName Lib CarbonLibName (resourceForkName as Ptr)</SourceLine>
   <SourceLine>Declare Function FSOpenFork Lib CarbonLibName (FSRef as Ptr, forkNameLength as Integer, forkName as Ptr, permissions as Byte, ByRef forkRefNum as Int16) as Integer</SourceLine>
   <SourceLine>Declare Function FSCloseFork Lib CarbonLibName (refNum as Integer) as Integer</SourceLine>
   <SourceLine>declare function FSGetForkSize Lib CarbonLibName (forkRefNum as Integer, ByRef v as Int64) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum &lt;&gt; 0 then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.ClearError</SourceLine>
   <SourceLine>me.refnum = 0</SourceLine>
   <SourceLine>me.length = 0</SourceLine>
   <SourceLine>me.bytesRead = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rsrcName as new MemoryBlock(512)</SourceLine>
   <SourceLine>FSGetResourceForkName (rsrcName)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine>dim fsref as MemoryBlock</SourceLine>
   <SourceLine>fsref = TTsFolderItem.FSRefOfFolderItem (f)</SourceLine>
   <SourceLine>if fsref &lt;&gt; nil then</SourceLine>
   <SourceLine>dim fileRef as Int16</SourceLine>
   <SourceLine>res = FSOpenFork(fsref, rsrcName.Int16Value(0), addPtr(rsrcName,2), 0, fileRef)</SourceLine>
   <SourceLine>if res = 0 then</SourceLine>
   <SourceLine>dim len as Int64</SourceLine>
   <SourceLine>res = FSGetForkSize (fileRef, len)</SourceLine>
   <SourceLine>if res = 0 then</SourceLine>
   <SourceLine>me.length = len</SourceLine>
   <SourceLine>me.refnum = fileRef</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>res = FSCloseFork(fileRef)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errCode = res</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>834451455</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(count As Integer) As String</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res, act, req as Integer</SourceLine>
   <SourceLine>dim mb as MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>declare function FSReadFork Lib CarbonLibName (forkRefNum as Integer, positionMode as Integer, positionOffset as Int64, requestCount as Integer, buffer as Ptr, ByRef actualCount as Integer) as Integer</SourceLine>
   <SourceLine>const fsAtMark = 0</SourceLine>
   <SourceLine>const fsFromStart = 1</SourceLine>
   <SourceLine>const fsFromLEOF = 2</SourceLine>
   <SourceLine>const fsFromMark = 3</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// don't read if there has been an error before</SourceLine>
   <SourceLine>if me.errCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum = 0 then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// make sure we do not read more than what's left in the file</SourceLine>
   <SourceLine>req = count</SourceLine>
   <SourceLine>if me.bytesRead + req &gt; me.length then</SourceLine>
   <SourceLine>req = me.length - me.bytesRead</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if req &lt;= 0 then</SourceLine>
   <SourceLine>return "" // EOF -- we've reached the end of file</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mb = new MemoryBlock(req) // a buffer to read the data into temporarily</SourceLine>
   <SourceLine>if mb = nil then</SourceLine>
   <SourceLine>raise new OutOfMemoryException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mb.LittleEndian = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>res = FSReadFork (me.refnum, fsFromMark, 0, req, mb, act)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if res = 0 and act &lt;&gt; req then</SourceLine>
   <SourceLine>res = -1 // something went very wrong here, maybe due to a bug in this class</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if res &lt; 0 then</SourceLine>
   <SourceLine>me.errCode = res</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.bytesRead = me.bytesRead + act</SourceLine>
   <SourceLine>return mb.StringValue(0,act)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1610532863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(f as FolderItem)</SourceLine>
   <SourceLine>me.f = f</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>350812159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count As UInt64) As Boolean</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res, req as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>declare function FSSetForkPosition Lib CarbonLibName (forkRefNum as Integer, positionMode as Integer, positionOffset as Int64) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// don't continue if there has been an error before</SourceLine>
   <SourceLine>if me.errCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum = 0 then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// make sure we do not get behind the end of file</SourceLine>
   <SourceLine>req =  count</SourceLine>
   <SourceLine>if me.bytesRead + req &gt; me.length then</SourceLine>
   <SourceLine>// we would be behind the EOF - seek to EOF and return as failure</SourceLine>
   <SourceLine>res = FSSetForkPosition(me.refnum, 1, me.length) // seeks from start of file</SourceLine>
   <SourceLine>me.bytesRead = me.length</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.bytesRead = me.bytesRead + req</SourceLine>
   <SourceLine>res = FSSetForkPosition(me.refnum, 1, me.bytesRead) // seeks from start of file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if res &lt; 0 then</SourceLine>
   <SourceLine>me.errCode = res</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>addPtr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>213938175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function addPtr(mb as MemoryBlock, ofs as Integer) As MemoryBlock</SourceLine>
   <SourceLine>dim helper as new MemoryBlock(8)</SourceLine>
   <SourceLine>helper.Ptr(0) = mb</SourceLine>
   <SourceLine>#if Target64Bit</SourceLine>
   <SourceLine>helper.UInt64Value(0) = helper.UInt64Value(0)+ofs</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>helper.UInt32Value(0) = helper.UInt32Value(0)+ofs</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>return helper.Ptr(0)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mb as MemoryBlock, ofs as Integer</ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Property>
  <ItemName>bytesRead</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1621932031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>bytesRead As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>bytesRead As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>errCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1761478655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>errCode As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>errCode As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>f</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>913940479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>f As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>f As FolderItem</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>length</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>832577535</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>length As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>length As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>refnum</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1830066175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>refnum As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>refnum As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="621174481">
 <ObjName>RsrcForkWriter</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>SeqDataOutputStream</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2007429119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine>me.errCode = 0</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1940328447</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Close() As Boolean</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Declare Function FSCloseFork Lib CarbonLibName (refNum as Integer) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum &lt;&gt; 0 then</SourceLine>
   <SourceLine>res = FSCloseFork(me.refnum)</SourceLine>
   <SourceLine>me.refnum = 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.errCode = 0 and res = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>515629055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>if me.Close then</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Flush</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1225691135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Flush() As Boolean</SourceLine>
   <SourceLine>if me.refnum = 0 then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return me.errCode = 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1593831423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code As Integer, ByRef msg As String)</SourceLine>
   <SourceLine>code = me.errCode</SourceLine>
   <SourceLine>if me.errCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>msg = "open or write error"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>msg = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code As Integer, ByRef msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1547331583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Declare Sub FSGetResourceForkName Lib CarbonLibName (resourceForkName as Ptr)</SourceLine>
   <SourceLine>Declare Function FSOpenFork Lib CarbonLibName (FSRef as Ptr, forkNameLength as Integer, forkName as Ptr, permissions as Byte, ByRef forkRefNum as Int16) as Integer</SourceLine>
   <SourceLine>Declare Function FSCloseFork Lib CarbonLibName (refNum as Integer) as Integer</SourceLine>
   <SourceLine>declare function FSSetForkSize Lib CarbonLibName (forkRefNum as Integer, posMode as Integer, v as Int64) as Integer</SourceLine>
   <SourceLine>const fsAtMark = 0</SourceLine>
   <SourceLine>const fsFromStart = 1</SourceLine>
   <SourceLine>const fsFromLEOF = 2</SourceLine>
   <SourceLine>const fsFromMark = 3</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum &lt;&gt; 0 then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.ClearError</SourceLine>
   <SourceLine>me.refnum = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim rsrcName as new MemoryBlock(512)</SourceLine>
   <SourceLine>FSGetResourceForkName (rsrcName)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine>dim fsref as MemoryBlock</SourceLine>
   <SourceLine>fsref = TTsFolderItem.FSRefOfFolderItem (f)</SourceLine>
   <SourceLine>if fsref &lt;&gt; nil then</SourceLine>
   <SourceLine>dim fileRef as Int16</SourceLine>
   <SourceLine>res = FSOpenFork(fsref, rsrcName.Int16Value(0), addPtr(rsrcName,2), 0, fileRef)</SourceLine>
   <SourceLine>if res = 0 then</SourceLine>
   <SourceLine>res = FSSetForkSize(fileRef, fsFromStart, 0)</SourceLine>
   <SourceLine>if res = 0 then</SourceLine>
   <SourceLine>me.refnum = fileRef</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>res = FSCloseFork(fileRef)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errCode = res</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1374648319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(f as FolderItem)</SourceLine>
   <SourceLine>me.f = f</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1661661183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count As UInt64) As Boolean</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res as Integer, pos as Int64</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>declare function FSSetForkPosition Lib CarbonLibName (forkRefNum as Integer, positionMode as Integer, positionOffset as Int64) as Integer</SourceLine>
   <SourceLine>declare function FSGetForkPosition Lib CarbonLibName (forkRefNum as Integer, ByRef positionOffset as Int64) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.errCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum = 0 then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>res = FSGetForkPosition(me.refnum, pos)</SourceLine>
   <SourceLine>if res = 0 then</SourceLine>
   <SourceLine>res = FSSetForkPosition(me.refnum, 1, pos +  count)</SourceLine>
   <SourceLine>if res = 0 then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errCode = res</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1990662143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Write(data As String) As Boolean</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res, act, req as Integer</SourceLine>
   <SourceLine>dim mb as MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Declare Function FSWriteFork Lib CarbonLibName (refNum as Integer, posMode as Integer, posOfs as Int64, req as Integer, buffPtr as Ptr, ByRef count as Integer) as Integer</SourceLine>
   <SourceLine>const fsAtMark = 0</SourceLine>
   <SourceLine>const fsFromStart = 1</SourceLine>
   <SourceLine>const fsFromLEOF = 2</SourceLine>
   <SourceLine>const fsFromMark = 3</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// don't write if there has been an error before</SourceLine>
   <SourceLine>if me.errCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.refnum = 0 then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>req = LenB(data)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mb = new MemoryBlock(req) // a temp buffer to write the data from</SourceLine>
   <SourceLine>if mb = nil then</SourceLine>
   <SourceLine>raise new OutOfMemoryException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mb.StringValue(0,req) = data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>res = FSWriteFork (me.refnum, fsFromMark, 0, req, mb, act)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if res = 0 and act &lt;&gt; req then</SourceLine>
   <SourceLine>res = -1 // something went very wrong here, maybe due to a bug in this class</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if res &lt; 0 then</SourceLine>
   <SourceLine>me.errCode = res</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data As String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>addPtr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>657264639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function addPtr(mb as MemoryBlock, ofs as Integer) As MemoryBlock</SourceLine>
   <SourceLine>dim helper as new MemoryBlock(8)</SourceLine>
   <SourceLine>helper.Ptr(0) = mb</SourceLine>
   <SourceLine>#if Target64Bit</SourceLine>
   <SourceLine>helper.UInt64Value(0) = helper.UInt64Value(0)+ofs</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>helper.UInt32Value(0) = helper.UInt32Value(0)+ofs</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>return helper.Ptr(0)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mb as MemoryBlock, ofs as Integer</ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>PreAllocate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1541001215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PreAllocate(count as UInt64)</SourceLine>
   <SourceLine>// here we could pre-allocate the length of the file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused count</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count as UInt64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>errCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>627623935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>errCode As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>errCode As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>f</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1866409983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>f As FolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>f As FolderItem</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>refnum</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1075609599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>refnum As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>refnum As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1311989817">
 <ObjName>SeqDataInputStream</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>1</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1297240063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1137330175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EOF</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1411608575</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function EOF() As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1565888511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code as Integer, ByRef msg as String)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code as Integer, ByRef msg as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HadError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>305494015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HadError() As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>359878655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2130423807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(count as Integer) As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count as Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2047346687</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count as UInt64) As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count as UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>611676159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>This Interface defines functions for sequentially reading data from</NoteLine>
   <NoteLine>binary streams.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>While it currently only defines one string-reading function, it could</NoteLine>
   <NoteLine>well be extended to support reading of all of RB's data types, such as</NoteLine>
   <NoteLine>ReadBoolean, ReadPString, etc., just like the ones that the RB class</NoteLine>
   <NoteLine>BinaryStream contains.</NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Note>
  <ItemName>Documentation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1097021439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Documentation</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Open () as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Shall be called once before any Read... calls. Shall return FALSE if</NoteLine>
   <NoteLine>  an error condition has arised (but not if there is just no data to</NoteLine>
   <NoteLine>  read because the stream is already empty). Shall return TRUE</NoteLine>
   <NoteLine>  otherwise.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Close ()</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Shall be called after all Read... calls have been performed. Allows</NoteLine>
   <NoteLine>  the called to close the stream.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Read (count as Integer) as String</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Reads "count" bytes from the input stream and returns them as a</NoteLine>
   <NoteLine>  string. If less than the requested amount of data is available, that</NoteLine>
   <NoteLine>  lesser amount shall be returned. If an error has occured or if no more</NoteLine>
   <NoteLine>  data is available, an empty string shall be returned.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  The caller is responsible for making sure that he has received as much</NoteLine>
   <NoteLine>  data as expected, for instance by checking the length of the returned</NoteLine>
   <NoteLine>  data with the LenB() function. If the amount is less than what was</NoteLine>
   <NoteLine>  requested, then the caller should check whether it was due to an error</NoteLine>
   <NoteLine>  or because no more data is available with the two functions EOF() and</NoteLine>
   <NoteLine>  Error().</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Skip (count as Integer) as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Similar to Read, but does not return the amount of data that's been</NoteLine>
   <NoteLine>  read or skipped. Returns TRUE if the skip was successful, FALSE if</NoteLine>
   <NoteLine>  not as many bytes could be skipped, which means that it might have</NoteLine>
   <NoteLine>  reached the end of the stream or that an error has occured.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>EOF () as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Shall return TRUE if there is no more data available to read from the</NoteLine>
   <NoteLine>  input stream.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>HadError () as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Shall return TRUE if an error condition has arisen since any of the</NoteLine>
   <NoteLine>  past calls to Open and Read, unless ClearError was called since an</NoteLine>
   <NoteLine>  error had occured.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>GetErrorDescription (ByRef code as Integer, ByRef msg as String)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  If an error had occured since the call to Open, the called shall set</NoteLine>
   <NoteLine>  'code' to a non-zero value, and the 'msg' string to a descriptive</NoteLine>
   <NoteLine>  message that could be shown to a user (for debugging, mostly). It is</NoteLine>
   <NoteLine>  recommended to set 'code' to -1 to flag a "unspecific error". If no</NoteLine>
   <NoteLine>  error condition exists, 'code' shall be set to 0 and 'msg' to an empty</NoteLine>
   <NoteLine>  string.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>ClearError ()</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Sets the error state to "no error"</NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="250783729">
 <ObjName>SeqDataOutputStream</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>1</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1064052735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>813717503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Close() As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Flush</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>688541695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Flush() As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1279541247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code as Integer, ByRef msg as String)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code as Integer, ByRef msg as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1514520575</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1891506175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count as UInt64) As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count as UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1992888319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Write(data as String) As Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>PreAllocate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2018529279</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PreAllocate(count as UInt64)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count as UInt64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1573984255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>This Interface defines functions for sequentially writing data to</NoteLine>
   <NoteLine>binary streams.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>While it currently only defines one string-writing function, it could</NoteLine>
   <NoteLine>well be extended to support writing of all of RB's data types, such as</NoteLine>
   <NoteLine>WriteBoolean, WritePString, etc., just like the ones that the RB class</NoteLine>
   <NoteLine>BinaryStream contains.</NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Note>
  <ItemName>Documentation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1754464255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Documentation</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Open () as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  If output stream goes to a file, the file will be created if it does not exist.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Shall be called once before any Write... calls. Shall return TRUE if</NoteLine>
   <NoteLine>  writing can continue, or FALSE if the output stream can't be written</NoteLine>
   <NoteLine>  to at all.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Close () as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Shall be called after all Write... calls have been performed. Allows</NoteLine>
   <NoteLine>  the called to close the stream. The called should make a final check</NoteLine>
   <NoteLine>  that the former writes were successful and return FALSE if it turns</NoteLine>
   <NoteLine>  out that there was an error. Should return TRUE if it is assumed that</NoteLine>
   <NoteLine>  all data was written successfully.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Write (data as String) as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Writes the string to the output stream. Returns FALSE if the write is</NoteLine>
   <NoteLine>  known to be unsuccessful, otherwise TRUE.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  This means that the caller can't be 100% sure that the write was</NoteLine>
   <NoteLine>  successful, but he should stop sendin more data as soon as this</NoteLine>
   <NoteLine>  function returns FALSE.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Skip (count as Integer) as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Similar to Write(), this will advance by the given amount of bytes</NoteLine>
   <NoteLine>  in the output stream, writing zeros or just changing the position</NoteLine>
   <NoteLine>  without overwriting any data. This means that in the case of a random</NoteLine>
   <NoteLine>  access file being the output of the stream, the skipped part may</NoteLine>
   <NoteLine>  still contain formerly written random data. The file must be extended</NoteLine>
   <NoteLine>  include the added amount, though.</NoteLine>
   <NoteLine>&#32;&#32;</NoteLine>
   <NoteLine>  The returned Boolean value follows the same rules as in Write()</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Flush () as Boolean</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Writes any outstanding data and checks that all data has been written</NoteLine>
   <NoteLine>  successfully - similar to Close, but without closing the stream.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>GetErrorDescription (ByRef code as Integer, ByRef msg as String)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  If an error had occured since the call to Open, the called shall set</NoteLine>
   <NoteLine>  'code' to a non-zero value, and the 'msg' string to a descriptive</NoteLine>
   <NoteLine>  message that could be shown to a user (for debugging, mostly). It is</NoteLine>
   <NoteLine>  recommended to set 'code' to -1 to flag a "unspecific error". If no</NoteLine>
   <NoteLine>  error condition exists, 'code' shall be set to 0 and 'msg' to an empty</NoteLine>
   <NoteLine>  string.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>ClearError ()</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Sets the error state to "no error"</NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1464645451">
 <ObjName>StringReader</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>FileReader</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>854005759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(data as String)</SourceLine>
   <SourceLine>me.bs = new BinaryStream(data)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4096</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1161510906">
 <ObjName>StringWriter</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>SeqDataOutputStream</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>177907711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>503754751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Close() As Boolean</SourceLine>
   <SourceLine>if not mOpened then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if mBuffer.Size &lt;&gt; mWritten then</SourceLine>
   <SourceLine>mBuffer.Size = mWritten</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mOpened = false</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>750917631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>call me.Close</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>450967551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// Constructor.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mBuffer = new MemoryBlock(0)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Flush</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>998293503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Flush() As Boolean</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>868308991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code As Integer, ByRef msg As String)</SourceLine>
   <SourceLine>code = 0</SourceLine>
   <SourceLine>msg = ""</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code As Integer, ByRef msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>867241983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine>mWritten = 0</SourceLine>
   <SourceLine>mOpened = true</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2121134079</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count As UInt64) As Boolean</SourceLine>
   <SourceLine>if not mOpened then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mWritten = mWritten + count</SourceLine>
   <SourceLine>allocSpace mWritten</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1388949503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Write(data As String) As Boolean</SourceLine>
   <SourceLine>if not mOpened then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>dim n as Int64 = LenB(data)</SourceLine>
   <SourceLine>dim newLen as Int64 = mWritten + n</SourceLine>
   <SourceLine>allocSpace newLen</SourceLine>
   <SourceLine>mBuffer.StringValue(mWritten,n) = data</SourceLine>
   <SourceLine>mWritten = newLen</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data As String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>WrittenData</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1267578879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function WrittenData() As MemoryBlock</SourceLine>
   <SourceLine>return mBuffer</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>PreAllocate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>777275391</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub PreAllocate(count as UInt64)</SourceLine>
   <SourceLine>if mBuffer.Size &lt; count then</SourceLine>
   <SourceLine>mBuffer.Size = count</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count as UInt64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>allocSpace</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1321152511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub allocSpace(space as Int64)</SourceLine>
   <SourceLine>if space &gt; mBuffer.Size then</SourceLine>
   <SourceLine>dim sizeToAdd as Int64 = Max (mBuffer.Size \ 2, 65636)</SourceLine>
   <SourceLine>PreAllocate mBuffer.Size + sizeToAdd</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>space as Int64</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>mBuffer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1031184383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mBuffer As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mBuffer As MemoryBlock</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mWritten</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1275533311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mWritten As UInt64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mWritten As UInt64</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mOpened</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>393564159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mOpened As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mOpened As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="887462718">
 <ObjName>SymlinkReader</ObjName>
 <ObjContainerID>1888749567</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>SeqDataInputStream</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ClearError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>486782975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ClearError()</SourceLine>
   <SourceLine>me.error = false</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1208360959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine>mOpened = false</SourceLine>
   <SourceLine>mSymlinkData = nil</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2107715583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>me.Close</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EOF</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>219207679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function EOF() As Boolean</SourceLine>
   <SourceLine>return not mOpened or mReadOfs &gt;= mSymlinkData.Size</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>312397823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(f as TTsFolderItem)</SourceLine>
   <SourceLine>// Constructor.</SourceLine>
   <SourceLine>// Pass a FolderItem to designate the file the stream should read from</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.f = f</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as TTsFolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetErrorDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2117509119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetErrorDescription(ByRef code As Integer, ByRef msg As String)</SourceLine>
   <SourceLine>if me.error then</SourceLine>
   <SourceLine>code = -1</SourceLine>
   <SourceLine>msg = "open or read error"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>code = 0</SourceLine>
   <SourceLine>msg = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef code As Integer, ByRef msg As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>HadError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>649734143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HadError() As Boolean</SourceLine>
   <SourceLine>return me.error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1306210303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open() As Boolean</SourceLine>
   <SourceLine>if mOpened then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>soft declare function readlink lib SystemLib (path as CString, outbuf as Ptr, bufsize as Integer) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine>dim buf as new MemoryBlock(PATH_MAX)</SourceLine>
   <SourceLine>res = readlink (f.UnixPath, buf, buf.Size)</SourceLine>
   <SourceLine>if res &gt;= 0 then</SourceLine>
   <SourceLine>mOpened = true</SourceLine>
   <SourceLine>mReadOfs = 0</SourceLine>
   <SourceLine>mSymlinkData = buf.StringValue(0, res)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>catch</SourceLine>
   <SourceLine>// oops, function not available?</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.error = not mOpened</SourceLine>
   <SourceLine>return mOpened</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>438099967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(count As Integer) As String</SourceLine>
   <SourceLine>if not mOpened then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim remain as Integer </SourceLine>
   <SourceLine>remain = mSymlinkData.Size - mReadOfs</SourceLine>
   <SourceLine>if count &gt; remain then count = remain</SourceLine>
   <SourceLine>dim ofs as Integer</SourceLine>
   <SourceLine>ofs = mReadOfs</SourceLine>
   <SourceLine>mReadOfs = mReadOfs + count</SourceLine>
   <SourceLine>return mSymlinkData.StringValue (ofs, count)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Skip</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2142640127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Skip(count As UInt64) As Boolean</SourceLine>
   <SourceLine>if not mOpened then</SourceLine>
   <SourceLine>raise new RuntimeException // did you forget to call Open()?</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim newpos, len as UInt64</SourceLine>
   <SourceLine>len = mSymlinkData.Size</SourceLine>
   <SourceLine>newpos = mReadOfs + count</SourceLine>
   <SourceLine>if newpos &gt; len then</SourceLine>
   <SourceLine>// wants to skip more than available</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mReadOfs = newpos</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>count As UInt64</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Property>
  <ItemName>error</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1926033407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>error As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>error As Boolean</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mOpened</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>814419967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mOpened As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mOpened As Boolean</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mSymlinkData</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1715279871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mSymlinkData As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mSymlinkData As MemoryBlock</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>f</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1270224895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>f As TTsFolderItem</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>f As TTsFolderItem</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mReadOfs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>56053759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mReadOfs As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mReadOfs As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="862982347">
 <ObjName>ZipArchive</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ZipArchiveBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <HookInstance>
  <ItemName>SetExternalAttributes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1059706879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetExternalAttributes(f as TTsFolderItem, dos_pathname as String, entry as ZipEntry)</SourceLine>
   <SourceLine>// This function gets called by ZipArchiveBase.z_addItem() whenever a folder or file has been</SourceLine>
   <SourceLine>// added to the archive.</SourceLine>
   <SourceLine>// Its purpose is to set additional values in the zip dir entry, such as the DOS attributes and</SourceLine>
   <SourceLine>// Unix file permissions.</SourceLine>
   <SourceLine>// You usually do not have to change this code unless you have special needs.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused dos_pathname</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mode as Integer = f.UnixStatMode</SourceLine>
   <SourceLine>if mode &lt;&gt; 0 then</SourceLine>
   <SourceLine>// set the unix permissions in the upper 16 bit of the "external attributes"</SourceLine>
   <SourceLine>entry.SetOSMadeBy 3 // unix</SourceLine>
   <SourceLine>entry.SetExternalFileAttributes (ZipArchiveData.ShiftLeft16(mode) or (entry.ExternalFileAttributes and &amp;hFFFF))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not f.IsWriteable then</SourceLine>
   <SourceLine>// set bit 0 ("read-only") in the DOS File Attribute</SourceLine>
   <SourceLine>entry.SetExternalFileAttributes (entry.ExternalFileAttributes or 1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not f.Visible then</SourceLine>
   <SourceLine>// set bit 1 ("hidden") in the DOS File Attribute</SourceLine>
   <SourceLine>entry.SetExternalFileAttributes (entry.ExternalFileAttributes or 2)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>// The directory bit (#4) should already be set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
 </HookInstance>
 <Method>
  <ItemName>AddFakeDuplicate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1187006463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddFakeDuplicate(entry as ZipEntry, newRawDOSPath as String, newDate as Date, newExtraField as ZipExtraField) As Integer</SourceLine>
   <SourceLine>// Caution: This adds a new entry to the central directory, referring to an existing</SourceLine>
   <SourceLine>// local entry. This added entry's file name, date and Extra Field may differ from</SourceLine>
   <SourceLine>// the local header, which means it may not be seen as valid by other Zip tools.</SourceLine>
   <SourceLine>// Because of this, use this function with caution, preferrably only if you plan</SourceLine>
   <SourceLine>// to unpack the archive with this Zip package, which knows about this special case</SourceLine>
   <SourceLine>// and does not consider it an error.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note that some Zip unarchiving tools cannot handle fake entries. This includes the Unzip</SourceLine>
   <SourceLine>// tool the Mac OS X Finder uses to uncompress a Zip archive.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// A fake entry is marked this way: There is a bit in the header flags that indicates whether the</SourceLine>
   <SourceLine>// length and CRC information is present right in the header or instead behind the compressed data.</SourceLine>
   <SourceLine>// This bit (#3) will set in the central directory header's flags, while it will be clear in the local</SourceLine>
   <SourceLine>// header. This combination is not occuring in normal archives, and using this bit for this purpose</SourceLine>
   <SourceLine>// ensures that the fake entries can usually still be unpacked in some way using standard zip tools.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Parameters:</SourceLine>
   <SourceLine>//   newRawDOSPath: the new file name and path (stored only in the central dir, not the local header);</SourceLine>
   <SourceLine>//     note that this name uses "/" as directory separator (see the CleanName function)</SourceLine>
   <SourceLine>//   newDate: if not nil, this date will be recorded as the item's date in the central dir only,</SourceLine>
   <SourceLine>//     otherwise the old date will be used.</SourceLine>
   <SourceLine>//   newExtraField: if not nil, this new extra field will be stored in the central dir,</SourceLine>
   <SourceLine>//     otherwise the old extra field will be used.</SourceLine>
   <SourceLine>// Returns the index to the added entry (which is &gt;= 1), or 0 or a negative value in case of an error.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim newEntry as ZipEntry, fh as MemoryBlock, dosEncName as String, ef as ZipExtraField</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// do we allow writing at all?</SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if entry = nil then</SourceLine>
   <SourceLine>me.errmsg = "no entry reference given"</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dosEncName = me.d.encodeForZip(newRawDOSPath)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if newExtraField &lt;&gt; nil then</SourceLine>
   <SourceLine>ef = newExtraField</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ef = entry.ExtraField // we handle EF's as immutable, so we do not need to clone it here</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fh = z_cloneMB(entry.z_Header)</SourceLine>
   <SourceLine>fh.UInt16Value(28) = LenB(dosEncName)</SourceLine>
   <SourceLine>if d &lt;&gt; nil then</SourceLine>
   <SourceLine>// update item's date/time</SourceLine>
   <SourceLine>fh.UInt16Value(12) = newDate.Second \ 2 + 32 * newDate.Minute + 2048 * newDate.Hour</SourceLine>
   <SourceLine>fh.UInt16Value(14) = newDate.Day + 32 * newDate.Month + 512 *  Max(0, newDate.Year-1980)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// let's mark this fake entry so that we can later identify it</SourceLine>
   <SourceLine>fh.UInt16Value(8) =  Bitwise.BitOr(fh.UInt16Value(8), 8) // set bit 3 in the Flags field of the central dir header only</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>newEntry = new ZipEntry(me.d, fh, dosEncName, ef, entry.Comment)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// add the new entry to the directory and we're finished</SourceLine>
   <SourceLine>me.d.entries_1.append newEntry</SourceLine>
   <SourceLine>return Ubound(me.d.entries_1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "An unexpected error occured while adding a duplicate item: "+ZipConfig.ShortDescription(exc)</SourceLine>
   <SourceLine>return -1</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>entry as ZipEntry, newRawDOSPath as String, newDate as Date, newExtraField as ZipExtraField</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>AddFolderContents</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1959032831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddFolderContents(folder as FolderItem, prefixDOSPath as String, useMacBinary as Integer, aliasHandling as MacAliasHandling, includeInvisibles as Boolean) As Boolean</SourceLine>
   <SourceLine>// Adds an entire folder's contents to the archive. The immediate contents of</SourceLine>
   <SourceLine>//   the given folder will be put relatively to the "prefixDOSPath". Pass an</SourceLine>
   <SourceLine>//   empty string or "/" to store them in the root of the archive directory</SourceLine>
   <SourceLine>//   (a leading "/" in the string will always be ignored).</SourceLine>
   <SourceLine>//   Be careful not to blindly pass names of FolderItems here, because they might</SourceLine>
   <SourceLine>//   contain "/", which is a valid name char in Mac OS 9 but not in Windows.</SourceLine>
   <SourceLine>//   Use ZipArchive.CleanName() on a name to change a FolderItem.Name into a</SourceLine>
   <SourceLine>//   valid zip file name.</SourceLine>
   <SourceLine>// To store or follow aliases, pass any of the ZipArchive.MacAliasHandling enum</SourceLine>
   <SourceLine>//   values. Note that you can not have Aliases to folders followed because this</SourceLine>
   <SourceLine>//   could lead to infinite loops (a safety check for this could be added but has</SourceLine>
   <SourceLine>//   not yet). Note that even if useMacBinary is FALSE, it will be temporarily</SourceLine>
   <SourceLine>//   enabled to store any aliases.</SourceLine>
   <SourceLine>// useMacBinary: pass either of the MacBinary... functions from this class</SourceLine>
   <SourceLine>// includeInvisibles: pass false if you do not want hidden files and folder stores</SourceLine>
   <SourceLine>//   (this includes, on OSX and Linux, files starting with a period such as ".DS_Store")</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim s as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>s = ReplaceAll(prefixDOSPath+"/","//","/")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_addFolderContents(folder, s, aliasHandling, useMacBinary, includeInvisibles, false, true) = 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>folder as FolderItem, prefixDOSPath as String, useMacBinary as Integer, aliasHandling as MacAliasHandling, includeInvisibles as Boolean</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>AddItemByStreams</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>305055743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddItemByStreams(dataStream as SeqDataInputStream, dataLen as Integer, rsrcStream as SeqDataInputStream, rsrcLen as Integer, macBinaryHeader as MemoryBlock, rawDOSPath as String, extra as ZipExtraField, fileDate as Date, mayCompress as Boolean = true) As Integer</SourceLine>
   <SourceLine>// Like AddItemWithRawPath, but allows you to provide the data and resource fork</SourceLine>
   <SourceLine>//   streams separately.</SourceLine>
   <SourceLine>// If you want the item stored with a resource fork, then it will be stored in</SourceLine>
   <SourceLine>//   MacBinary format, which also means you have to provide the MacBinary</SourceLine>
   <SourceLine>//   header explicitly. Call MakeMacBinaryHeader() and pass its value as the</SourceLine>
   <SourceLine>//   'macBinaryHeader' parameter to this function.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Be careful not to pass a macBinaryHeader for folders (it's a folder if rawDOSPath</SourceLine>
   <SourceLine>//   end with a "/"), because that would cause confusion when unpacking them</SourceLine>
   <SourceLine>//   with software that is not MacBinary-aware (which is the case for most</SourceLine>
   <SourceLine>//   non-Mac tools).</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>//   if 'macBinaryHeader' is nil, then the 'rsrcStream' parameter must be nil, too</SourceLine>
   <SourceLine>//   if 'rsrcStream' is not nil, then the 'macBinaryHeader' parameter must not be</SourceLine>
   <SourceLine>//     nil, either.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim idx as Integer</SourceLine>
   <SourceLine>dim mbHdr as MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if macBinaryHeader = nil and rsrcStream &lt;&gt; nil then</SourceLine>
   <SourceLine>raise new RuntimeException // not allowed, see preconditions above</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>idx = z_zip(dataStream, dataLen, rsrcStream, rsrcLen, mbHdr, rawDOSPath, fileDate, extra, mayCompress)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return idx</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>dataStream as SeqDataInputStream, dataLen as Integer, rsrcStream as SeqDataInputStream, rsrcLen as Integer, macBinaryHeader as MemoryBlock, rawDOSPath as String, extra as ZipExtraField, fileDate as Date, mayCompress as Boolean = true</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>AddItemToRoot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1163003903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddItemToRoot(f as FolderItem, useMacBinary as Integer, mayCompress as Boolean = true) As Integer</SourceLine>
   <SourceLine>// Stores (and compresses) a file or folder in the archive. It does</SourceLine>
   <SourceLine>//  this by appending the file data always to the end of the archive,</SourceLine>
   <SourceLine>//  never replacing existing, even deleted, space in the middle of it.</SourceLine>
   <SourceLine>// This also appends the entry to the list of entries (directory).</SourceLine>
   <SourceLine>// A ZipEntry object is created that describes the stored item,</SourceLine>
   <SourceLine>//   f.name as the item's name. This entry is appended to the list of</SourceLine>
   <SourceLine>//   archive entries and its index is returned by this function.</SourceLine>
   <SourceLine>// If this function returns 0 or a negative number, an error had</SourceLine>
   <SourceLine>//   occured (ErrorMessage() will then provide a descriptive msg).</SourceLine>
   <SourceLine>// The path, comment and other information may then be modified</SourceLine>
   <SourceLine>//   by fetching the entry with Entry(), then calling the entry's</SourceLine>
   <SourceLine>//   Set... methods.</SourceLine>
   <SourceLine>// useMacBinary: pass either of the MacBinary... functions from this class</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine>// - The file's size must be below 2GB (2^31) - a ZIP limitation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim name as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if f &lt;&gt; nil then</SourceLine>
   <SourceLine>name = me.d.cleanName(f.name)</SourceLine>
   <SourceLine>if f.Directory then</SourceLine>
   <SourceLine>name = name + "/"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_addItem(new TTsFolderItem(f), name, useMacBinary, false, mayCompress)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, useMacBinary as Integer, mayCompress as Boolean = true</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>AddItemWithRawPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>585486335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddItemWithRawPath(f as FolderItem, rawDOSPath as String, useMacBinary as Integer, mayCompress as Boolean = true) As Integer</SourceLine>
   <SourceLine>// Like AddItemToRoot(), but allows you to provide the name as it shall</SourceLine>
   <SourceLine>//   appear in the archive directory. You can construct this name by</SourceLine>
   <SourceLine>//   using one of the two RawPath() functions.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_addItem(new TTsFolderItem(f), rawDOSPath, useMacBinary, false, mayCompress)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, rawDOSPath as String, useMacBinary as Integer, mayCompress as Boolean = true</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>AllEntriesAsRawPaths</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>951345151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AllEntriesAsRawPaths() As String()</SourceLine>
   <SourceLine>// Returns an array of all current entries in the directory. Useful for debugging.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// To quickly view the list, use either:</SourceLine>
   <SourceLine>//   MsgBox Join(zar.AllEntriesAsRawPaths(), EndOfLine)</SourceLine>
   <SourceLine>// or:</SourceLine>
   <SourceLine>//   System.DebugLog Join(zar.AllEntriesAsRawPaths(), EndOfLine)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim list() as String</SourceLine>
   <SourceLine>dim idx, lastIdx as Integer</SourceLine>
   <SourceLine>lastIdx = Ubound(me.d.entries_1)</SourceLine>
   <SourceLine>for idx = 1 to lastIdx</SourceLine>
   <SourceLine>list.Append me.d.entries_1(idx).RawPath()</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return list</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String()</ItemResult>
 </Method>
 <Method>
  <ItemName>CalcFolderSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>857360383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CalcFolderSize(folder as FolderItem, useMacBinary as Integer, aliasHandling as MacAliasHandling, includeInvisibles as Boolean) As Int64</SourceLine>
   <SourceLine>// Calculates the size of all items to store in the archive, without actually adding them.</SourceLine>
   <SourceLine>// Useful to know in advance when showing a progress bar during the actual archiving process.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_addFolderContents(folder, "", aliasHandling, useMacBinary, includeInvisibles, true, false)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>folder as FolderItem, useMacBinary as Integer, aliasHandling as MacAliasHandling, includeInvisibles as Boolean</ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>CalcItemSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1516550143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CalcItemSize(f as FolderItem, useMacBinary as Integer) As Int64</SourceLine>
   <SourceLine>// returns the size that the file would report via the ZipProgressNotifier</SourceLine>
   <SourceLine>// when it would be stored in the archive using AddItem...()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_addItem(new TTsFolderItem(f), "", useMacBinary, true, false)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, useMacBinary as Integer</ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>CleanName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1881075711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CleanName(s as String) As String</SourceLine>
   <SourceLine>// If you want to pass an existing file name to the "DOSPath" parameter of</SourceLine>
   <SourceLine>// one of the Add... functions, you should clean this name with this function first!</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// "/" and "\" are illegal chars in DOS file names and Zip archives, so we need to replace them with legal chars:</SourceLine>
   <SourceLine>return me.d.cleanName(s)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>s as String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1886789631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Close() As Boolean</SourceLine>
   <SourceLine>// Closes access to an opened archive, writing back all changes to the entries list (directory)</SourceLine>
   <SourceLine>// Returns FALSE if an error occured</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note: If this call fails (i.e. FALSE is returned), the archive is probably corrupted</SourceLine>
   <SourceLine>// and should be deleted if it was just created. In other cases, other tools might be</SourceLine>
   <SourceLine>// able to recover part or all of the archive (but this software is not designed for it)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// May be called even if no archive was open (returns TRUE then)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.d = nil then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.tree = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim error as Boolean</SourceLine>
   <SourceLine>if me.d.zipStream &lt;&gt; nil and not z_writeDirectory() then</SourceLine>
   <SourceLine>error = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.cleanup</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.entriesRead = false</SourceLine>
   <SourceLine>me.justCreated = false</SourceLine>
   <SourceLine>me.marked = false</SourceLine>
   <SourceLine>me.writeMode = false</SourceLine>
   <SourceLine>me.writeSequentially = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return not error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Comment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>944973823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Comment() As String</SourceLine>
   <SourceLine>// Returns the optional comment about the archive. Returns empty string if no comment available</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.comment_</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Compact</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2106863615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Compact() As Boolean</SourceLine>
   <SourceLine>// Rewrites the entire archive, removing any unused</SourceLine>
   <SourceLine>//   (i.e. deleted) space in between.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim flags as UInt64</SourceLine>
   <SourceLine>dim i, n, entryCnt as Integer, e as ZipEntry, fh, hdr as MemoryBlock</SourceLine>
   <SourceLine>dim lastOffset, readpos, writepos as Int64, error as Boolean</SourceLine>
   <SourceLine>dim zipStream as BinaryStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zipStream = me.d.zipStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// How this will work:</SourceLine>
   <SourceLine>// A list of all the entries is created, then this list is sorted</SourceLine>
   <SourceLine>//   by the offset of their compressed data in the archive.</SourceLine>
   <SourceLine>// Then the archive will be rewritten, skipping parts that</SourceLine>
   <SourceLine>//   are between these entries.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>entryCnt = Ubound(me.d.entries_1)</SourceLine>
   <SourceLine>n = entryCnt - 1</SourceLine>
   <SourceLine>redim me.compactEntries(n) // sorted index of entries</SourceLine>
   <SourceLine>redim me.compactOffset(n) // sorted offset of entries' data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to entryCnt</SourceLine>
   <SourceLine>e = me.d.entries_1(i)</SourceLine>
   <SourceLine>hdr = e.z_Header()</SourceLine>
   <SourceLine>me.compactEntries(i-1) = hdr</SourceLine>
   <SourceLine>me.compactOffset(i-1) = hdr.UInt32Value(42)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>z_ArrayQuickSort(0, Ubound(me.compactEntries))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// now the list has been sorted and we can begin to rewrite the archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Note: With the possible presence of fake entries, it gets complicated.</SourceLine>
   <SourceLine>// A fake entry does not provide the real size of the local entry. This</SourceLine>
   <SourceLine>// means that the local header has to be read to figure out its real size.</SourceLine>
   <SourceLine>// For this reason we do read every local header, even if readpos</SourceLine>
   <SourceLine>// equals writepos.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.marked = false</SourceLine>
   <SourceLine>me.d.dirty = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fh = new MemoryBlock(30)</SourceLine>
   <SourceLine>fh.LittleEndian = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = 0</SourceLine>
   <SourceLine>writepos = 0</SourceLine>
   <SourceLine>lastOffset = -1</SourceLine>
   <SourceLine>for i = 0 to Ubound(me.compactEntries)</SourceLine>
   <SourceLine>readpos = me.compactOffset(i)</SourceLine>
   <SourceLine>hdr = me.compactEntries(i)</SourceLine>
   <SourceLine>if lastOffset = readpos then</SourceLine>
   <SourceLine>// this comes from a repeat (fake) entry - repeat with the last written item</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>writepos = writepos + n</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// read the Local File Header</SourceLine>
   <SourceLine>zipStream.Position = readpos</SourceLine>
   <SourceLine>fh.StringValue(0,30) = zipStream.Read(30)</SourceLine>
   <SourceLine>// make sure the data is consistent with our Directory record</SourceLine>
   <SourceLine>if fh.UInt32Value(0) &lt;&gt; &amp;h04034B50 then</SourceLine>
   <SourceLine>me.errmsg = "Invalid Local File Header signature (archive appears to be severely corrupted)"</SourceLine>
   <SourceLine>error = true</SourceLine>
   <SourceLine>exit</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim forceRewrite as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>flags = fh.UInt16Value(6)</SourceLine>
   <SourceLine>if Bitwise.BitAnd(flags,8) &lt;&gt; 0 then</SourceLine>
   <SourceLine>// we can now remove the Data Descriptor and update the File Header fields properly</SourceLine>
   <SourceLine>fh.UInt32Value(14) = hdr.UInt32Value(16)</SourceLine>
   <SourceLine>fh.UInt32Value(18) = hdr.UInt32Value(20)</SourceLine>
   <SourceLine>fh.UInt32Value(22) = hdr.UInt32Value(24)</SourceLine>
   <SourceLine>fh.UInt16Value(6) = Bitwise.BitAnd(flags,65535-8)</SourceLine>
   <SourceLine>forceRewrite = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>// make sure the values match those from the directory</SourceLine>
   <SourceLine>if fh.UInt16Value(8) &lt;&gt; hdr.UInt16Value(10) or fh.UInt32Value(14) &lt;&gt; hdr.UInt32Value(16) or fh.UInt32Value(18) &lt;&gt; hdr.UInt32Value(20) or fh.UInt32Value(22) &lt;&gt; hdr.UInt32Value(24) or (flags &lt;&gt; hdr.UInt16Value(8)) and not me.d.isFakeEntry(hdr,flags) then</SourceLine>
   <SourceLine>// oops, something does not fit. Could be an error in the archive, or in our code here.</SourceLine>
   <SourceLine>// let's better not mess any further with it.</SourceLine>
   <SourceLine>me.errmsg = "File Headers mismatch (archive appears to be severely corrupted)"</SourceLine>
   <SourceLine>error = true</SourceLine>
   <SourceLine>exit</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>n = 30 + fh.UInt32Value(18) + fh.UInt16Value(26) + fh.UInt16Value(28)</SourceLine>
   <SourceLine>if readpos &lt;&gt; writepos or forceRewrite then</SourceLine>
   <SourceLine>zipStream.Position = writepos</SourceLine>
   <SourceLine>zipStream.Write fh.StringValue(0,30)</SourceLine>
   <SourceLine>z_copy readpos+30, writepos+30, n - 30</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>lastOffset = readpos</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>// finally, update the offset of this file in the directory entry</SourceLine>
   <SourceLine>hdr.UInt32Value(42) = writepos</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not error then</SourceLine>
   <SourceLine>me.startOfDirInArchive = writepos + n</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// free up the space used by the class-wide arrays</SourceLine>
   <SourceLine>redim me.compactEntries(-1)</SourceLine>
   <SourceLine>redim me.compactOffset(-1)</SourceLine>
   <SourceLine>return not error</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Compact() encountered an unexpected error"</SourceLine>
   <SourceLine>// free up the space used by the class-wide arrays</SourceLine>
   <SourceLine>redim me.compactEntries(-1)</SourceLine>
   <SourceLine>redim me.compactOffset(-1)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1126324223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// default constructor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>z_setup</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>DefaultOSMadeBy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1160323071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DefaultOSMadeBy() As Integer</SourceLine>
   <SourceLine>return me.d.defaultOSMadeBy</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1777887231</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>// destructor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ok, deleteIfFails as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.d &lt;&gt; nil and me.d.zipStream &lt;&gt; nil and me.justCreated then</SourceLine>
   <SourceLine>deleteIfFails = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ok = me.Close()</SourceLine>
   <SourceLine>if not ok and deleteIfFails and me.d.theFile &lt;&gt; nil then</SourceLine>
   <SourceLine>me.d.theFile.Delete</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>// ignore</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EncodedAsDOSLatinUS</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2008633343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function EncodedAsDOSLatinUS() As TextEncoding</SourceLine>
   <SourceLine>// Use this to open archives created or meant for most Zip tools (on PCs, Unix, Linux, etc.)</SourceLine>
   <SourceLine>// Pass the result of this function to the 3rd parameter of Open()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return GetTextEncoding(&amp;H400) // code page 437</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TextEncoding</ItemResult>
 </Method>
 <Method>
  <ItemName>EncodedAsMacDefault</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>18270207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function EncodedAsMacDefault() As TextEncoding</SourceLine>
   <SourceLine>// Use this to open archives created by or for ZipIt up to v2.2 (http://www.maczipit.com/)</SourceLine>
   <SourceLine>// Note: This call does not work on Windows, only on Mac OS, so avoid this</SourceLine>
   <SourceLine>//   encoding if you create archives for interchange with Windows.</SourceLine>
   <SourceLine>// Pass the result of this function to the 3rd parameter of Open()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>static enc as TextEncoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if enc = nil then</SourceLine>
   <SourceLine>enc = GetFontTextEncoding("System")</SourceLine>
   <SourceLine>if enc = nil then</SourceLine>
   <SourceLine>enc = Encodings.MacRoman</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return enc</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TextEncoding</ItemResult>
 </Method>
 <Method>
  <ItemName>EncodedAsUnicode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>619126783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function EncodedAsUnicode() As TextEncoding</SourceLine>
   <SourceLine>// Use this to open archives created by or for ZipIt v2.2.2 or later (http://www.maczipit.com/)</SourceLine>
   <SourceLine>// Use this also if you're planning to read/write the archive only with this software, because</SourceLine>
   <SourceLine>// the use of Unicode is causing the least amout of problems with all the possible languages (scripts)</SourceLine>
   <SourceLine>// Pass the result of this function to the 3rd parameter of Open()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Encodings.UTF8</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TextEncoding</ItemResult>
 </Method>
 <Method>
  <ItemName>EncodedAsWinLatin1</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>22661119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function EncodedAsWinLatin1() As TextEncoding</SourceLine>
   <SourceLine>// Use this to open archives created by or for Aladdin's Stuffit (http://www.aladdinsys.com/)</SourceLine>
   <SourceLine>// Pass the result of this function to the 3rd parameter of Open()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return GetTextEncoding(&amp;H500) // WinLatin1</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>TextEncoding</ItemResult>
 </Method>
 <Method>
  <ItemName>Entry</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1603833855</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Entry(index_1 as Integer) As ZipEntry</SourceLine>
   <SourceLine>// Returns an entry from the directory of files in the archive.</SourceLine>
   <SourceLine>// The index starts with 1, and must be between 1 and EntryCount()</SourceLine>
   <SourceLine>// The entries have no particular order, and may contain directory entries</SourceLine>
   <SourceLine>//   with no actual file data.</SourceLine>
   <SourceLine>// Be aware that the Zip format allows it that several entries with the same</SourceLine>
   <SourceLine>//   name exist in the archive. So, if you extract all entries, be aware that you</SourceLine>
   <SourceLine>//   might get duplicate name conflicts.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.entriesRead then</SourceLine>
   <SourceLine>// oops - archive is not open</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if index_1 &lt; 1 then</SourceLine>
   <SourceLine>raise new OutOfBoundsException // index must be at least 1</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.d.entries_1(index_1)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index_1 as Integer</ItemParams>
  <ItemResult>ZipEntry</ItemResult>
 </Method>
 <Method>
  <ItemName>EntryCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>499855359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function EntryCount() As Integer</SourceLine>
   <SourceLine>// Returns the number of entries from the directory of files in the archive.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.entriesRead then</SourceLine>
   <SourceLine>// oops - archive is not open</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Ubound(me.d.entries_1)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>EntryIdxByRawPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1928531967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function EntryIdxByRawPath(path as String, startIdx as Integer = 1) As Integer</SourceLine>
   <SourceLine>// Looks up an entry by name, starting either at the start of the list of entries or at the given index (which has to be between 1 and EntryCount+1)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.entriesRead then</SourceLine>
   <SourceLine>// oops - archive is not open</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if startIdx &lt; 1 or startIdx &gt; EntryCount+1 then</SourceLine>
   <SourceLine>raise new OutOfBoundsException // index must be at least 1</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.d.lookup (me.z_pathToEncName(path), startIdx)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>path as String, startIdx as Integer = 1</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ErrorMessage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>673572863</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ErrorMessage() As String</SourceLine>
   <SourceLine>// Returns a description about the latest error as an english phrase</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Function calls that could cause such an error:</SourceLine>
   <SourceLine>// - Open()</SourceLine>
   <SourceLine>// - Close()</SourceLine>
   <SourceLine>// - AddItemToRoot()</SourceLine>
   <SourceLine>// - AddItemWithRawPath()</SourceLine>
   <SourceLine>// - AddItemByStreams()</SourceLine>
   <SourceLine>// - AddFolderContents()</SourceLine>
   <SourceLine>// - AddFakeDuplicate()</SourceLine>
   <SourceLine>// - Compact()</SourceLine>
   <SourceLine>// - RemoveEntry()</SourceLine>
   <SourceLine>// - ReplaceEntry()</SourceLine>
   <SourceLine>// - SetComment()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.errmsg</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Flush</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>414064639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Flush() As Boolean</SourceLine>
   <SourceLine>// Write the directory information back to the archive</SourceLine>
   <SourceLine>//   so that it's in a valid state. You might want to call</SourceLine>
   <SourceLine>//   this after you made changes to an archive but plan</SourceLine>
   <SourceLine>//   to keep the archive open for longer.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.entriesRead then</SourceLine>
   <SourceLine>// oops - archive is not open</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not z_writeDirectory() then</SourceLine>
   <SourceLine>return true // we just ignore Flush calls on a read-only archive</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not z_writeDirectory() then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsCorrupted</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1578778623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsCorrupted() As Boolean</SourceLine>
   <SourceLine>return me.centralDirCorrupted</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsOpen</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1142464511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsOpen() As Boolean</SourceLine>
   <SourceLine>// Returns TRUE if archive is opened</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.d.zipStream &lt;&gt; nil</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsValidName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1702055935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsValidName(itemName as String) As Boolean</SourceLine>
   <SourceLine>// Tells whether the given file or folder name can be used in</SourceLine>
   <SourceLine>//   the archive directory unmodified.</SourceLine>
   <SourceLine>// Returns FALSE if the name contains illegal chars, such as "/",</SourceLine>
   <SourceLine>//   returns TRUE otherwise.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return itemName = me.d.cleanName(itemName)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>itemName as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsWritable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>229918719</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsWritable() As Boolean</SourceLine>
   <SourceLine>// Returns TRUE if archive is open and was opened in write mode</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.d.zipStream &lt;&gt; nil and me.writeMode</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeMacBinaryHeader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>810803199</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeMacBinaryHeader(f as FolderItem) As MemoryBlock</SourceLine>
   <SourceLine>// Use this if you plan to call 'AddItemAsStreams' and plan to</SourceLine>
   <SourceLine>//   add all forks of this folderItem.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_makeMBHdr(f.Length, f.ResourceForkLength, f.Name, TTsFolderItem.GetMacType(f), f.MacCreator, f.CreationDate, f.ModificationDate, f)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeMacBinaryHeader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1976322047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeMacBinaryHeader(f as FolderItem, dataLen as UInt64, rsrcLen as Integer, macName as String) As MemoryBlock</SourceLine>
   <SourceLine>// Use this if you plan to call 'AddItemAsStreams' and plan not to</SourceLine>
   <SourceLine>//   add all forks of this folderItem (if you do not want to add a fork,</SourceLine>
   <SourceLine>//   pass 0 for its length).</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Notes:</SourceLine>
   <SourceLine>//   'macName' must not be empty. Pass f.Name if in doubt.</SourceLine>
   <SourceLine>//   Mind the encoding of 'macName': if it uses any non-ASCII chars, make sure you encode them as MacRoman or</SourceLine>
   <SourceLine>//   any other adequate Macintosh encoding. If you pass "f.Name", this will be automatically handled for you.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_makeMBHdr(dataLen, rsrcLen, macName, TTsFolderItem.GetMacType(f), f.MacCreator, f.CreationDate, f.ModificationDate, f)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, dataLen as UInt64, rsrcLen as Integer, macName as String</ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeMacBinaryHeader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2009823231</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeMacBinaryHeader(dataLen as UInt64, rsrcLen as Integer, macName as String, macType as String, macCreator as String, creationDate as Date, modificationDate as Date) As MemoryBlock</SourceLine>
   <SourceLine>// Use this if you plan to call 'AddItemAsStreams' and are running on</SourceLine>
   <SourceLine>//   Windows or have other reasons to specify the data explicitly instead</SourceLine>
   <SourceLine>//   implicitly by a FolderItem.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Notes:</SourceLine>
   <SourceLine>//   'macName' must not be empty. Pass 'f.Name' if in doubt.</SourceLine>
   <SourceLine>//   'modificationDate' and 'creationDate' may be nil</SourceLine>
   <SourceLine>//   Mind the encoding of 'macName': if it uses any non-ASCII chars, make sure you encode them as MacRoman or</SourceLine>
   <SourceLine>//   any other adequate Macintosh encoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_makeMBHdr(dataLen, rsrcLen, macName, macType, macCreator, creationDate, modificationDate, nil)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>dataLen as UInt64, rsrcLen as Integer, macName as String, macType as String, macCreator as String, creationDate as Date, modificationDate as Date</ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeZipExtraField</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>385374207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeZipExtraField(f as FolderItem) As ZipExtraField</SourceLine>
   <SourceLine>// Creates an entry to preserve Mac or Windows specific file or folder information</SourceLine>
   <SourceLine>return MakeZipExtraField(f, f.Name)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult>ZipExtraField</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeZipExtraField</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>971163647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeZipExtraField(f as FolderItem, macName as String) As ZipExtraField</SourceLine>
   <SourceLine>// Creates an entry to preserve Mac specific file or folder information</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// "macName" is the name the file shall have on a Mac when it's unpacked from the archive again.</SourceLine>
   <SourceLine>//   this is relevant if the name contains special chars that are not allowed in the archive directory</SourceLine>
   <SourceLine>//   due to DOS naming conventions, and so this Mac name will be stored in a separate place.</SourceLine>
   <SourceLine>// If you pass an empty string, the shorter ZipIt-specific field (code &amp;H2605) will be used,</SourceLine>
   <SourceLine>//   but you must not allow this if you're also writing a MacBinary header, because ZipIt expects</SourceLine>
   <SourceLine>//   to find the longer field (code &amp;H2705) in oder to detect a MacBinary header automatically!</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>// if neither name nor type&amp;creator are available, we don't need to do this</SourceLine>
   <SourceLine>static NullType as String = new MemoryBlock(4)</SourceLine>
   <SourceLine>if macName &lt;&gt; "" or (not f.Directory and (TTsFolderItem.GetMacType(f)&lt;&gt;NullType or f.MacCreator&lt;&gt;NullType)) then</SourceLine>
   <SourceLine>return MakeZipExtraField(TTsFolderItem.GetMacType(f), f.MacCreator, macName)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, macName as String</ItemParams>
  <ItemResult>ZipExtraField</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeZipExtraField</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1640456191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeZipExtraField(fieldData as String) As ZipExtraField</SourceLine>
   <SourceLine>// Constructor</SourceLine>
   <SourceLine>// "fieldData" is the entire set of bytes that'll be stored in the extras field</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return new ZipExtraField(me.d, fieldData)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>fieldData as String</ItemParams>
  <ItemResult>ZipExtraField</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeZipExtraField</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>774707199</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeZipExtraField(macType as String, macCreator as String, macName as String) As ZipExtraField</SourceLine>
   <SourceLine>// Creates an entry to preserve Mac specific file information</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// "macType" and "macCreator" are the codes that Mac files, but not folders, have.</SourceLine>
   <SourceLine>// "macName" is the name the file shall have on a Mac when it's unpacked from the archive again.</SourceLine>
   <SourceLine>//   this is relevant if the name contains special chars that are not allowed in the archive directory</SourceLine>
   <SourceLine>//   due to DOS naming conventions, and so this Mac name will be stored in a separate place.</SourceLine>
   <SourceLine>// Leave "macName" empty to not have it explicitly stored (saves a little space), but not when you're</SourceLine>
   <SourceLine>//   also using MacBinary (or ZipIt won't detect the MB header when unpacking your archive)!</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim n as Integer, newName as String, data as MemoryBlock, te as TextEncoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// We must encode the name into a classic Mac encoding here, but the macName is probably encoded in Unicode</SourceLine>
   <SourceLine>if macName &lt;&gt; "" then</SourceLine>
   <SourceLine>te = GuessJapaneseEncoding(macName) '### modernize this? (look for other places of this use, too!)</SourceLine>
   <SourceLine>if te &lt;&gt; nil and te.base = &amp;H100 then</SourceLine>
   <SourceLine>newName = me.d.encodeForZip(macName)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// if it's not unicode, we take the given name without change. I (TT) think that's the best solution. Feel free to change it, though.</SourceLine>
   <SourceLine>newName = macName</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// preserve Type &amp; Creator the way ZipIt does it</SourceLine>
   <SourceLine>if newName &lt;&gt; "" then</SourceLine>
   <SourceLine>// the long form, including the explicit Mac file name</SourceLine>
   <SourceLine>n = 1 + LenB(newName)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// the short form, without the explicit Mac file name</SourceLine>
   <SourceLine>n = 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>data = new MemoryBlock(16 + n)</SourceLine>
   <SourceLine>if data = nil then</SourceLine>
   <SourceLine>raise new OutOfMemoryException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>data.LittleEndian = true</SourceLine>
   <SourceLine>if n &lt;&gt; 0 then</SourceLine>
   <SourceLine>data.UInt16Value(0) = &amp;H2605</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>data.UInt16Value(0) = &amp;H2705</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>data.UInt16Value(2) = data.Size-4</SourceLine>
   <SourceLine>data.LittleEndian = false</SourceLine>
   <SourceLine>data.UInt32Value(4) = &amp;H5A504954 // "ZPIT"</SourceLine>
   <SourceLine>if n &lt;&gt; 0 then</SourceLine>
   <SourceLine>data.PString(8) = newName</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>data.StringValue(8+n,4) = macType</SourceLine>
   <SourceLine>data.StringValue(12+n,4) = macCreator</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return MakeZipExtraField(data.StringValue(0,data.Size))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>macType as String, macCreator as String, macName as String</ItemParams>
  <ItemResult>ZipExtraField</ItemResult>
 </Method>
 <Method>
  <ItemName>Mark</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2023297023</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Mark()</SourceLine>
   <SourceLine>// Saves the list of entries. Later, Rollback may be called</SourceLine>
   <SourceLine>//   to undo any addition of entries since Mark was called last.</SourceLine>
   <SourceLine>// It does not, however, preserve changes to existing entries.</SourceLine>
   <SourceLine>// This means: If you call Mark, then modify a ZipEntry, then</SourceLine>
   <SourceLine>//   call Rollback, the change is not undone. Only calls to AddItem</SourceLine>
   <SourceLine>//   and AddFolderContents will be undone.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.markDirStart = me.startOfDirInArchive</SourceLine>
   <SourceLine>me.markEntries = Ubound(me.d.entries_1)</SourceLine>
   <SourceLine>me.marked = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>876896255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open(stream as BinaryStream, write as Boolean, encoding as TextEncoding, recover as Boolean = false, mergeDittoEntries as Boolean = true) As Boolean</SourceLine>
   <SourceLine>// Opens access to an archive with a given Text Encoding,</SourceLine>
   <SourceLine>// coming from a BinaryStream. Note that you can even read from</SourceLine>
   <SourceLine>// or write to a MemoryBlock this way, because you can create a</SourceLine>
   <SourceLine>// BinaryStream that works on a MemoryBlock, like this:</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// dim mb as new MemoryBlock // new empty memory block</SourceLine>
   <SourceLine>// dim stream as BinaryStream = new BinaryStream(mb)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// - write: should specify TRUE if archive is to be created or modified, otherwise FALSE</SourceLine>
   <SourceLine>// - encoding: the encoding the archive is using or shall use. Pass nil to ignore any encodings</SourceLine>
   <SourceLine>//    (careful: passing nil can lead to weird results - test with foreign chars on all the</SourceLine>
   <SourceLine>//    platforms you want to use this software!). Or pass one of the EncodedAs... functions</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Returns TRUE if open was successful</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Open() not has been called, or Close() has been called latest</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errmsg = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.entriesRead then</SourceLine>
   <SourceLine>// already opened</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if stream = nil then</SourceLine>
   <SourceLine>me.errmsg = "No stream specified"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.theFile = nil</SourceLine>
   <SourceLine>me.d.setArchiveEncoding encoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.zipStream = stream</SourceLine>
   <SourceLine>me.d.zipStream.Position = 0</SourceLine>
   <SourceLine>me.d.zipStream.LittleEndian = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if stream.Length = 0 then</SourceLine>
   <SourceLine>me.entriesRead = true</SourceLine>
   <SourceLine>me.justCreated = true</SourceLine>
   <SourceLine>ok = true</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim abort as Boolean</SourceLine>
   <SourceLine>me.z_readDirectory(recover, mergeDittoEntries, abort) // sets "errmsg"</SourceLine>
   <SourceLine>if not abort then</SourceLine>
   <SourceLine>ok = me.entriesRead</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not ok then</SourceLine>
   <SourceLine>me.d.zipStream.Close</SourceLine>
   <SourceLine>me.d.zipStream = nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.writeMode = write and ok and not me.centralDirCorrupted</SourceLine>
   <SourceLine>if me.writeMode then</SourceLine>
   <SourceLine>me.d.Dirty = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return ok</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Unexpected error (exception)"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stream as BinaryStream, write as Boolean, encoding as TextEncoding, recover as Boolean = false, mergeDittoEntries as Boolean = true</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1804840959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open(f as FolderItem, write as Boolean) As Boolean</SourceLine>
   <SourceLine>// Opens access to an archive with the default encoding (as used on PCs)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// - f: identifies the archive file</SourceLine>
   <SourceLine>// - write: should specify TRUE if archive is to be created or modified, otherwise FALSE</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Returns TRUE if open was successful</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// The archive is assumed to be encoded in DOSLatinUS, which is the default for Zip tools on PCs.</SourceLine>
   <SourceLine>// To specify a different encoding, use one of the other Open... methods</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Open() not has been called, or Close() has been called latest</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim enc as TextEncoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if DefaultToUnicode</SourceLine>
   <SourceLine>enc = me.EncodedAsUnicode</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>enc = me.EncodedAsDOSLatinUS</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Open(f, write, enc)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, write as Boolean</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Open</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2017576959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Open(f as FolderItem, write as Boolean, encoding as TextEncoding, recover as Boolean = false, mergeDittoEntries as Boolean = true) As Boolean</SourceLine>
   <SourceLine>// Opens access to an archive with a given Text Encoding</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// - f: identifies the archive file</SourceLine>
   <SourceLine>// - write: should specify TRUE if archive is to be created or modified, otherwise FALSE</SourceLine>
   <SourceLine>// - encoding: the encoding the archive is using or shall use. Pass nil to ignore any encodings</SourceLine>
   <SourceLine>//    (careful: passing nil can lead to weird results - test with foreign chars on all the</SourceLine>
   <SourceLine>//    platforms you want to use this software!). Or pass one of the EncodedAs... functions</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Returns TRUE if open was successful</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Open() not has been called, or Close() has been called latest</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errmsg = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.entriesRead then</SourceLine>
   <SourceLine>// already opened</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if f = nil then</SourceLine>
   <SourceLine>me.errmsg = "No file specified"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.theFile = f</SourceLine>
   <SourceLine>me.d.setArchiveEncoding encoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if write and not f.exists then</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2012</SourceLine>
   <SourceLine>me.d.zipStream = BinaryStream.Create(f)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>me.d.zipStream = f.CreateBinaryFile("")</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>if me.d.zipStream = nil then</SourceLine>
   <SourceLine>me.errmsg = "Creating the archive file failed"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>me.d.zipStream.LittleEndian = true</SourceLine>
   <SourceLine>me.entriesRead = true</SourceLine>
   <SourceLine>me.justCreated = true</SourceLine>
   <SourceLine>ok = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2012</SourceLine>
   <SourceLine>me.d.zipStream = BinaryStream.Open (f, write)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>me.d.zipStream = f.OpenAsBinaryFile(write)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>if me.d.zipStream = nil then</SourceLine>
   <SourceLine>me.errmsg = "Opening the archive file failed"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>me.d.zipStream.LittleEndian = true</SourceLine>
   <SourceLine>dim abort as Boolean</SourceLine>
   <SourceLine>me.z_readDirectory(recover, mergeDittoEntries, abort) // sets "errmsg"</SourceLine>
   <SourceLine>if not abort then</SourceLine>
   <SourceLine>ok = me.entriesRead</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not ok then</SourceLine>
   <SourceLine>me.d.zipStream.Close</SourceLine>
   <SourceLine>me.d.zipStream = nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.writeMode = write and ok and not me.centralDirCorrupted</SourceLine>
   <SourceLine>if me.writeMode then</SourceLine>
   <SourceLine>me.d.Dirty = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return ok</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Unexpected error (exception)"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, write as Boolean, encoding as TextEncoding, recover as Boolean = false, mergeDittoEntries as Boolean = true</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>OpenForSequentialWriting</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1596223487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function OpenForSequentialWriting(stream as ZipSeqOutputStream, encoding as TextEncoding) As Boolean</SourceLine>
   <SourceLine>// Starts a new archive for writing with a given Text Encoding.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// You may only add new items to the archive, not read, delete or replace</SourceLine>
   <SourceLine>// them. This makes it possible to receive the archived output immediately,</SourceLine>
   <SourceLine>// e.g. to further encrypt it or pass it over a network, without having it written</SourceLine>
   <SourceLine>// to a file first. Make sure to call Close before assuming that the archive is</SourceLine>
   <SourceLine>// completely written.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// - stream: a subclass of ZipSeqOutputStream class, implementing only</SourceLine>
   <SourceLine>//    its two events Write() and Close().</SourceLine>
   <SourceLine>// - encoding: the encoding the archive is using or shall use. Pass nil to ignore any encodings</SourceLine>
   <SourceLine>//    (careful: passing nil can lead to weird results - test with foreign chars on all the</SourceLine>
   <SourceLine>//    platforms you want to use this software!). Or pass one of the EncodedAs... functions</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Returns TRUE if open was successful</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Open() not has been called, or Close() has been called latest</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errmsg = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.entriesRead then</SourceLine>
   <SourceLine>// already opened</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if stream = nil then</SourceLine>
   <SourceLine>me.errmsg = "No output stream specified"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.theFile = nil</SourceLine>
   <SourceLine>me.d.setArchiveEncoding encoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.zipStream = stream</SourceLine>
   <SourceLine>me.d.zipStream.LittleEndian = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.entriesRead = true</SourceLine>
   <SourceLine>me.justCreated = true</SourceLine>
   <SourceLine>me.writeMode = true</SourceLine>
   <SourceLine>me.writeSequentially = true</SourceLine>
   <SourceLine>me.d.Dirty = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Unexpected error (exception)"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>stream as ZipSeqOutputStream, encoding as TextEncoding</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ProgressMonitor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1210396671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ProgressMonitor() As ZipProgressNotifier</SourceLine>
   <SourceLine>return me.d.monitor</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>ZipProgressNotifier</ItemResult>
 </Method>
 <Method>
  <ItemName>RawPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2055399423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RawPath(rootFolder as FolderItem, destItem as FolderItem) As String</SourceLine>
   <SourceLine>// Creates a raw path name (for AddItemWithRawPath and AddItemByStreams)</SourceLine>
   <SourceLine>//   from a file or folder (destItem) relative to a starting folder (rootFolder).</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - rootFolder is a directory</SourceLine>
   <SourceLine>// - destItem is somewhere inside rootFolder</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim i as Integer, names(-1) as String, f, fs(-1) as FolderItem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not rootFolder.Directory then</SourceLine>
   <SourceLine>// Error: 'rootFolder' is not a directory</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>f = destItem</SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>if TTsFolderItem.SameFolderItem(f, rootFolder) then</SourceLine>
   <SourceLine>// it's a valid path</SourceLine>
   <SourceLine>for i = Ubound(fs) downTo 0</SourceLine>
   <SourceLine>names.append fs(i).name</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return RawPath(names)</SourceLine>
   <SourceLine>elseif f = nil or TTsFolderItem.SameFolderItem(f.Parent, f) then</SourceLine>
   <SourceLine>// we've reached the root - it's an invalid path</SourceLine>
   <SourceLine>// Error: 'destItem' is not inside 'rootFolder'</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if f &lt;&gt; nil then</SourceLine>
   <SourceLine>fs.append f</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>f = f.Parent</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rootFolder as FolderItem, destItem as FolderItem</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>RawPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>648751103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RawPath(names() as String) As String</SourceLine>
   <SourceLine>// Creates a raw path name (for AddItemWithRawPath and AddItemByStreams)</SourceLine>
   <SourceLine>//   from an array of folders and a final folder or file name.</SourceLine>
   <SourceLine>// This is the same format that you get by calling</SourceLine>
   <SourceLine>//  ZipEntry.GetPath</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim i as Integer, s as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to Ubound(names)</SourceLine>
   <SourceLine>s = s + "/" + me.d.cleanName(names(i))</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return MidB(s,2) // remove the first "/" again</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>names() as String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>RemoveEntry</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1138817023</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RemoveEntry(index_1 as Integer) As Boolean</SourceLine>
   <SourceLine>// Removes an entry from the archive list of entries</SourceLine>
   <SourceLine>// Does not actually regain the used space of the stored data</SourceLine>
   <SourceLine>//   in the archive until ZipArchive.Compact() is called.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note: After the item has been removed, EntryCount()</SourceLine>
   <SourceLine>// will be one less, and any indexes starting behind the</SourceLine>
   <SourceLine>// removed entry will shift down by one.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.entriesRead then</SourceLine>
   <SourceLine>// oops - archive is not open</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if index_1 &lt; 1 then</SourceLine>
   <SourceLine>raise new OutOfBoundsException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'dim e as ZipEntry = d.entries_1(index_1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.marked = false</SourceLine>
   <SourceLine>me.d.dirty = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.entries_1.Remove index_1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index_1 as Integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ReplaceEntry</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>853383167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ReplaceEntry(index_1 as Integer, entry as ZipEntry) As ZipEntry</SourceLine>
   <SourceLine>// Replaces the entry at the index with the given one.</SourceLine>
   <SourceLine>// Returns the entry that was previously at this index,</SourceLine>
   <SourceLine>//   returns nil if an error occured</SourceLine>
   <SourceLine>// This function allows you to change the order of entries for</SourceLine>
   <SourceLine>//   sorting purposes</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine>// - entry originates from this archive, not from a different one!</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim e2 as ZipEntry</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.entriesRead then</SourceLine>
   <SourceLine>// oops - archive is not open</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if index_1 &lt; 1 then</SourceLine>
   <SourceLine>raise new OutOfBoundsException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.marked = false</SourceLine>
   <SourceLine>me.d.dirty = true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>e2 = me.d.entries_1(index_1)</SourceLine>
   <SourceLine>me.d.entries_1(index_1) = entry</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return e2</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index_1 as Integer, entry as ZipEntry</ItemParams>
  <ItemResult>ZipEntry</ItemResult>
 </Method>
 <Method>
  <ItemName>Rollback</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>470102015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Rollback() As Boolean</SourceLine>
   <SourceLine>// Undoes any added entries since the last call to Mark()</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Mark has been called, but not any of these since then:</SourceLine>
   <SourceLine>//    - Compact</SourceLine>
   <SourceLine>//    - RemoveEntry</SourceLine>
   <SourceLine>//    - ReplaceEntry</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.marked and me.markDirStart &lt;= me.startOfDirInArchive and me.markEntries &lt;= Ubound(me.d.entries_1) then</SourceLine>
   <SourceLine>me.startOfDirInArchive = me.markDirStart</SourceLine>
   <SourceLine>Redim me.d.entries_1(me.markEntries)</SourceLine>
   <SourceLine>me.d.dirty = true</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>me.marked = false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SetComment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>421636095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SetComment(comment as String) As Boolean</SourceLine>
   <SourceLine>// Sets the optional comment about the archive.</SourceLine>
   <SourceLine>// Pass an empty string to delete an existing comment</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.writeMode then</SourceLine>
   <SourceLine>z_noWriteMsg</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.comment_ = comment</SourceLine>
   <SourceLine>me.d.dirty = true</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>comment as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SetDefaultOSMadeBy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1291606015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetDefaultOSMadeBy(code as Integer)</SourceLine>
   <SourceLine>// See the "PKZIP format.txt" or any "appnote.txt" on the web for the codes</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// This code well be used for all newly added ZipEntries</SourceLine>
   <SourceLine>// Default is 0.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Call DefaultOSMadeBy() to get the current default value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.defaultOSMadeBy = code</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>code as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SetProgressMonitor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2049888255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetProgressMonitor(monitor as ZipProgressNotifier)</SourceLine>
   <SourceLine>// Defines an object that implement the ZipProgressMonitor</SourceLine>
   <SourceLine>//   interface. Its event ZipProgress() will be called</SourceLine>
   <SourceLine>//   periodically while a compression or extraction is</SourceLine>
   <SourceLine>//   in progress.</SourceLine>
   <SourceLine>// The ZipProgress also has the ability to stop a</SourceLine>
   <SourceLine>//   compression or extraction process.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d.monitor = monitor</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>monitor as ZipProgressNotifier</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UsesAppleDittoFormat</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1927325695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UsesAppleDittoFormat() As Boolean</SourceLine>
   <SourceLine>// Returns true if archive uses the Mac OS 10.4's (Tiger) format</SourceLine>
   <SourceLine>// where resource forks and other HFS infos are stored in "._" entries</SourceLine>
   <SourceLine>// (usually inside a "__MACOSX" folder)</SourceLine>
   <SourceLine>return me.d.dittoFormat</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Version</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1138489343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function Version() As Double</SourceLine>
   <SourceLine>return 3.040100 // v.mmffbb, with m=minor-version, f=bugfix-version, b=build(nonreleaseversion)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Double</ItemResult>
 </Method>
 <Method>
  <ItemName>Tree</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1426135039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Tree(rebuild as Boolean = false) As ZipFolderItem</SourceLine>
   <SourceLine>// Returns the root item of the directory tree of the items in the zip archive</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.entriesRead then</SourceLine>
   <SourceLine>// oops - archive is not open</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if d.tree = nil or rebuild then</SourceLine>
   <SourceLine>d.tree = new ZipFolderItem (me.d, me)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return d.tree</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rebuild as Boolean = false</ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>IndexOfEntry</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1574303743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IndexOfEntry(entry as ZipEntry) As Integer</SourceLine>
   <SourceLine>// Returns 0 if not found</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim idx as Integer</SourceLine>
   <SourceLine>idx = me.d.entries_1.IndexOf(entry)</SourceLine>
   <SourceLine>if idx &gt; 0 then</SourceLine>
   <SourceLine>return idx</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>entry as ZipEntry</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>ArchiveSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>398688255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ArchiveSize() As Int64</SourceLine>
   <SourceLine>// Caution: This gives only the correct result if the archive has not been modified</SourceLine>
   <SourceLine>// or after a Flush or Compact call!</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.d.theFile.Length</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>RegisterLicense</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1131335679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Sub RegisterLicense(name as String, code as UInt32)</SourceLine>
   <SourceLine>// Call this to enable the use of the ZipFolderItem class in built apps.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// To get a license, contact tt@tempel.org or visit http://www.tempel.org/RB/ZipPackage</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>gRegName = name</SourceLine>
   <SourceLine>gRegCode = code</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>name as String, code as UInt32</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2145093631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>This is a collection of Classes to extract and create ZIP archives</NoteLine>
   <NoteLine>(PKZIP and Info-ZIP formats), written by Thomas Tempelmann.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Homepage: http://www.tempel.org/RB/ZipPackage</NoteLine>
   <NoteLine>Contact: tt@tempel.org</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>The current version of this code has been tested using RB 2010r4.1</NoteLine>
   <NoteLine>and 2010r5. Previous versions have been tested on Mac OS X 10.5</NoteLine>
   <NoteLine>on PPC and Intel Macs, on Windows XP SP2 and Ubuntu 7.10</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>This code was written very throughly, and tries to deal with all</NoteLine>
   <NoteLine>eventualities, such as detection of corrupted archives, and</NoteLine>
   <NoteLine>observing all the little differences from various Zip tools on</NoteLine>
   <NoteLine>all platforms.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>It implements only a subset of the entire ZIP archive</NoteLine>
   <NoteLine>definition, though. Here are the known restrictions:</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>* Can't do encryption (nor decryption).</NoteLine>
   <NoteLine>* No support for the PKZip 64bit format (yet), meaning the archive</NoteLine>
   <NoteLine>   can contain only files that are less than 4GB in original length,</NoteLine>
   <NoteLine>   and the total archive file size has the same limit.</NoteLine>
   <NoteLine>* Supports only "stored" and "deflate" compression methods</NoteLine>
   <NoteLine>   (which are the most common ones).</NoteLine>
   <NoteLine>* Can't read all possible ZIP archives since some of them use</NoteLine>
   <NoteLine>   different compression methods, but if you're using any</NoteLine>
   <NoteLine>   Zip creating tool, you usually have control over which</NoteLine>
   <NoteLine>   methods should be used. And "deflate" is usually the most</NoteLine>
   <NoteLine>   effective, anyways.</NoteLine>
   <NoteLine>* No support for multi-segment archives.</NoteLine>
   <NoteLine>* There is no provision for loss of file name information under</NoteLine>
   <NoteLine>   older Mac OS versions (before 9): If an archive items has a</NoteLine>
   <NoteLine>   name longer than 31 chars and if it is extracted using</NoteLine>
   <NoteLine>   ZipEntry.MakeDestination(), the name may get cut off at</NoteLine>
   <NoteLine>   the end without preserving an extension. Under Mac OS 9</NoteLine>
   <NoteLine>   and OS X, as well as MS Windows and Linux, this is not a</NoteLine>
   <NoteLine>   problem, though.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Special Features:</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>* It can create "fake" entries, i.e. extra entries that refer to any</NoteLine>
   <NoteLine>   file in the archive, allowing to have several entries even refer</NoteLine>
   <NoteLine>   to the same file. However, this feature is not supported by</NoteLine>
   <NoteLine>   some other Zip tools, including the one used by the Mac Finder.</NoteLine>
   <NoteLine>   So, it's best to use this feature only if you are using these</NoteLine>
   <NoteLine>   classes to read from the archive again.</NoteLine>
   <NoteLine>* Supports preserving of Resource Forks using the MacBinary</NoteLine>
   <NoteLine>   format. This format, however, is not supported by Apple's</NoteLine>
   <NoteLine>   Zip tools, sadly. (It should be supported, as it has been a</NoteLine>
   <NoteLine>   well documented format for many years, but what can we do).</NoteLine>
   <NoteLine>* Supports reading of Resource Forks written by Apple's Zip</NoteLine>
   <NoteLine>   tool (which uses the "__MACOSX" folders for such data), but</NoteLine>
   <NoteLine>   cannot create such folders itself (yet).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>One thing you can be sure of is that files created by this</NoteLine>
   <NoteLine>class can be read by any modern ZIP tool, such as ZipIt (for</NoteLine>
   <NoteLine>Mac OS), WinZIP (for Windows), Stuffit Expander (Mac</NoteLine>
   <NoteLine>and Windows) and, of course, by this class collection.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>A nice feature is that you can not only add items to an existing</NoteLine>
   <NoteLine>archive, but even remove them and then compact the archive</NoteLine>
   <NoteLine>to gain the space back.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>For more information about the ZIP archive format, search</NoteLine>
   <NoteLine>on www.google.com for "ZIP format appnote". The "appnote.txt"</NoteLine>
   <NoteLine>describes the format.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Change History</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>106964991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Change History</NoteLine>
   <NoteLine>(see the "About Zip Package.html" file)</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Acknowledgements</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1624104959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Acknowledgements</NoteLine>
   <NoteLine>CRC-16 code by Eric D. Brown</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>e-CryptIt Engine copyright Björn Eiríksson (www.einhugur.com)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>e-CryptIt Engine uses zlib code, copyright © 1995-2002</NoteLine>
   <NoteLine>Jean-Loup Gailly and Mark Adler.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Original zip format REALbasic code was written by Carsten</NoteLine>
   <NoteLine>Friehe for the Mieze program (http://carsten-friehe.de/).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>RB code improved and reorganized by Thomas Tempelmann</NoteLine>
   <NoteLine>(http://www.tempel.org/rb/) for public release.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Some of the design and error messages was influenced by Java 1.1's</NoteLine>
   <NoteLine>ZipFile and related classes.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>This RB code, written by Carsten Friehe and Thomas Tempelmann,</NoteLine>
   <NoteLine>is given to the Public Domain, which means you can do whatever</NoteLine>
   <NoteLine>you want with it. It is, however appreciated if you would "tip"</NoteLine>
   <NoteLine>me by sending me a few dollars for my work (it took me a several</NoteLine>
   <NoteLine>weeks to develop this software for people like you - I myself</NoteLine>
   <NoteLine>could have done with much less for my own needs, but I wanted</NoteLine>
   <NoteLine>to provide this as a clean and complete solution so that others</NoteLine>
   <NoteLine>won't have to deal with this not-trivial task).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>My thanks go to Leonard Rosenthol (author of Stuffit Zip support</NoteLine>
   <NoteLine>and maintainer of MacBinary format) and Tom Brown (author</NoteLine>
   <NoteLine>of ZipIt) for providing helpful information.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>In 2016, Tom Buchler helped me a lot getting the 64 bit Windows</NoteLine>
   <NoteLine>version working.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Enjoy!</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>14 March 2003, updated 13 Jan 2016</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Thomas Tempelmann</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Important change notice</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1594689535</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Important change notice</NoteLine>
   <NoteLine>Since version 1.4 (May 2008), ZipProgressNotifier.ZipProgress() has changed:</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>When unzipping, the amount values are not specifying the unpacked sizes any more. Instead,</NoteLine>
   <NoteLine>now the packed size is passed. This is necessary so that it works reliably with damaged archives.</NoteLine>
   <NoteLine>When zipping, the values still represent the unpacked size, though.</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Plugins you will need</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>659165183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Plugins you will need</NoteLine>
   <NoteLine>If you want to get the highest speed, you'll need the following plugins (which</NoteLine>
   <NoteLine>cost extra money):</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  * e-CryptIt Engine (from &lt;http://www.einhugur.com/&gt;)</NoteLine>
   <NoteLine>  * #TypeLib (comes with the e-CryptIt plugin)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  To use them, set ZipConfig.HaveEinhugurPlugin to true and remove the two interfaces</NoteLine>
   <NoteLine>  IStreamReader and IStreamWriter.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Alternatively, and by default, this code can use the zlib library which is pre-installed on</NoteLine>
   <NoteLine>Linux and OS X systems (inside /usr/lib/).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>For Microsoft Windows, however, you have to manually get the DLL and add it to your</NoteLine>
   <NoteLine>build app. See the Note "Read here for MS Windows" in the ZLibStream class for instructions.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>MacBinary constants</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1525688319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>MacBinary constants</NoteLine>
   <NoteLine>MacBinaryAlways:</NoteLine>
   <NoteLine>  Means to save all files MacBinary encoded.</NoteLine>
   <NoteLine>  But only on Mac OS -- on Windows, MacBinary will not be used even with this option.</NoteLine>
   <NoteLine>  To save Resource Forks when running on Windows, you have to use AddItemByStreams()</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>MacBinarySmart:</NoteLine>
   <NoteLine>  Means to save files MacBinary-encoded only if the item has a resource fork.</NoteLine>
   <NoteLine>  But only on Mac OS -- on Windows and Linux, MacBinary will not be used even with this option.</NoteLine>
   <NoteLine>  To archive Resource Forks when running on Windows or Linux, you have to use AddItemByStreams()</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>AddMacSpecifica</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1048575999</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AddMacSpecifica As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AddMacSpecifica As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>mAddMacSpecifica = value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mAddMacSpecifica</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AddMacSpecifica</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>MacBinaryAlways</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>572801023</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>2</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>MacBinarySmart</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2002368511</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>1</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>MacBinaryNever</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>468365311</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>0</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>MacAliasHandling</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemType>Integer</ItemType>
  <ItemName>MacAliasHandling</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>601227263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>StoreAll</SourceLine>
   <SourceLine>DropAll</SourceLine>
   <SourceLine>FollowFilesDropFolders</SourceLine>
   <SourceLine>FollowFilesStoreFolders</SourceLine>
  </ItemSource>
 </Enumeration>
</block>
<block type="Module" ID="-1164258619">
 <ObjName>ZipConfig</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>CRC32</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2081169407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CRC32(crc as UInt32, dataIn as String) As UInt32</SourceLine>
   <SourceLine>#if HaveEinhugurPlugin</SourceLine>
   <SourceLine>// Using the "e-CryptIt Engine" plugin, see &lt;http://www.einhugur.com/&gt;:</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If you get an error that 'EinhugurChecksum' is unknown, then you probably are using an</SourceLine>
   <SourceLine>// older version (before v11) of the Einhugur plugin. To make it compile, remove the</SourceLine>
   <SourceLine>// "EinhugurChecksum." prefix from the CRC32 call.</SourceLine>
   <SourceLine>return EinhugurChecksum.CRC32(dataIn, crc)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// Using code from Zlib</SourceLine>
   <SourceLine>dim mb as MemoryBlock = dataIn</SourceLine>
   <SourceLine>return ZLibStream.CRC32(crc, mb, mb.Size)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>crc as UInt32, dataIn as String</ItemParams>
  <ItemResult>UInt32</ItemResult>
 </Method>
 <Method>
  <ItemName>CRC16</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>363040767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CRC16(mb as MemoryBlock, size as Integer) As UInt16</SourceLine>
   <SourceLine>#if HaveEinhugurPlugin</SourceLine>
   <SourceLine>// Using the "e-CryptIt Engine" plugin, see &lt;http://www.einhugur.com/&gt;:</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If you get an error that 'EinhugurChecksum' is unknown, then you probably are using an</SourceLine>
   <SourceLine>// older version (before v11) of the Einhugur plugin. To make it compile, remove the</SourceLine>
   <SourceLine>// "EinhugurChecksum." prefix from the Crc16_MemoryBlock call.</SourceLine>
   <SourceLine>return EinhugurChecksum.Crc16_MemoryBlock(mb, 0, size, 0)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// Using slightly slower RB code</SourceLine>
   <SourceLine>return clsCRC16.CCITT(mb, 0, size)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>mb as MemoryBlock, size as Integer</ItemParams>
  <ItemResult>UInt16</ItemResult>
 </Method>
 <Method>
  <ItemName>ShortDescription</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1128466431</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ShortDescription(exc as RuntimeException) As String</SourceLine>
   <SourceLine>dim s as String</SourceLine>
   <SourceLine>if exc = nil then</SourceLine>
   <SourceLine>s = "&lt;null&gt;"</SourceLine>
   <SourceLine>elseif exc isa IllegalCastException then</SourceLine>
   <SourceLine>s="Illegal Cast"</SourceLine>
   <SourceLine>elseif exc isa KeyNotFoundException then</SourceLine>
   <SourceLine>s="Key Not Found"</SourceLine>
   <SourceLine>elseif exc isa NilObjectException then</SourceLine>
   <SourceLine>s="Nil Object"</SourceLine>
   <SourceLine>elseif exc isa OutOfBoundsException then</SourceLine>
   <SourceLine>s="Out Of Bounds"</SourceLine>
   <SourceLine>elseif exc isa OutOfMemoryException then</SourceLine>
   <SourceLine>s="Out Of Memory"</SourceLine>
   <SourceLine>elseif exc isa StackOverflowException then</SourceLine>
   <SourceLine>s="Stack Overflow"</SourceLine>
   <SourceLine>elseif exc isa TypeMismatchException then</SourceLine>
   <SourceLine>s="Type Mismatch"</SourceLine>
   <SourceLine>elseif exc isa UnsupportedFormatException then</SourceLine>
   <SourceLine>s="Unsupported Format"</SourceLine>
   <SourceLine>elseif exc isa InvalidParentException then</SourceLine>
   <SourceLine>s="Invalid Parent"</SourceLine>
   <SourceLine>elseif exc isa EndException then</SourceLine>
   <SourceLine>s="End (quit)"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// use reflection to get the name</SourceLine>
   <SourceLine>dim t as Introspection.TypeInfo = Introspection.GetType(exc)</SourceLine>
   <SourceLine>dim s2 as String = t.FullName</SourceLine>
   <SourceLine>if s2.Right(9) = "Exception" then s2 = s2.Left(s2.Len-9)</SourceLine>
   <SourceLine>if s2 &lt;&gt; "" then</SourceLine>
   <SourceLine>s = s2</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>s = "?"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if exc &lt;&gt; nil and Len(exc.Message) &gt; 0 then</SourceLine>
   <SourceLine>s = s + " ("+exc.Message+")"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return s</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>exc as RuntimeException</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Note>
  <ItemName>Documentation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1748342783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Documentation</NoteLine>
   <NoteLine>In this module you find a few configuration constants that are used for conditional</NoteLine>
   <NoteLine>compiling, as well as a few global variables.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>HaveEinhugurPlugin</NoteLine>
   <NoteLine>------------------</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Default: false</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Set this to "true" if you want to use the Einhugur e-CryptIt plugin for</NoteLine>
   <NoteLine>  compression and extraction (it's a bit faster and does not require the</NoteLine>
   <NoteLine>  zlib1.dll under Windows).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  If you set this to "true", remember to remove the items in the folder</NoteLine>
   <NoteLine>  "RemoveWhenUsingEinhugurPlugin" from this project.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>DefaultToUnicode</NoteLine>
   <NoteLine>----------------</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Default: true</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Originally, names in a Zip archive were encoded with the old DOS character set,</NoteLine>
   <NoteLine>  or in special double byte codes in non-roman environments. If you want to</NoteLine>
   <NoteLine>  create or read Zip archives always in that naming convention, set this to "false".</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Nowadays, however, Unicode (UTF-8) is used on OS X to store file names in a</NoteLine>
   <NoteLine>  Zip archive. Windows (XP) still prefers not to use Unicode, though - so you might</NoteLine>
   <NoteLine>  want to set this to false if you primarily work with Windows files in archives.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  This defines only the default, however. You may still pass a specific encoding</NoteLine>
   <NoteLine>  when opening a Zip archive.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>EnableZipIt2_2_2_UnicodeSupport</NoteLine>
   <NoteLine>-----------------------------</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Default: true</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  When enabled, the lowest bit of the "external permissions" field in the central directory</NoteLine>
   <NoteLine>  is set to 1 upon creating a new entry with a UTF-8 encoded file name. This allows</NoteLine>
   <NoteLine>  ZipIt 2.2.2 to detect the unicode encoding.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Set this option to false if you do not want the "external permissions" field be</NoteLine>
   <NoteLine>  messed with this way. (It does not seem to have an effect on Apple's Zip tool in</NoteLine>
   <NoteLine>  OS X 10.4, but maybe other tools you might want to support do not like this.)</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>EmulateOSXRenaming</NoteLine>
   <NoteLine>-------------------</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Default: false</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  Defines how to replace illegal file name characters such as "/", "\" and ":".</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  When set to false, the default DOS and ZipIt rules are applied:</NoteLine>
   <NoteLine>    When adding an item to an archive, any "/" and "\" in a file name is replaced with "-";</NoteLine>
   <NoteLine>    When reading from an archive, any ":" is replaced by "-".</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  When set to true, the OS X (10.4) Zip tool rules are applied:</NoteLine>
   <NoteLine>    When adding an item to an archive, any "/" in a file name is replaced with ":";</NoteLine>
   <NoteLine>    When reading from an archive and running on Mac OS, any ":" is replaced by "/".</NoteLine>
   <NoteLine>    When reading from an archive and running not on Mac OS, any ":" is replaced by "-".</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>AvoidFSSpecCalls</NoteLine>
   <NoteLine>---------------</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>  This is meant to avoid the old-style (somewhat deprecated) FSSpec-based File Manager</NoteLine>
   <NoteLine>  calls under Mac OS X, and instead use the more modern FSRef-based calls. The code for</NoteLine>
   <NoteLine>  this is not implemented yet, though, which means you must not set this option to true.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Property>
  <ItemName>EmulateOSXRenaming</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>495947775</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>EmulateOSXRenaming As Boolean = false</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>EmulateOSXRenaming As Boolean = false</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>EnableZipIt2_2_2_UnicodeSupport</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>267286527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>EnableZipIt2_2_2_UnicodeSupport As Boolean = false</SourceLine>
   <SourceLine>Attention: If you set this to true, then it'll cause trouble unpacking any zipped</SourceLine>
   <SourceLine>folders on Windows 7 - they'll appear as locked files, not folders then.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Since hardly anyone still uses ZipIt 2.2, I suggest keeping this constant set to</SourceLine>
   <SourceLine>false all the time to avoid conflicts with more current software.</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>EnableZipIt2_2_2_UnicodeSupport As Boolean = false</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EmulateOSXRenaming</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>false</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EnableZipIt2_2_2_UnicodeSupport</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>true</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>AvoidFSSpecCalls</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1760311295</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>false</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>CarbonLibName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>974073855</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef>Carbon</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>DefaultToUnicode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1438267391</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>true</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>HaveEinhugurPlugin</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2009255935</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>false</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>UseTTsOldPlugins</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1387155455</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>false</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>ForDebugging_StoreWithoutCompression</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1537275903</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>3</ItemType>
  <ItemDef>false</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>PATH_MAX</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>335486975</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>2048</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>SystemLib</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1318518783</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>0</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>1</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>System</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>libc.so</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>kernel32</ItemDef>
  </ConstantInstance>
 </Constant>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>LongFileHeader</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>LongFileHeader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1545494527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sig as UInt32</SourceLine>
   <SourceLine>versMadeBy as UInt16</SourceLine>
   <SourceLine>versForExtract as UInt16</SourceLine>
   <SourceLine>flags as UInt16</SourceLine>
   <SourceLine>compressionMode as UInt16</SourceLine>
   <SourceLine>modTime as UInt16</SourceLine>
   <SourceLine>modDate as UInt16</SourceLine>
   <SourceLine>crc as UInt32</SourceLine>
   <SourceLine>comprSize as UInt32</SourceLine>
   <SourceLine>origSize as UInt32</SourceLine>
   <SourceLine>nameLen as UInt16</SourceLine>
   <SourceLine>extraLen as UInt16</SourceLine>
   <SourceLine>commentLen as UInt16</SourceLine>
   <SourceLine>diskNumStart as UInt16</SourceLine>
   <SourceLine>intFileAttr as UInt16</SourceLine>
   <SourceLine>extFileAttr as UInt32</SourceLine>
   <SourceLine>relOfsOfHdr as UInt32</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>ShortFileHeader</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>ShortFileHeader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>288395263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sig as UInt32</SourceLine>
   <SourceLine>versForExtract as UInt16</SourceLine>
   <SourceLine>flags as UInt16</SourceLine>
   <SourceLine>compressionMode as UInt16</SourceLine>
   <SourceLine>modTime as UInt16</SourceLine>
   <SourceLine>modDate as UInt16</SourceLine>
   <SourceLine>crc as UInt32</SourceLine>
   <SourceLine>comprSize as UInt32</SourceLine>
   <SourceLine>origSize as UInt32</SourceLine>
   <SourceLine>nameLen as UInt16</SourceLine>
   <SourceLine>extraLen as UInt16</SourceLine>
  </ItemSource>
 </Structure>
</block>
<block type="Module" ID="234432818">
 <ObjName>ZipEntry</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ZipEntryBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ApplyMacBinaryInformation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>529174527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ApplyMacBinaryInformation(f as FolderItem, mbHdr as MemoryBlock)</SourceLine>
   <SourceLine>// You may use this function after calling Extract(outputStream as BinaryStream)</SourceLine>
   <SourceLine>//   in order to update your extracted file's Type, Creator and other Finder information.</SourceLine>
   <SourceLine>//  This call has even a little effect under Windows OS: If the MacBinary header</SourceLine>
   <SourceLine>//   specifies that the item was invisible (hidden), or read-only, these attributes</SourceLine>
   <SourceLine>//   will be applied under Windows to the file, too.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Parameters:</SourceLine>
   <SourceLine>//   f: the file or folder you want the MB information applied to</SourceLine>
   <SourceLine>//   mbHdr: the MacBinary header. Retrieve it by calling GetMacBinaryHeader(mbHdr)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - f.Exists = true</SourceLine>
   <SourceLine>// - mbHdr &lt;&gt; nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not f.Exists or mbHdr = nil then</SourceLine>
   <SourceLine>return</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mbHdr.LittleEndian = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// !TT 21Jun05 - Fixed setting of creation date. For some strange reason one cannot modify the TotalSeconds property of f.CreationDate directly but must use an interim Date object for this</SourceLine>
   <SourceLine>if mbHdr.UInt32Value(95) &lt;&gt; 0 then</SourceLine>
   <SourceLine>dim date1, date2 as Date</SourceLine>
   <SourceLine>date1 = new Date</SourceLine>
   <SourceLine>date2 = new Date</SourceLine>
   <SourceLine>date1.TotalSeconds = z_ulongToDouble(mbHdr.UInt32Value(91)) // creation date</SourceLine>
   <SourceLine>date2.TotalSeconds = z_ulongToDouble(mbHdr.UInt32Value(95)) // modification date</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>#pragma BreakOnExceptions off</SourceLine>
   <SourceLine>f.CreationDate = date1</SourceLine>
   <SourceLine>#pragma BreakOnExceptions default</SourceLine>
   <SourceLine>catch exc as RuntimeException</SourceLine>
   <SourceLine>' On Linux, Xojo raises an UnsupportedOperationException here, so let's silently ignore it</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>f.ModificationDate = date2</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>z_adjustMacFilename mbHdr.PString(1), mbHdr.Byte(106), f</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not f.Directory and mbHdr.UInt64Value(65) &lt;&gt; 0 then</SourceLine>
   <SourceLine>TTsFolderItem.SetMacType f, mbHdr.StringValue(65,4)</SourceLine>
   <SourceLine>f.MacCreator = mbHdr.StringValue(69,4)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>///////////////////////////</SourceLine>
   <SourceLine>// apply FInfo + FXInfo</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>declare Function FSGetCatalogInfo Lib CarbonLibName (ref as Ptr, whichInfo as Integer, catInfo as Ptr, name as Ptr, spec as Ptr, parent as Ptr) as Integer</SourceLine>
   <SourceLine>declare Function FSSetCatalogInfo Lib CarbonLibName (ref as Ptr, whichInfo as Integer, catInfo as Ptr) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine>dim fsref, catInfo as MemoryBlock</SourceLine>
   <SourceLine>fsref = TTsFolderItem.FSRefOfFolderItem (f)</SourceLine>
   <SourceLine>catInfo = new MemoryBlock(144)</SourceLine>
   <SourceLine>if catInfo = nil then</SourceLine>
   <SourceLine>raise new OutOfMemoryException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>res = FSGetCatalogInfo (fsref, &amp;H1800, catInfo, nil, nil, nil) // whichInfo: FXInfo, FInfo</SourceLine>
   <SourceLine>if res &lt;&gt; 0 then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim v as Integer</SourceLine>
   <SourceLine>v = BitwiseAnd(&amp;HFF-&amp;H11,mbHdr.Byte(73)) // FInfo.fdFlags (hi), but clear "hasBeenInited" and "nameLocked" flags</SourceLine>
   <SourceLine>v = Bitwise.ShiftLeft (v, 8) + mbHdr.Byte(101) // FInfo.fdFlags (lo)</SourceLine>
   <SourceLine>catInfo.UInt16Value(32+8) = v // FInfo.fdFlags (PPC- and Intel-savvy)</SourceLine>
   <SourceLine>catInfo.UInt16Value(84+8) = mbHdr.UInt16Value(106) // FXInfo.fdScript, fdXFlags</SourceLine>
   <SourceLine>res = FSSetCatalogInfo (fsref, &amp;H1800, catInfo) // whichInfo: FXInfo, FInfo</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>///////////////////////////</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>f.Visible = BitwiseAnd(mbHdr.Byte(73),&amp;H40) = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mbHdr.Byte(81) &lt;&gt; 0 and not f.Directory then</SourceLine>
   <SourceLine>if me.lockFiles then</SourceLine>
   <SourceLine>f.Locked = true //Note: this one must come last, or changes to other properties may not work</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, mbHdr as MemoryBlock</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CanExtract</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1068759039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CanExtract() As Boolean</SourceLine>
   <SourceLine>dim i as Integer</SourceLine>
   <SourceLine>i = CompressionMethod()</SourceLine>
   <SourceLine>return (i = 0 or i = 8) and not IsEncrypted() and not IsDirectory()</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Comment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1584091135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Comment() As String</SourceLine>
   <SourceLine>// Returns the optional comment about the entry. Returns empty string if no comment available</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.sysEncComment</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>CompressedSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>221751295</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CompressedSize() As UInt32</SourceLine>
   <SourceLine>return me.header.UInt32Value(20)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInt32</ItemResult>
 </Method>
 <Method>
  <ItemName>CompressionMethod</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1122564095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CompressionMethod() As Integer</SourceLine>
   <SourceLine>// common values:</SourceLine>
   <SourceLine>// 0: stored (not compressed - can always be read)</SourceLine>
   <SourceLine>// 1: shrunk (not supported)</SourceLine>
   <SourceLine>// 6: imploded (not supported)</SourceLine>
   <SourceLine>// 8: deflated (supported through e-CryptIt Engine plugin)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.header.UInt16Value(10)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>196276223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// private because you're not supposed to use "new ZipEntry".</SourceLine>
   <SourceLine>// Instead, create a new ZipEntry by using one of the ZipArchive.Add... methods</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4129</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EnableFileLocking</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1413208063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnableFileLocking(enabled as Boolean)</SourceLine>
   <SourceLine>// Since v1.1 of this Zip package, items marked as "protected" in the archive</SourceLine>
   <SourceLine>// will not be locked any more by default when extracted.</SourceLine>
   <SourceLine>// To have such items locked at extraction, call this function with "true" as</SourceLine>
   <SourceLine>// the "enabled" parameter.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.lockFiles = enabled</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>enabled as Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>EnableMacBinary1Detection</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1846917119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnableMacBinary1Detection(enabled as Boolean)</SourceLine>
   <SourceLine>// By default, the outdated "MacBinary I" format will not be detected. Some zip and MB encoding</SourceLine>
   <SourceLine>// tools on other platforms may create incorrect or those outdated MB-headers.</SourceLine>
   <SourceLine>// If you enabable this mode, they're more likely to be detected as being MB-headers.</SourceLine>
   <SourceLine>// This feature comes with a risk, however: Normal files, that are not MB-encoded, might</SourceLine>
   <SourceLine>// mistakenly believed to be MB-encoded, in seldom cases. For that reason, enable this</SourceLine>
   <SourceLine>// feature only in cases where you believe you need it, but not be default!</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// To use this feature, you must call this function before you attempt to extract the item.</SourceLine>
   <SourceLine>// To be more safe, you should only enable this feature if the item's file name ends with</SourceLine>
   <SourceLine>// ".bin", since this is usually the case for MB encoded files of this problematic kind.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.supportMB1 = enabled</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>enabled as Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ErrorMessage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>671055871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ErrorMessage() As String</SourceLine>
   <SourceLine>// Returns a description about the latest error as an english phrase</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Functions calls that could cause such an error:</SourceLine>
   <SourceLine>// - Extract()</SourceLine>
   <SourceLine>// - Verify()</SourceLine>
   <SourceLine>// - SetPath() (the one returning a Boolean result)</SourceLine>
   <SourceLine>// - ExtraField()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.errmsg</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>ExternalFileAttributes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1780525055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ExternalFileAttributes() As Integer</SourceLine>
   <SourceLine>// retrieves "external file attributes", a 4 byte field</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// On Unix, this field contains the permissions in the upper 8 bits; on DOS/Windows, the lowest</SourceLine>
   <SourceLine>// byte contains the File Attribues (read only, hidden, system, volume label, etc.)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Call SetExternalFileAttributes() to change the value.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Default for newly created items depends on "OSMadeBy" for the item:</SourceLine>
   <SourceLine>//  if 3 (unix), the file's permissions are copied, provided this code runs on a Mac or Linux machine (but not Windows),</SourceLine>
   <SourceLine>//  otherwise this field is set to 0.</SourceLine>
   <SourceLine>// However, the lowest byte (bit 0) can contain the value 1 to tell ZipIt 2.2.2 that the file name is UTF-8 encoded</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.header.UInt32Value(38)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Extract</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1385641983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Extract(removeMacBinaryHeader as Boolean) As MemoryBlock</SourceLine>
   <SourceLine>// Returns the file data as a String (or MemoryBlock, which can be assigned to each other)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dataOut as new StringWriter</SourceLine>
   <SourceLine>dim mbHdr as MemoryBlock</SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ok = Extract (removeMacBinaryHeader, dataOut, nil, mbHdr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ok then</SourceLine>
   <SourceLine>return  dataOut.WrittenData</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exception err as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Internal error (exception)"</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>removeMacBinaryHeader as Boolean</ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>Extract</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1928546303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Extract(decodeMacBinary as Boolean, dataOut as SeqDataOutputStream, rsrcOut as SeqDataOutputStream, ByRef mbHdr as MemoryBlock) As Boolean</SourceLine>
   <SourceLine>// Writes the data of this entry to one or two streams.</SourceLine>
   <SourceLine>// If decodeMacBinary is FALSE or if the data is not MacBinary encoded, then all data is written to the</SourceLine>
   <SourceLine>//   dataOut stream, and rsrcOut is not used.</SourceLine>
   <SourceLine>// If decodeMacBinary is TRUE and if the data is MacBinary encoded, the two forks are streamed to dataOut</SourceLine>
   <SourceLine>//   and rsrcOut, respectively. If either of the two stream parameters is nil, their fork will be skipped;</SourceLine>
   <SourceLine>//   mbHdr will be set to a MemoryBlock of size 128 containing the MacBinary header. This works even</SourceLine>
   <SourceLine>//   on folders which have a MacBinary header.</SourceLine>
   <SourceLine>// The streams will be opened and closed by this function as needed.</SourceLine>
   <SourceLine>// Returns TRUE if the extraction was successful. FALSE might mean a bad CRC or other data or writing errors.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mb as MemoryBlock, ok as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mbHdr = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if dataOut = nil and rsrcOut = nil and decodeMacBinary = false then</SourceLine>
   <SourceLine>// this makes no sense -&gt; alert the programmer</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aborted as Boolean</SourceLine>
   <SourceLine>ok = z_unzip(dataOut, rsrcOut, decodeMacBinary, me.isFolder, mb, false, aborted)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mbHdr = mb</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return ok</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exception err as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Internal error (exception)"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>decodeMacBinary as Boolean, dataOut as SeqDataOutputStream, rsrcOut as SeqDataOutputStream, ByRef mbHdr as MemoryBlock</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Extract</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1409820671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Extract(destination as FolderItem) As Boolean</SourceLine>
   <SourceLine>// Same as Extract(destination as FolderItem, decodeMacBinary as Boolean),</SourceLine>
   <SourceLine>//   but with the difference that decodeMacBinary is always TRUE, which</SourceLine>
   <SourceLine>//   leads to properly extracted files on Mac OS system, and will extract</SourceLine>
   <SourceLine>//   the data fork only of files in MacBinary format on Windows systems,</SourceLine>
   <SourceLine>//   meaning that the (on Windows useless) Resource fork will be discarded</SourceLine>
   <SourceLine>//   on Windows systems, which is usually what people want.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Extract (destination, true, true, false, false)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>destination as FolderItem</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Extract</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1586247679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Extract(fdest as FolderItem, decodeMacBinary as Boolean, makeExecutable as Boolean, keepBadFiles as Boolean, ignoreBadMacMetadata as Boolean) As Boolean</SourceLine>
   <SourceLine>// Stores the data of this entry in a file or creates a folder.</SourceLine>
   <SourceLine>// If the destination item already exists, it will be replaced, unless there's a folder&lt;-&gt;file conflict</SourceLine>
   <SourceLine>//   or if the file, containing folder or volume is write protected (locked)</SourceLine>
   <SourceLine>// Sets the modification (but not creation) date to the information from the archive entry.</SourceLine>
   <SourceLine>// If the entry contains Type&amp;Creator information, the destination file will get them assigned,</SourceLine>
   <SourceLine>//   otherwise T&amp;C will be set depending on the file's extension. (Mac OS only)</SourceLine>
   <SourceLine>// If the entry contains an explicit Macintosh file name, the destination will receive this name</SourceLine>
   <SourceLine>//   if the passed destination.Name was identical to the archive entry's DOS name. (Mac OS only)</SourceLine>
   <SourceLine>// If the entry is stored in MacBinary format and decodeMacBinary is TRUE, it will be automatically</SourceLine>
   <SourceLine>//   split into its data and resource fork - on Mac OS both will be written to the destination file,</SourceLine>
   <SourceLine>//   on Windows only the data fork will be written, while the resource fork will be ignored.</SourceLine>
   <SourceLine>// If 'makeExecutable' is true, extracted files that are not marked as text files and which do not</SourceLine>
   <SourceLine>//   contain unix file permissions, will be made executable on Mac OS systems so that Mac OS</SourceLine>
   <SourceLine>//   Packages become executable (Stuffit Expander does this, too). If this parameter is false,</SourceLine>
   <SourceLine>//   files will be made executable only if unix permissions are included (this is how the unix</SourceLine>
   <SourceLine>//   command line tools "zip" and "unzip" do it). Using "false" may speed up extraction a little,</SourceLine>
   <SourceLine>//   that's why you have the choice here: if you know that the archive you are extracting has been</SourceLine>
   <SourceLine>//   created with this software (v1.2) or the cmdline "zip" tool, the correct permissions will</SourceLine>
   <SourceLine>//   automatically be set, then set 'makeExecutable' to "false"; but if the file may contain executable</SourceLine>
   <SourceLine>//   files and has been created by some other tools such as ZipIt, you might want to set this parm</SourceLine>
   <SourceLine>//   to true to make sure the files remain executable after extraction.</SourceLine>
   <SourceLine>// Returns TRUE if it was successful. FALSE might mean a bad CRC or other data errors,</SourceLine>
   <SourceLine>//   including a write failure due to a locked or full volume or existing and locked file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dataFork, rsrcFork as SeqDataOutputStream, d as Date, ok as Boolean, type, crea, name as String</SourceLine>
   <SourceLine>dim mbHdr as MemoryBlock, bs as BinaryStream</SourceLine>
   <SourceLine>dim zdest as TTsFolderItem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fdest = nil and not keepBadFiles then</SourceLine>
   <SourceLine>me.errmsg = "No destination given"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim attr as Integer = me.ExternalFileAttributes // The low byte usually contains the DOS File Attribute, the high word the permissions</SourceLine>
   <SourceLine>dim st_mode as UInt16 = Bitwise.ShiftRight(attr, 16)</SourceLine>
   <SourceLine>dim isSymlink as Boolean = Bitwise.BitAnd(st_mode,&amp;o170000) = &amp;o120000</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fdest &lt;&gt; nil then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zdest = new TTsFolderItem(fdest)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.isFolder then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// we extract a folder</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>if not zdest.exists then</SourceLine>
   <SourceLine>zdest.CreateAsFolder</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zdest.exists then</SourceLine>
   <SourceLine>me.errmsg = "Folder creation failed"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zdest.Directory then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>me.errmsg = "Archive entry is a folder but a file exists at the destination already. Won't replace that."</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// we extract a file</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if zdest.Directory then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>me.errmsg = "Archive entry is a file but a folder exists at the destination already. Won't replace that."</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zdest.Delete // delete the existing regular file or symlink or alias</SourceLine>
   <SourceLine>if zdest.Exists then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>me.errmsg = "A file exists already at the destination which can't be deleted"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if isSymlink then</SourceLine>
   <SourceLine>// We need to create a symlink here</SourceLine>
   <SourceLine>dataFork = new StringWriter()</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// we write a regular file</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2012</SourceLine>
   <SourceLine>bs = BinaryStream.Create (zdest)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>bs = zdest.CreateBinaryFile("")</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>if bs = nil then</SourceLine>
   <SourceLine>me.errmsg = "Creating destination file failed"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>bs.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>// new files default to "????" - let's change them to zeros</SourceLine>
   <SourceLine>type = new MemoryBlock(4)</SourceLine>
   <SourceLine>zdest.MacCreator = type</SourceLine>
   <SourceLine>TTsFolderItem.SetMacType zdest, type</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// create a data fork writer</SourceLine>
   <SourceLine>dataFork = new FileWriter(zdest)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// create a rsrc fork writer in case we're on the Mac and it shall be extracted from the entry data</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>if decodeMacBinary then</SourceLine>
   <SourceLine>rsrcFork = new RsrcForkWriter(zdest)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if ' me.isFolder else</SourceLine>
   <SourceLine>end if ' fdest &lt;&gt; nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// perform the extraction</SourceLine>
   <SourceLine>dim aborted as Boolean</SourceLine>
   <SourceLine>ok = z_unzip(dataFork, rsrcFork, decodeMacBinary, me.isFolder, mbHdr, ignoreBadMacMetadata, aborted)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if zdest &lt;&gt; nil then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not ok and (aborted or not keepBadFiles) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zdest.Delete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if isSymlink then</SourceLine>
   <SourceLine>zdest.CreateSymlink (StringWriter(dataFork).WrittenData)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// update modification time/date</SourceLine>
   <SourceLine>d = me.Time()</SourceLine>
   <SourceLine>if d &lt;&gt; nil then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>#pragma BreakOnExceptions off</SourceLine>
   <SourceLine>zdest.CreationDate = d</SourceLine>
   <SourceLine>#pragma BreakOnExceptions default</SourceLine>
   <SourceLine>catch exc as RuntimeException</SourceLine>
   <SourceLine>' On Linux, Xojo raises an UnsupportedOperationException here, so let's silently ignore it</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>zdest.ModificationDate = d</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>// update Type and Creator</SourceLine>
   <SourceLine>// Note: if type is set to "slnk" (creator to "rhap"), the file becomes a Symlink</SourceLine>
   <SourceLine>if isSymlink then</SourceLine>
   <SourceLine>// no messing with symlinks!</SourceLine>
   <SourceLine>elseif mbHdr &lt;&gt; nil then</SourceLine>
   <SourceLine>// use the Type and Creator from the stored file's MacBinary header</SourceLine>
   <SourceLine>ApplyMacBinaryInformation(zdest, mbHdr)</SourceLine>
   <SourceLine>elseif me.extra &lt;&gt; nil and me.extra.GetTypeCreatorName(type, crea, name) then</SourceLine>
   <SourceLine>// use the information from the archive entry's Extra Field</SourceLine>
   <SourceLine>TTsFolderItem.SetMacType zdest, type</SourceLine>
   <SourceLine>zdest.MacCreator = crea</SourceLine>
   <SourceLine>if name &lt;&gt; "" then</SourceLine>
   <SourceLine>z_adjustMacFilename name, 0, zdest</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim os as Integer = me.OSMadeBy</SourceLine>
   <SourceLine>dim isWinOrUnix as Boolean = (os = 0 or os = 3 or os = 11) // 0 -&gt; PKZip, 3 -&gt; Info-Zip, 7 -&gt; ZipIt, 11 -&gt; NTFS (Info-Zip for NT)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// update Unix permissions</SourceLine>
   <SourceLine>if isWinOrUnix and (Bitwise.BitAnd (attr, 2) &lt;&gt; 0) then // DOS hidden attribute</SourceLine>
   <SourceLine>zdest.Visible = false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if Bitwise.BitAnd (st_mode,&amp;o7777) &lt;&gt; 0 and (isWinOrUnix or os = 7) then</SourceLine>
   <SourceLine>// attributes field appears to contain unix permissions</SourceLine>
   <SourceLine>zdest.SetUnixPermissions (st_mode)</SourceLine>
   <SourceLine>elseif makeExecutable and not me.isFolder and not me.IsTextFile() then</SourceLine>
   <SourceLine>// set the "executable" permission on all binary files to make apps runnable that are Mac OS Packages</SourceLine>
   <SourceLine>zdest.SetUnixPermissions (Bitwise.BitOr (zdest.UnixPermissions, &amp;o111))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return ok</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception err as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Internal error (exception)"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>fdest as FolderItem, decodeMacBinary as Boolean, makeExecutable as Boolean, keepBadFiles as Boolean, ignoreBadMacMetadata as Boolean</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ExtraField</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>150876159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ExtraField() As ZipExtraField</SourceLine>
   <SourceLine>// Returns the Extra Field from the Local Header, which may be different from the one in</SourceLine>
   <SourceLine>// the Central Directory Header -- If they differ, this one is always the one with all the infos,</SourceLine>
   <SourceLine>// while the other one may leave out some information (see the Zip Archive specs).</SourceLine>
   <SourceLine>// Accessing this one is a bit slower, however, since it must still be read from the archive,</SourceLine>
   <SourceLine>// while the Extra Field in the Local Header is already cached in memory.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If an error occured, nil will be returned, otherwise a valid object is returned, even if the Extra Field is empty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim lastpos, NameLen, ExtraFieldLen, i as Integer</SourceLine>
   <SourceLine>dim zipStream as BinaryStream</SourceLine>
   <SourceLine>dim extra as ZipExtraField</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zipStream = me.d.zipStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if zipStream = nil then</SourceLine>
   <SourceLine>me.errmsg = "Archive is closed"</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>lastpos = zipStream.Position</SourceLine>
   <SourceLine>zipStream.Position = me.header.UInt32Value(42)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>i = zipStream.ReadInt32 // 50 4B 03 04   File Header Signature</SourceLine>
   <SourceLine>if i &lt;&gt; &amp;h04034B50 then</SourceLine>
   <SourceLine>zipStream.Position = lastpos</SourceLine>
   <SourceLine>me.errmsg = "Invalid Local File Header signature (archive appears to be severely corrupted)"</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zipStream.Position = zipStream.Position+22</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>NameLen = zipStream.ReadInt16 // Filename Length</SourceLine>
   <SourceLine>ExtraFieldLen =  zipStream.ReadInt16 // Extra Field Length</SourceLine>
   <SourceLine>zipStream.Position = zipStream.Position + NameLen</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>extra = new ZipExtraField(me.d, zipStream.Read(ExtraFieldLen))</SourceLine>
   <SourceLine>extra.Lock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zipStream.Position = lastpos</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return extra</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>ZipExtraField</ItemResult>
 </Method>
 <Method>
  <ItemName>ExtraFieldInCentralDir</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>836558847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ExtraFieldInCentralDir() As ZipExtraField</SourceLine>
   <SourceLine>// Returns the Extra Field from the Central Directory Header, which may be different from</SourceLine>
   <SourceLine>// the one in the Local Header -- If they differ, this one may leave out some information,</SourceLine>
   <SourceLine>// while the other one contains all the infos (see the Zip Archive specs).</SourceLine>
   <SourceLine>// Accessing this one is faster, however, since it's already cached in memory, while</SourceLine>
   <SourceLine>// the Extra Field in the Local Header must still be read from the archive.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.extra.IsLocked then</SourceLine>
   <SourceLine>// this would be an internal error - this obj must have been locked when it was passed to ZipEntry</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.extra // must not be nil any more (since v1.1)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>ZipExtraField</ItemResult>
 </Method>
 <Method>
  <ItemName>GetMacBinaryHeader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1449666559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetMacBinaryHeader(ByRef mbHdr as MemoryBlock) As Boolean</SourceLine>
   <SourceLine>// Returns TRUE if the item is stored in MacBinary format. Will</SourceLine>
   <SourceLine>//   also return the 128 Byte long MacBinary header in this case.</SourceLine>
   <SourceLine>// Returns FALSE otherwise, along with setting "mbHdr" to nil.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// The Type and Creator can be retrieved as follows:</SourceLine>
   <SourceLine>//   MacType = mbHdr.StringValue(65,4)</SourceLine>
   <SourceLine>//   MacCreator = mbHdr.StringValue(69,4)</SourceLine>
   <SourceLine>//   DataForkSize = mbHdr.UInt32Value(83)</SourceLine>
   <SourceLine>//   RsrcForkSize = mbHdr.UInt32Value(87)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// You may also call ApplyMacBinaryInformation() to apply Type, Creator and</SourceLine>
   <SourceLine>//   other file/folder attributes from the MacBinary header to a file or folder.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// For more information on the MacBinary format, see:</SourceLine>
   <SourceLine>//   http://www.lazerware.com/formats/</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mb as MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mbHdr = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim aborted as Boolean</SourceLine>
   <SourceLine>if not z_unzip(nil, nil, true, true, mb, false, aborted) then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errmsg = ""</SourceLine>
   <SourceLine>mbHdr = mb</SourceLine>
   <SourceLine>return mbHdr &lt;&gt; nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception err as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Internal error (exception)"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef mbHdr as MemoryBlock</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>157716479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetPath(names() as String)</SourceLine>
   <SourceLine>// returns the file name and path in an array split by the directory separators</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim i as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>redim names(Ubound(me.path))</SourceLine>
   <SourceLine>for i = 0 to Ubound(me.path)</SourceLine>
   <SourceLine>names(i) = me.path(i)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>names() as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>IsDirectory</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1788981247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsDirectory() As Boolean</SourceLine>
   <SourceLine>return me.isFolder</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsEncrypted</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1372848127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsEncrypted() As Boolean</SourceLine>
   <SourceLine>return BitwiseAnd(me.header.UInt16Value(8),1) &lt;&gt; 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsTextFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2026743807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsTextFile() As Boolean</SourceLine>
   <SourceLine>// This information is currently (24Apr03) not used inside the Zip package.</SourceLine>
   <SourceLine>// That means: if a text file is extracted, no changes to the end-of-line chars</SourceLine>
   <SourceLine>// will be made.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return BitwiseAnd(me.header.UInt16Value(36),1) &lt;&gt; 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeDestination</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1497761791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeDestination(root as FolderItem, followAliases as Boolean) As FolderItem</SourceLine>
   <SourceLine>// Creates a FolderItem object for the original path given by the archive entry.</SourceLine>
   <SourceLine>// Will create intermittent folders if necessary.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Caution: "nil" may be returned if followAliases=false and an Alias exists at that place already,</SourceLine>
   <SourceLine>// or when a file exists where a folder is desired by the destination path</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim dest as FolderItem, i as Integer</SourceLine>
   <SourceLine>dest = root</SourceLine>
   <SourceLine>for i = 0 to Ubound(me.path)</SourceLine>
   <SourceLine>dest = MakeDestinationChild(dest, me.path(i), followAliases)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return dest</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>root as FolderItem, followAliases as Boolean</ItemParams>
  <ItemResult>FolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeDestinationChild</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1056569343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeDestinationChild(dir as FolderItem, pathItem as String, followAliases as Boolean) As FolderItem</SourceLine>
   <SourceLine>dim dest as FolderItem, s as String</SourceLine>
   <SourceLine>dest = dir</SourceLine>
   <SourceLine>s = me.d.decodeFromZip(me.d.encodeForZip(pathItem))</SourceLine>
   <SourceLine>if s = ".." then</SourceLine>
   <SourceLine>dest = dest.Parent</SourceLine>
   <SourceLine>elseif s &lt;&gt; "" then</SourceLine>
   <SourceLine>if not dest.exists then</SourceLine>
   <SourceLine>dest.CreateAsFolder</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if followAliases then</SourceLine>
   <SourceLine>dest = dest.Child(s)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dest = dest.TrueChild(s)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return dest</SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>dir as FolderItem, pathItem as String, followAliases as Boolean</ItemParams>
  <ItemResult>FolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>Name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1384392703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Name() As String</SourceLine>
   <SourceLine>// returns the file name without any path in front of it</SourceLine>
   <SourceLine>return me.path(Ubound(me.path))</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>OSMadeBy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>116547583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function OSMadeBy() As Integer</SourceLine>
   <SourceLine>// Read: "OS made by"</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Returns the code of the OS that this entry is using for file name encoding and</SourceLine>
   <SourceLine>// text file end-of-line format.</SourceLine>
   <SourceLine>// See the "PKZIP format.txt" or any "appnote.txt" on the web for the codes</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Call SetOSMadeBy() to change the value. Default for newly created items is 0</SourceLine>
   <SourceLine>// (This default can be changed using ZipArchive.SetDefaultOSMadeBy)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.header.Byte(5)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>RawPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1755267071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RawPath() As String</SourceLine>
   <SourceLine>// Returns the path as it appears in the Zipfile's directory.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// It always uses "/" as directory separators, even on Mac OS Classic!</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// So be careful: This name may not be the original file's path, because</SourceLine>
   <SourceLine>//   if the original name contained invalid DOS chars, such as "/",</SourceLine>
   <SourceLine>//   then this returns a cleaned up name!</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.sysEncName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>SameRawPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1560133631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SameRawPath(rawPath as String) As Boolean</SourceLine>
   <SourceLine>// Use this function if you want to see if a given path is equal to</SourceLine>
   <SourceLine>// the one of this entry. Do not get the path using RawPath()</SourceLine>
   <SourceLine>// and then compare yourself, because that might fail with</SourceLine>
   <SourceLine>// non-ASCII characters in file names that are unicode encoded</SourceLine>
   <SourceLine>// (this is because there are several different ways to encode</SourceLine>
   <SourceLine>// the same non-ASCII character, and it happens under Mac OS</SourceLine>
   <SourceLine>// that exactly this will happen: "ä" &lt;&gt; "ä"). This function takes</SourceLine>
   <SourceLine>// care of this problem.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.d.encodeForZip(rawPath) = me.zipEncName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>rawPath as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SetComment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1872171007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetComment(comment as String)</SourceLine>
   <SourceLine>// Sets the entry's comment that'll be stored in the archive</SourceLine>
   <SourceLine>// when the directory is written (by ZipArchive.Close or</SourceLine>
   <SourceLine>// ZipArchive.Flush)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.sysEncComment = comment</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.zipEncComment = me.d.encodeForZip(me.sysEncComment)</SourceLine>
   <SourceLine>me.d.dirty = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>comment as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SetExternalFileAttributes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>759291903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetExternalFileAttributes(attr as Integer)</SourceLine>
   <SourceLine>// Sets the 4-byte Attributes field</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// On Unix, this field contains the permissions in the upper 8 bits; on DOS/Windows, the lowest</SourceLine>
   <SourceLine>// byte contains the File Attribues (read only, hidden, system, volume label, etc.)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Call ExternalFileAttributes() to inquire about the current value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.header.UInt32Value(38) = attr</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>attr as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SetExtraFieldInCentralDir</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1477998591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetExtraFieldInCentralDir(extraField as ZipExtraField)</SourceLine>
   <SourceLine>// Sets a new Extra Field for the Central Directory only. Use this function</SourceLine>
   <SourceLine>// if you want to add an Extra Field that differs between the two Headers.</SourceLine>
   <SourceLine>// To achieve this, first create the "long" Extra Field and provide it when</SourceLine>
   <SourceLine>// you add the file to the archive. After that, call this function to set</SourceLine>
   <SourceLine>// the Extra Field in the Central Dir Header.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ef as ZipExtraField</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ef = extraField</SourceLine>
   <SourceLine>if ef = nil then</SourceLine>
   <SourceLine>ef = new ZipExtraField(me.d, "")</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>ef.Lock</SourceLine>
   <SourceLine>me.extra = ef</SourceLine>
   <SourceLine>me.header.UInt16Value(30) = LenB(ef.AsData())</SourceLine>
   <SourceLine>me.d.dirty = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>extraField as ZipExtraField</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SetOSMadeBy</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>398555135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetOSMadeBy(code as Integer)</SourceLine>
   <SourceLine>// See the "PKZIP format.txt" or any "appnote.txt" on the web for the codes</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Call OSMadeBy() to inquire about the current value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.header.Byte(5) = code</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>code as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SetTextFileFlag</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>660410367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetTextFileFlag(isText as Boolean)</SourceLine>
   <SourceLine>// If you set the "text file" flag, note that the text should use CR+LF end-of-line (EOL)</SourceLine>
   <SourceLine>// delimiters because the items are marked to be in MS-DOS format, where these</SourceLine>
   <SourceLine>// EOLs are used for text files. Otherwise, tools that extract such items might not be</SourceLine>
   <SourceLine>// able to  convert the line endings properly.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if isText then</SourceLine>
   <SourceLine>me.header.UInt16Value(36) = BitwiseOr(me.header.UInt16Value(36), 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>me.header.UInt16Value(36) = BitwiseAnd(me.header.UInt16Value(36), 65535-1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>isText as Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Size</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1899624447</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Size() As UInt32</SourceLine>
   <SourceLine>return me.header.UInt32Value(24)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInt32</ItemResult>
 </Method>
 <Method>
  <ItemName>Time</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>894740479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Time() As Date</SourceLine>
   <SourceLine>// Returns the time stamp of the entry,</SourceLine>
   <SourceLine>//   returns nil if the time was not specified in the archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim d as Date, tim, dat as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>tim = me.header.UInt16Value(12)</SourceLine>
   <SourceLine>dat = me.header.UInt16Value(14)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if tim = 0 and dat = 0 then</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>d = new Date</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// convert date/time from DOS format</SourceLine>
   <SourceLine>d.Year = BitwiseAnd(dat,&amp;H0FE00) \ &amp;H0200 +1980</SourceLine>
   <SourceLine>d.Month =  BitwiseAnd(dat,&amp;H1E0) \ &amp;H20</SourceLine>
   <SourceLine>d.Day = BitwiseAnd(dat,31)</SourceLine>
   <SourceLine>d.Hour = BitwiseAnd(tim,&amp;HF800) \ &amp;H800</SourceLine>
   <SourceLine>d.Minute = BitwiseAnd(tim,&amp;H7E0) \ &amp;H20</SourceLine>
   <SourceLine>d.Second = 2 * BitwiseAnd(tim,&amp;H1F)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return d</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <Method>
  <ItemName>UTCOffsetInMinutes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1109604351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UTCOffsetInMinutes() As Integer</SourceLine>
   <SourceLine>// Returns the offset of the current time to UTC (GMT) in minutes.</SourceLine>
   <SourceLine>// supports Mac OS, Windows and Linux</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note that the offset is not always an even multiple of 60,  but</SourceLine>
   <SourceLine>// there are also half hour offsets, even one 5:45h offset</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// This 6th version by Thomas Tempelmann (rb@tempel.org) on 13 Feb 2008</SourceLine>
   <SourceLine>//  (13 Feb 2008: Linux fix by Ed Lazor)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Using code from various authors found on the RB NUG mailing list</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Latest version can be found here: http://www.tempel.org/rb/#gmt</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim offset as integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetLinux or TargetMachO then</SourceLine>
   <SourceLine>#if TargetMachO then</SourceLine>
   <SourceLine>declare function localtime_r lib "/usr/lib/libc.dylib" (time_in as Ptr, time_out as Ptr) as Ptr</SourceLine>
   <SourceLine>declare function time lib "/usr/lib/libc.dylib" (tloc_ptr as Integer) as Integer</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// 13 Feb 2008: as suggested by Ed Lazor, now we use a "soft" declare and simplify the lib name:</SourceLine>
   <SourceLine>Soft Declare Function localtime_r Lib "libc" (time_in as Ptr, time_out as Ptr) as Ptr</SourceLine>
   <SourceLine>Soft Declare Function time Lib "libc" (tloc_ptr as Integer) as Integer</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>dim time_in, time_out as MemoryBlock</SourceLine>
   <SourceLine>time_in =  new MemoryBlock(4)</SourceLine>
   <SourceLine>time_out =  new MemoryBlock(44) // we assume that "int" is 4 byte on any supported Linux system</SourceLine>
   <SourceLine>time_in.Int32Value(0) = time (0) // Bugfix TT 21Apr06: need to pass current local time to get summer time offsets correctly</SourceLine>
   <SourceLine>if not TargetLinux or System.IsFunctionAvailable("localtime_r" , "libc") then</SourceLine>
   <SourceLine>call localtime_r (time_in, time_out)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>offset = time_out.Long (36) \ 60</SourceLine>
   <SourceLine>#elseif TargetMacOS then</SourceLine>
   <SourceLine>Declare Sub ReadLocation lib CarbonLibName (location As ptr)</SourceLine>
   <SourceLine>dim info as memoryBlock</SourceLine>
   <SourceLine>dim byteOffset as integer</SourceLine>
   <SourceLine>info = new MemoryBlock(12)</SourceLine>
   <SourceLine>ReadLocation info</SourceLine>
   <SourceLine>if info.LittleEndian then</SourceLine>
   <SourceLine>byteOffset = 8</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>byteOffset = 11</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>offset = info.Int16Value(9) * 256 + info.byte(byteOffset)</SourceLine>
   <SourceLine>offset = offset \ 60</SourceLine>
   <SourceLine>#elseif TargetWin32 then</SourceLine>
   <SourceLine>Declare Function GetTimeZoneInformation Lib "Kernel32" ( tzInfoPointer as Ptr ) as Integer</SourceLine>
   <SourceLine>// returns one of</SourceLine>
   <SourceLine>// TIME_ZONE_ID_UNKNOWN 0</SourceLine>
   <SourceLine>//      -- Note: e.g. New Delhi (GMT+5:30) and Newfoundland (-3:30) return this value 0</SourceLine>
   <SourceLine>// TIME_ZONE_ID_STANDARD 1</SourceLine>
   <SourceLine>// TIME_ZONE_ID_DAYLIGHT 2</SourceLine>
   <SourceLine>dim info as memoryBlock</SourceLine>
   <SourceLine>dim result, bias, dayLightbias as integer</SourceLine>
   <SourceLine>info = new MemoryBlock(172)</SourceLine>
   <SourceLine>result = GetTimeZoneInformation(info)</SourceLine>
   <SourceLine>bias = info.Int32Value(0)</SourceLine>
   <SourceLine>// note about bias: the original code I found in the NUG archives used Long(84) and switched to Long(0)</SourceLine>
   <SourceLine>// only for result=1 and result=2, but my tests found that Long(0) is also the right value for result=0</SourceLine>
   <SourceLine>if result = 2 then</SourceLine>
   <SourceLine>daylightBias = info.Int32Value(168)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>offset = - (bias + dayLightbias)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>this target is not supported yet - see if there's a new version at &lt;www.tempel.org/rb/&gt;</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return offset</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Verify</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>848021503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Verify() As Boolean</SourceLine>
   <SourceLine>// Checks the integrity of the data by uncompressing it and verifying its CRC</SourceLine>
   <SourceLine>// Returns TRUE if data is valid.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mb as MemoryBlock</SourceLine>
   <SourceLine>dim aborted as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return z_unzip(nil, nil, false, false, mb, false, aborted)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>exception err as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Internal error (exception)"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1628291071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>See the notes in the class "ZipArchive" for more information</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Important</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>567285759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Important</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>----------------------------------</NoteLine>
   <NoteLine>Important note about adding Set... functions here</NoteLine>
   <NoteLine>----------------------------------</NoteLine>
   <NoteLine>&#32;&#32;</NoteLine>
   <NoteLine>We must not provide methods that allow the change of any ZipEntry</NoteLine>
   <NoteLine>  properties other than the comment (comments are stored only in the dir)</NoteLine>
   <NoteLine>  here, because altering any other properties would only be stored in</NoteLine>
   <NoteLine>  the Central Directory structure, but not in the Local File Header,</NoteLine>
   <NoteLine>  causing header mismatches.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>So, if one wants to alter the name or the Extra Field of an item in the</NoteLine>
   <NoteLine>  archive, the entire archived file needs to be rewritten (appended)</NoteLine>
   <NoteLine>  with the current implemention of these classes. To overcome this</NoteLine>
   <NoteLine>  limitation, one would have to move any data behind the modified</NoteLine>
   <NoteLine>  entry, which can be quite inefficient with larger archives. Instead,</NoteLine>
   <NoteLine>  the way to go is to Remove the original entry, then generate a new</NoteLine>
   <NoteLine>  one and copy the compressed data over. The only exception is when</NoteLine>
   <NoteLine>  the replacement will be the same size or smaller than the original.</NoteLine>
   <NoteLine>  In case it's smaller, ZipArchive.Compact should be called afterwards.</NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>z_hasDittoName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="-1135068020">
 <ObjName>ZipExtractor</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ExtractAllSilently</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>693338111</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ExtractAllSilently(zipFile as FolderItem, destFolder as FolderItem) As Boolean</SourceLine>
   <SourceLine>// Extracts all files from a zip archive into a folder</SourceLine>
   <SourceLine>// Returns true if it was successfuly.</SourceLine>
   <SourceLine>// If it failed, you can call LastErrMsg or LastErrMsgs to</SourceLine>
   <SourceLine>// get information about what went wrong.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim e as ZipEntry</SourceLine>
   <SourceLine>dim i as Integer</SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine>dim totalBytes as Double</SourceLine>
   <SourceLine>dim f as FolderItem</SourceLine>
   <SourceLine>dim zar as ZipArchive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>redim me.p_errMsg(-1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zar = new ZipArchive</SourceLine>
   <SourceLine>if not zar.Open(zipFile, false) then</SourceLine>
   <SourceLine>me.p_errMsg.Append zipFile.ShellPath : zar.ErrorMessage</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Calculate the sum of all bytes of all files to extract</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// This information is, however, currently not used further.</SourceLine>
   <SourceLine>// Feel free to alter this code to use the information,</SourceLine>
   <SourceLine>// e.g. to display a progress bar to the user.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>totalBytes = 0</SourceLine>
   <SourceLine>for i = 1 to zar.EntryCount</SourceLine>
   <SourceLine>e = zar.Entry(i)</SourceLine>
   <SourceLine>totalBytes = totalBytes + e.Size</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>me.p_totalBytes = totalBytes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Now extract all files into that folder</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to zar.EntryCount</SourceLine>
   <SourceLine>e = zar.Entry(i)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// optional check to support older or incorrectly created MacBinary headers:</SourceLine>
   <SourceLine>'if me.decodeMacBinary and Right(e.RawPath(),4) = ".bin" then</SourceLine>
   <SourceLine>'e.EnableMacBinary1Detection(true)</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if e.IsDirectory then</SourceLine>
   <SourceLine>// we skip the folders for now - folders get created automatically anyway,</SourceLine>
   <SourceLine>// so this skipping only speeds it up a little for now</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>f = e.MakeDestination(destFolder,false)</SourceLine>
   <SourceLine>if not e.Extract(f, true, true, false, false) then</SourceLine>
   <SourceLine>me.p_errMsg.Append e.RawPath : e.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Now update all the extract folders' attributes (date, permissions etc.)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = zar.EntryCount downTo 1</SourceLine>
   <SourceLine>e = zar.Entry(i)</SourceLine>
   <SourceLine>if e.IsDirectory then</SourceLine>
   <SourceLine>f = e.MakeDestination(destFolder,false)</SourceLine>
   <SourceLine>if not e.Extract(f, true, true, false, false) then</SourceLine>
   <SourceLine>me.p_errMsg.Append e.RawPath : e.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Close the archive (not really necessary, as it closes automatically</SourceLine>
   <SourceLine>// when the ZipArchive instance gets destructed)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ok = zar.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zar = nil</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.p_errMsg.Ubound &lt; 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>zipFile as FolderItem, destFolder as FolderItem</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetComment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1877426175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetComment(zipFile as FolderItem) As String</SourceLine>
   <SourceLine>// Gets the comments from a zip file if it has one.</SourceLine>
   <SourceLine>// (Usually, zip files do not contain comments)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine>dim zar as ZipArchive</SourceLine>
   <SourceLine>dim comm as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>redim me.p_errMsg(-1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zar = new ZipArchive</SourceLine>
   <SourceLine>if not zar.Open(zipFile, false) then</SourceLine>
   <SourceLine>me.p_errMsg.Append zipFile.ShellPath : zar.ErrorMessage</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>comm = zar.Comment</SourceLine>
   <SourceLine>ok = zar.Close</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>zar = nil</SourceLine>
   <SourceLine>return comm</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>zipFile as FolderItem</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>IsZipArchive</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>440221695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsZipArchive(file as FolderItem) As Boolean</SourceLine>
   <SourceLine>// Returns true if the given file is a zip archive.</SourceLine>
   <SourceLine>// If it returns false, HadError will return true,</SourceLine>
   <SourceLine>// and you can get the details by calling LastErrMsg.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine>dim zar as ZipArchive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>redim me.p_errMsg(-1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zar = new ZipArchive</SourceLine>
   <SourceLine>if not zar.Open(file, false) then</SourceLine>
   <SourceLine>me.p_errMsg.Append file.ShellPath : zar.ErrorMessage</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>ok = zar.Close</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>zar = nil</SourceLine>
   <SourceLine>return ok</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>file as FolderItem</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>LastErrMsgs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1720963071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LastErrMsgs() As String()</SourceLine>
   <SourceLine>// Returns an array of all error messages that occured</SourceLine>
   <SourceLine>// during the last ExtractAllSilently call</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim s() as String</SourceLine>
   <SourceLine>for each p as Pair in p_errMsg</SourceLine>
   <SourceLine>s.Append "File "+p.Left+": "+p.Right</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return s</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String()</ItemResult>
 </Method>
 <Method>
  <ItemName>HadError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>204503039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HadError() As Boolean</SourceLine>
   <SourceLine>// Returns true if there was an error during the last calls to</SourceLine>
   <SourceLine>// ExtractAllSilently, IsZipArchive and GetComment.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return p_errMsg.Ubound &gt;= 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>LastErrMsg</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>50266111</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LastErrMsg() As String</SourceLine>
   <SourceLine>// Returns just the first of any error messages that occured</SourceLine>
   <SourceLine>// during the last ExtractAllSilently call</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.HadError then</SourceLine>
   <SourceLine>dim p as Pair = p_errMsg(0)</SourceLine>
   <SourceLine>return "File "+p.Left+": "+p.Right</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>31160319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>You can use the methods in this optional class to easily extract all files from</NoteLine>
   <NoteLine>an archive, get its comment and check if a file is a Zip archive at all.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Property>
  <ItemName>p_errMsg()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>743561215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>p_errMsg() As Pair</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>p_errMsg() As Pair</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>p_totalBytes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1527117823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>p_totalBytes As Double</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>p_totalBytes As Double</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="563749168">
 <ObjName>ZipFolderItem</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ZipFolderItemBase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Children</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>729612287</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Children() As ZipFolderItem()</SourceLine>
   <SourceLine>// Returns a copy of the childrens array</SourceLine>
   <SourceLine>// Not only prevents this accidental modifications to this class' properties</SourceLine>
   <SourceLine>// but it also allows to use the "for each ... in item.Children" while modifying</SourceLine>
   <SourceLine>// the children array (Delete, Add) without running into problems due to</SourceLine>
   <SourceLine>// the very same array being modified in the loop.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim chs() as ZipFolderItem</SourceLine>
   <SourceLine>redim chs(mChildrenArray.Ubound)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i as Integer = 0 to mChildrenArray.Ubound</SourceLine>
   <SourceLine>chs(i) = mChildrenArray(i)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return chs</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>ZipFolderItem()</ItemResult>
 </Method>
 <Method>
  <ItemName>Entry</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1663395839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Entry() As ZipEntry</SourceLine>
   <SourceLine>// May be nil, i.e. for folders that have no own entry inside the Archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mEntry</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>ZipEntry</ItemResult>
 </Method>
 <Method>
  <ItemName>Child</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>902731775</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Child(name as String) As ZipFolderItem</SourceLine>
   <SourceLine>// Returns the child item with the given name.</SourceLine>
   <SourceLine>// Returns nil if no item with that name exists</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>name = zar.CleanName (name)</SourceLine>
   <SourceLine>return mChildrenDict.Lookup (name, nil)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>name as String</ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>Name</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>798226431</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Name() As String</SourceLine>
   <SourceLine>return mName</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>HasChild</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1827796991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasChild(name as String) As Boolean</SourceLine>
   <SourceLine>// Returns true if this item has a child with the given name</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>name = zar.CleanName (name)</SourceLine>
   <SourceLine>return mChildrenDict.HasKey (name)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>name as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>HasChildren</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1014480895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HasChildren() As Boolean</SourceLine>
   <SourceLine>// Returns whether this item has actual children (=true) or is empty (=false).</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mChildrenArray.Ubound &gt;= 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Parent</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1423456255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Parent() As ZipFolderItem</SourceLine>
   <SourceLine>if mParent &lt;&gt; nil then</SourceLine>
   <SourceLine>return ZipFolderItem(mParent.Value)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>PreviousVersions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>499595263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function PreviousVersions() As ZipEntry()</SourceLine>
   <SourceLine>// We must not return the array reference, but a copy</SourceLine>
   <SourceLine>dim a() as ZipEntry</SourceLine>
   <SourceLine>redim a(mPrevInstances.Ubound)</SourceLine>
   <SourceLine>for i as Integer = 0 to mPrevInstances.Ubound</SourceLine>
   <SourceLine>a(i) = mPrevInstances(i)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return a</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>ZipEntry()</ItemResult>
 </Method>
 <Method>
  <ItemName>CreateEmptyFolder</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1155670015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CreateEmptyFolder(name as String) As ZipFolderItem</SourceLine>
   <SourceLine>// Adds a folder to the archive, replacing any existing folder</SourceLine>
   <SourceLine>//   (and erasing its entire contents).</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If this function returns nil, an error had occured and the folder</SourceLine>
   <SourceLine>//   is not added.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as ZipArchive = me.zar</SourceLine>
   <SourceLine>dim rawPath as String</SourceLine>
   <SourceLine>if super.prepareStore (name, rawPath) then</SourceLine>
   <SourceLine>dim e_idx as Integer = zar.z_zip (nil, 0, nil, 0, nil, rawPath+"/", new Date, nil, false)</SourceLine>
   <SourceLine>if e_idx &gt; 0 then</SourceLine>
   <SourceLine>dim item as ZipFolderItem = me.createChild (name)</SourceLine>
   <SourceLine>item.setEntry zar.Entry(e_idx)</SourceLine>
   <SourceLine>return item</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mErrMsg = zar.ErrorMessage</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>name as String</ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>Directory</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>705863679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Directory() As Boolean</SourceLine>
   <SourceLine>// Returns true if the item is a folder, false if the item is a file</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mIsFolder</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>DeleteChild</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1202698239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DeleteChild(name as String) As Boolean</SourceLine>
   <SourceLine>// Deletes _all_ versions of the named child, and all its children and theirs, and so on.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note: To really erase the deleted items from the zip file, you need to call</SourceLine>
   <SourceLine>// ZipArchive.Compact once at the end after you've deleted all your items.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim item as ZipFolderItem = me.Child(name)</SourceLine>
   <SourceLine>if item &lt;&gt; nil then</SourceLine>
   <SourceLine>return item.remove()</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mErrMsg = "item not found: "+name</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>name as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>StoreFolderContents</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>208486399</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StoreFolderContents(folder as FolderItem, includeInvisibles as Boolean = true, useMacBinary as Integer = ZipArchive.MacBinaryNever, aliasHandling as ZipArchive.MacAliasHandling = ZipArchive.MacAliasHandling.StoreAll, mayCompress as Boolean = true) As Boolean</SourceLine>
   <SourceLine>// Stores (and compresses) the contents of the given folder in the archive,</SourceLine>
   <SourceLine>//   replacing any existing files or folders (including their entire contents).</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// All items are stored under their original name.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// To store or follow aliases, pass any of the ZipArchive.MacAliasHandling enum</SourceLine>
   <SourceLine>//   values. Note that you can not have Aliases to folders followed because this</SourceLine>
   <SourceLine>//   could lead to infinite loops (a safety check for this could be added but has</SourceLine>
   <SourceLine>//   not yet). Note that even if useMacBinary is false, it will be temporarily</SourceLine>
   <SourceLine>//   enabled for storing aliases.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If this function returns false, an error had occured and no items are added.</SourceLine>
   <SourceLine>//   (ZipArchive.ErrorMessage() will then provide a descriptive msg).</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine>// - All files' sizes must be below 2GB (2^31) - a ZIP limitation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as ZipArchive = me.zar</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if folder = nil then raise new NilObjectException</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Get all affected items</SourceLine>
   <SourceLine>dim files(), folders() as TTsFolderItem</SourceLine>
   <SourceLine>zar.z_getAffectedFolderContents (folder, aliasHandling, includeInvisibles, files, folders)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Remove all existing items of those we want to store</SourceLine>
   <SourceLine>if mChildrenArray.Ubound &gt;= 0 then</SourceLine>
   <SourceLine>if not super.prepareStore (files) or not super.prepareStore (folders) then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Add the items to the archive</SourceLine>
   <SourceLine>dim rawPath as String = Join(me.Path,"/")</SourceLine>
   <SourceLine>dim firstIdx as Integer = zar.EntryCount+1</SourceLine>
   <SourceLine>if zar.z_addFolderContents(folder, rawPath+"/", aliasHandling, useMacBinary, includeInvisibles, false, mayCompress, files, folders) &lt;&gt; 0 then</SourceLine>
   <SourceLine>mErrMsg = zar.ErrorMessage</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Update the list of children of this object</SourceLine>
   <SourceLine>dim lastIdx as Integer = zar.EntryCount</SourceLine>
   <SourceLine>dim root as ZipFolderItemBase = super.treeRoot()</SourceLine>
   <SourceLine>for idx as Integer = firstIdx to lastIdx</SourceLine>
   <SourceLine>dim e as ZipEntry = zar.Entry(idx)</SourceLine>
   <SourceLine>dim path() as String</SourceLine>
   <SourceLine>e.GetPath path</SourceLine>
   <SourceLine>dim item as ZipFolderItemBase = root.findItem (path, path.Ubound, true)</SourceLine>
   <SourceLine>item.setEntry e</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>folder as FolderItem, includeInvisibles as Boolean = true, useMacBinary as Integer = ZipArchive.MacBinaryNever, aliasHandling as ZipArchive.MacAliasHandling = ZipArchive.MacAliasHandling.StoreAll, mayCompress as Boolean = true</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>StoreFolderItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>326057983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StoreFolderItem(fileOrFolder as FolderItem, includeInvisibles as Boolean = true, useMacBinary as Integer = ZipArchive.MacBinaryNever, aliasHandling as ZipArchive.MacAliasHandling = ZipArchive.MacAliasHandling.StoreAll, mayCompress as Boolean = true) As ZipFolderItem</SourceLine>
   <SourceLine>// Stores (and compresses) a file or folder with all its contents in the archive,</SourceLine>
   <SourceLine>//   replacing any existing file or folder (including its entire contents).</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// All items are stored under their original name.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// To store or follow aliases, pass any of the ZipArchive.MacAliasHandling enum</SourceLine>
   <SourceLine>//   values. Note that you can not have Aliases to folders followed because this</SourceLine>
   <SourceLine>//   could lead to infinite loops (a safety check for this could be added but has</SourceLine>
   <SourceLine>//   not yet). Note that even if useMacBinary is false, it will be temporarily</SourceLine>
   <SourceLine>//   enabled for storing aliases.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If this function returns nil, an error had occured and no items are added.</SourceLine>
   <SourceLine>//   (ZipArchive.ErrorMessage() will then provide a descriptive msg).</SourceLine>
   <SourceLine>//   Otherwise, the just created folder item is returned.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine>// - All files' sizes must be below 2GB (2^31) - a ZIP limitation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fileOrFolder.Directory then</SourceLine>
   <SourceLine>dim folder as ZipFolderItem</SourceLine>
   <SourceLine>folder = me.CreateEmptyFolder (fileOrFolder.Name)</SourceLine>
   <SourceLine>if folder = nil then</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if fileOrFolder.Count &gt; 0 then</SourceLine>
   <SourceLine>if not folder.StoreFolderContents (fileOrFolder, includeInvisibles, useMacBinary, aliasHandling, mayCompress) then</SourceLine>
   <SourceLine>// Oops, contents were not completely added - let's remove the top folder again as well:</SourceLine>
   <SourceLine>dim tmpMsg as String = mErrMsg // preserve error msg so remove() below won't overwrite it</SourceLine>
   <SourceLine>call folder.remove()</SourceLine>
   <SourceLine>mErrMsg = tmpMsg</SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return folder</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return me.StoreFile (fileOrFolder, "", useMacBinary, mayCompress)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>fileOrFolder as FolderItem, includeInvisibles as Boolean = true, useMacBinary as Integer = ZipArchive.MacBinaryNever, aliasHandling as ZipArchive.MacAliasHandling = ZipArchive.MacAliasHandling.StoreAll, mayCompress as Boolean = true</ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>Path</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>37419007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Path() As String()</SourceLine>
   <SourceLine>dim p() as String</SourceLine>
   <SourceLine>if mEntry &lt;&gt; nil then</SourceLine>
   <SourceLine>mEntry.GetPath(p)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>dim item as ZipFolderItem = me</SourceLine>
   <SourceLine>while item.mParent &lt;&gt; nil</SourceLine>
   <SourceLine>p.Insert 0, item.mName</SourceLine>
   <SourceLine>item = item.Parent</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return p</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String()</ItemResult>
 </Method>
 <Method>
  <ItemName>RawPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>323125247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RawPath() As String</SourceLine>
   <SourceLine>return Join(path,"/")</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>ExtractInto</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2045728767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ExtractInto(destination as FolderItem) As Boolean</SourceLine>
   <SourceLine>// Extracts this ZipFolderItem, including all contents, to the given destination.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note that if there are already files and folders at the destination, then those</SourceLine>
   <SourceLine>// won't be deleted unless they get replaced by those from this archive.</SourceLine>
   <SourceLine>// This means that if you want to do a "clean" extraction, i.e. a full "replace",</SourceLine>
   <SourceLine>// where no old files are left at the destination, you have to delete the destination</SourceLine>
   <SourceLine>// first.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If this object is a folder or the root object (from ZipArchive.Tree), then all its</SourceLine>
   <SourceLine>// contents will be written to a folder identified by 'destination'. If 'destination'</SourceLine>
   <SourceLine>// does not exist yet, it will be created as a folder. If it exists already and is</SourceLine>
   <SourceLine>// a folder, the items will be extracted to that folder. If it exists and is NOT a</SourceLine>
   <SourceLine>// folder, this is an error and 'false' is returned from this function.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If this is not a folder but a file, then destination must either be a file</SourceLine>
   <SourceLine>// (then this file will be replaced with the extracted contents of this item)</SourceLine>
   <SourceLine>// or not exist. If the 'destination' exists as a folder, this is an error and</SourceLine>
   <SourceLine>// 'false' is returned from this function.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If extraction succeeded, true is returned.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// You may call the Total... functions to learn how many items and bytes</SourceLine>
   <SourceLine>// will be extracted.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not me.Directory then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Extract a single file</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not Entry.Extract (destination) then</SourceLine>
   <SourceLine>mErrMsg = Entry.ErrorMessage</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Extract folder contents</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if destination.Exists then</SourceLine>
   <SourceLine>if not destination.Directory then</SourceLine>
   <SourceLine>mErrMsg = "destination exists but is not a folder as required: "+TTsFolderItem.NativePath(destination)</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>destination.CreateAsFolder</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for each child as ZipFolderItem in me.Children</SourceLine>
   <SourceLine>if not child.ExtractInto (destination.Child(child.Name)) then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Finally, update all this folders' attributes (date, permissions etc.)</SourceLine>
   <SourceLine>dim e as ZipEntry = me.Entry</SourceLine>
   <SourceLine>if e &lt;&gt; nil then</SourceLine>
   <SourceLine>if not e.Extract(destination) then</SourceLine>
   <SourceLine>mErrMsg = Entry.ErrorMessage</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>destination as FolderItem</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>LastErrorMessage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>542085119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LastErrorMessage() As String</SourceLine>
   <SourceLine>// Returns a description about the latest error as an english phrase</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Function calls that could cause such an error:</SourceLine>
   <SourceLine>// - CreateEmptyFolder()</SourceLine>
   <SourceLine>// - Delete()</SourceLine>
   <SourceLine>// - DeleteChild()</SourceLine>
   <SourceLine>// - ExtractInto()</SourceLine>
   <SourceLine>// - StoreFile()</SourceLine>
   <SourceLine>// - StoreFolderContents()</SourceLine>
   <SourceLine>// - StoreFolderItem()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return mErrMsg</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Count</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1738399743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Count() As Integer</SourceLine>
   <SourceLine>return mChildrenArray.Ubound+1</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>TotalItemLength</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1641785343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TotalItemLength() As Int64</SourceLine>
   <SourceLine>// Returns the amount of bytes used by this item (and its folder contents,</SourceLine>
   <SourceLine>// if any) if it were extracted to disk.</SourceLine>
   <SourceLine>// So you could precalculate the amount needed on disk before extracting the</SourceLine>
   <SourceLine>// data, and also use it for a progress bar's total amount.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note, however, that this only calculates the sum of bytes off the file(s),</SourceLine>
   <SourceLine>// while other space needed on disk, e.g. to store the meta data of the files</SourceLine>
   <SourceLine>// i.e. create the directory entry on disk) will not be incorporated. Which means,</SourceLine>
   <SourceLine>// if the value returned here is _exactly_ what's reported to be free on a disk,</SourceLine>
   <SourceLine>// extraction will probably still fail. It's safer to assume that you'll need at least</SourceLine>
   <SourceLine>// 1-32KB extra space per file on disk, at least, depending on the type and size</SourceLine>
   <SourceLine>// of the disk format (if you want to learn more on this, just ask me).</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mIsFolder then</SourceLine>
   <SourceLine>dim total as Int64 = 0</SourceLine>
   <SourceLine>for each item as ZipFolderItem in mChildrenArray</SourceLine>
   <SourceLine>total = total + item.TotalItemLength // (leads to a recursion)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return total</SourceLine>
   <SourceLine>elseif mEntry &lt;&gt; nil then</SourceLine>
   <SourceLine>return mEntry.Size</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>super.checkRegistration</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>TotalCompressedBytes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1914552319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TotalCompressedBytes() As Int64</SourceLine>
   <SourceLine>// Returns the amount of bytes for this item (and its contents)</SourceLine>
   <SourceLine>// used in the archive (not exactly, it's just the sum of all items'</SourceLine>
   <SourceLine>// compressed sizes, without the housekeeping data for the zip</SourceLine>
   <SourceLine>// file).</SourceLine>
   <SourceLine>// Use can use this for a progress bar's total amount if you show</SourceLine>
   <SourceLine>// the current sum of extracted bytes in the progress bar.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mIsFolder then</SourceLine>
   <SourceLine>dim total as Int64 = 0</SourceLine>
   <SourceLine>for each item as ZipFolderItem in mChildrenArray</SourceLine>
   <SourceLine>total = total + item.TotalCompressedBytes // (leads to a recursion)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>return total</SourceLine>
   <SourceLine>elseif mEntry &lt;&gt; nil then</SourceLine>
   <SourceLine>return mEntry.CompressedSize</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>super.checkRegistration</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>TotalItemCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1630386175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TotalItemCount() As Integer</SourceLine>
   <SourceLine>// Returns the amount of files and folders contained in this item.</SourceLine>
   <SourceLine>// If this item is not a folder, it'll return 1. If it's a folder, it'll</SourceLine>
   <SourceLine>// count this folder along with all items inside it.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim total as Integer</SourceLine>
   <SourceLine>if mParent &lt;&gt; nil then</SourceLine>
   <SourceLine>total = 1</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if mIsFolder then</SourceLine>
   <SourceLine>for each item as ZipFolderItem in mChildrenArray</SourceLine>
   <SourceLine>total = total + item.TotalItemCount // (leads to a recursion)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>super.checkRegistration</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return total</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Length</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1155680255</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Length() As Int64</SourceLine>
   <SourceLine>// Returns the original (extracted) size of the item (does not include Mac Resource length)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mEntry &lt;&gt; nil and not mEntry.IsDirectory then</SourceLine>
   <SourceLine>return mEntry.Size</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>Delete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>102150143</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Delete() As Boolean</SourceLine>
   <SourceLine>// Delete this item and, if it's a folder, all its contents</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Note: To really erase the deleted items from the zip file, you need to call</SourceLine>
   <SourceLine>// ZipArchive.Compact once at the end after you've deleted all your items.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.remove()</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Item</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>218685439</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Item(index as Integer) As ZipFolderItem</SourceLine>
   <SourceLine>// index is zero-based</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if index &gt;= 0 and index &lt;= mChildrenArray.Ubound then</SourceLine>
   <SourceLine>return mChildrenArray(index)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index as Integer</ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>ModificationDate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1550211071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ModificationDate() As Date</SourceLine>
   <SourceLine>if mEntry &lt;&gt; nil then</SourceLine>
   <SourceLine>return mEntry.Time</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <Method>
  <ItemName>StoreFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1373575167</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StoreFile(inputFile as FolderItem, name as String = "", useMacBinary as Integer = ZipArchive.MacBinaryNever, mayCompress as Boolean = true) As ZipFolderItem</SourceLine>
   <SourceLine>// Adds a file to the archive, replacing any existing file of the same name.</SourceLine>
   <SourceLine>//   You can optionally provide a different name.</SourceLine>
   <SourceLine>//   If 'name' is empty or not specified, then the name of 'inputFile' is used.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If this function returns nil, an error had occured and the file is not added.</SourceLine>
   <SourceLine>//   (ZipArchive.ErrorMessage() will then provide a descriptive msg).</SourceLine>
   <SourceLine>//   Otherwise, the just created item is returned.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine>// - 'inputFile' is not a folder (inputFile.Directory must be 'false')</SourceLine>
   <SourceLine>// - The file's size must be below 2GB (2^31) - a ZIP limitation</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if inputFile.Directory then</SourceLine>
   <SourceLine>// You are not supposed to pass folders to this method</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if name = "" then</SourceLine>
   <SourceLine>name = inputFile.Name</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as ZipArchive = me.zar</SourceLine>
   <SourceLine>dim rawPath as String</SourceLine>
   <SourceLine>if super.prepareStore (name, rawPath) then</SourceLine>
   <SourceLine>dim e_idx as Integer</SourceLine>
   <SourceLine>e_idx = zar.z_addItem (new TTsFolderItem(inputFile), rawPath, useMacBinary, false, mayCompress)</SourceLine>
   <SourceLine>if e_idx &gt; 0 then</SourceLine>
   <SourceLine>dim item as ZipFolderItem = me.createChild (name)</SourceLine>
   <SourceLine>item.setEntry zar.Entry(e_idx)</SourceLine>
   <SourceLine>return item</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mErrMsg = zar.ErrorMessage</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFile as FolderItem, name as String = "", useMacBinary as Integer = ZipArchive.MacBinaryNever, mayCompress as Boolean = true</ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>StoreStringAsFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>349472767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function StoreStringAsFile(data as String, name as String, fileDate as Date = nil, mayCompress as Boolean = true) As ZipFolderItem</SourceLine>
   <SourceLine>// Adds a file to the archive, replacing any existing file of the given name.</SourceLine>
   <SourceLine>//   The file's content is provided as a String here, so you can add items</SourceLine>
   <SourceLine>//   to the Zip file that you've got in a variable instead of in a file on disk.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If this function returns nil, an error had occured and the file is not added.</SourceLine>
   <SourceLine>//   (ZipArchive.ErrorMessage() will then provide a descriptive msg).</SourceLine>
   <SourceLine>//   Otherwise, the just created item is returned.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>// - Archive is open (Open has been called, but not Close)</SourceLine>
   <SourceLine>// - Archive was opened for writing</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if name = "" then</SourceLine>
   <SourceLine>// name must not be empty</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// If no date is specified, take "now" as the file's timestamp</SourceLine>
   <SourceLine>if fileDate = nil then</SourceLine>
   <SourceLine>fileDate = new Date</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as ZipArchive = me.zar</SourceLine>
   <SourceLine>dim rawPath as String</SourceLine>
   <SourceLine>if super.prepareStore (name, rawPath) then</SourceLine>
   <SourceLine>dim e_idx as Integer</SourceLine>
   <SourceLine>e_idx = zar.AddItemByStreams (new StringReader (data), data.LenB, nil, 0, nil, rawPath, nil, fileDate, mayCompress)</SourceLine>
   <SourceLine>if e_idx &gt; 0 then</SourceLine>
   <SourceLine>dim item as ZipFolderItem = me.createChild (name)</SourceLine>
   <SourceLine>item.setEntry zar.Entry(e_idx)</SourceLine>
   <SourceLine>return item</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mErrMsg = zar.ErrorMessage</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data as String, name as String, fileDate as Date = nil, mayCompress as Boolean = true</ItemParams>
  <ItemResult>ZipFolderItem</ItemResult>
 </Method>
 <Method>
  <ItemName>ExtractToString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2023938047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ExtractToString(ByRef data as String) As Boolean</SourceLine>
   <SourceLine>// Extracts this ZipFolderItem, provided it's a file and not a directory, into a String</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// If extraction succeeded, true is returned.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.resetError</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.Directory then</SourceLine>
   <SourceLine>mErrMsg = "can only extract files into strings, not dirs: "+me.RawPath</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mb as MemoryBlock = Entry().Extract(true)</SourceLine>
   <SourceLine>if mb = nil then</SourceLine>
   <SourceLine>mErrMsg = Entry().ErrorMessage</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>data = mb</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef data as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>Looking for Rename &amp; Move?</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>730755071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Looking for Rename &amp; Move?</NoteLine>
   <NoteLine>Due to the fact that the archive is just a seqential collection of file data, with their</NoteLine>
   <NoteLine>names (and other directory data) in between, renaming (this includes move to a</NoteLine>
   <NoteLine>different folder, with is effectively nothing else than renaming the file, as it always</NoteLine>
   <NoteLine>includes its entire folder path in the name) is not an easy task: If the new name is</NoteLine>
   <NoteLine>longer than the older path, then there is usually no room to insert the additional</NoteLine>
   <NoteLine>characters into the file. Instead, the file data inside the archive would then need to be</NoteLine>
   <NoteLine>copied to a large enough unused area inside the archive, or be appended to its end,</NoteLine>
   <NoteLine>create a gap inside the archive (when can be removed by calling ZipArchive.Compact).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>For that reason, I rather not even offer rename and move functions because they</NoteLine>
   <NoteLine>could cause unexpected inefficiencies using the archive. Instead, you should plan to</NoteLine>
   <NoteLine>use a zip archive by figuring all names and folders before adding the files into the</NoteLine>
   <NoteLine>archive, in order to avoid renames thereafter.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="-1162409084">
 <ObjName>ZipSnapshots</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>AddSnapshot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1225033727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddSnapshot(snapshotName as String, dir as FolderItem, useMacBinary as Integer, followFileAliasesAndSymlinks as Boolean) As Boolean</SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine>dim n, startPos, endPos as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errmsg = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = Ubound(me.snapshotBegin)</SourceLine>
   <SourceLine>if n &gt;= 0 then</SourceLine>
   <SourceLine>me.lastSnapshotBegin = snapshotBegin(n)</SourceLine>
   <SourceLine>me.lastSnapshotEnd = snapshotEnd(n)</SourceLine>
   <SourceLine>me.lastSnapshotName = snapshotName_(n)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>zar.Mark // mark the original archive state so that we can roll back in case the adding fails</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// add the snapshot prefix identifier</SourceLine>
   <SourceLine>startPos = zar.AddItemByStreams(nil, 0, nil, 0, nil, me.markStart+zar.CleanName(snapshotName), nil, new Date)</SourceLine>
   <SourceLine>if startPos &gt;= 1 then</SourceLine>
   <SourceLine>// add the folder items to the archive</SourceLine>
   <SourceLine>ok = me.z_addFolder(zar.CleanName(snapshotName)+"/", "", dir, useMacBinary, followFileAliasesAndSymlinks)</SourceLine>
   <SourceLine>if ok then</SourceLine>
   <SourceLine>// add the snapshot suffix identifier</SourceLine>
   <SourceLine>endPos = zar.AddItemByStreams(nil, 0, nil, 0, nil, me.markEnd+zar.CleanName(snapshotName), nil, new Date)</SourceLine>
   <SourceLine>if endPos &gt;= 1 then</SourceLine>
   <SourceLine>// write the archive completely to disk</SourceLine>
   <SourceLine>ok= zar.Flush</SourceLine>
   <SourceLine>if ok then</SourceLine>
   <SourceLine>me.snapshotBegin.Append startPos</SourceLine>
   <SourceLine>me.snapshotEnd.Append endPos</SourceLine>
   <SourceLine>me.snapshotName_.Append snapshotName</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.errmsg = "" then</SourceLine>
   <SourceLine>me.errmsg = zar.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ok = zar.Rollback</SourceLine>
   <SourceLine>ok = zar.Flush</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Exception in AddSnapshot()"</SourceLine>
   <SourceLine>ok = zar.Rollback</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>snapshotName as String, dir as FolderItem, useMacBinary as Integer, followFileAliasesAndSymlinks as Boolean</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ErrorMessage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1637238783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ErrorMessage() As String</SourceLine>
   <SourceLine>return me.errmsg</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>ExtractFromSnapshot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>69042175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ExtractFromSnapshot(snapshotIndex_1 as Integer, destDir as FolderItem, aliasHandling as Integer, Byref hadOverflow as Boolean) As Boolean</SourceLine>
   <SourceLine>// 'aliasHandling': Pass one of the following functions: OverwriteAliases, SkipAliases, FollowAliases</SourceLine>
   <SourceLine>dim nameOverflow as Boolean</SourceLine>
   <SourceLine>dim i, thisSnapshotBegin, thisSnapshotEnd , n as Integer</SourceLine>
   <SourceLine>dim thisSnapshotName as String</SourceLine>
   <SourceLine>dim e as ZipEntry</SourceLine>
   <SourceLine>dim f as FolderItem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>hadOverflow = false</SourceLine>
   <SourceLine>me.errmsg = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if aliasHandling &lt; 1 or aliasHandling &gt; 3 then</SourceLine>
   <SourceLine>me.errmsg = "Illegal value passed to 'aliasHandling'"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if snapshotIndex_1 &lt; 1 then</SourceLine>
   <SourceLine>raise new OutOfBoundsException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>n = snapshotIndex_1 - 1</SourceLine>
   <SourceLine>thisSnapshotBegin = snapshotBegin(n)+1</SourceLine>
   <SourceLine>thisSnapshotEnd = snapshotEnd(n)-1</SourceLine>
   <SourceLine>thisSnapshotName = snapshotName_(n)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = thisSnapshotBegin to thisSnapshotEnd</SourceLine>
   <SourceLine>e = zar.Entry(i)</SourceLine>
   <SourceLine>e.EnableFileLocking true</SourceLine>
   <SourceLine>f = z_makeDestination(e, destDir, aliasHandling = 1)</SourceLine>
   <SourceLine>if aliasHandling = 2 and f.Alias then</SourceLine>
   <SourceLine>// skip this item</SourceLine>
   <SourceLine>elseif not e.Extract(f) then</SourceLine>
   <SourceLine>me.errmsg = zar.ErrorMessage+" ("+e.RawPath+")"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// extraction succeeded</SourceLine>
   <SourceLine>if TargetMacOS and Len(f.Name) &lt;&gt; Len(f.DisplayName) then</SourceLine>
   <SourceLine>// Note: I (TT) am not 100% sure that the above test is always detecting</SourceLine>
   <SourceLine>// an overflow when having non-ASCII chars in file names.</SourceLine>
   <SourceLine>nameOverflow = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>hadOverflow = nameOverflow</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Exception in ExtractFromSnapshot()"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>snapshotIndex_1 as Integer, destDir as FolderItem, aliasHandling as Integer, Byref hadOverflow as Boolean</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>FollowAliases</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1231202303</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FollowAliases() As Integer</SourceLine>
   <SourceLine>// Pass this function result to the 'aliasHandling' parameter of ExtractFromSnapshot() if</SourceLine>
   <SourceLine>// Alias files that exist at the destination shall be followed so that the file they point to will</SourceLine>
   <SourceLine>// be replaced with the item from the archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return 1</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>IsSnapshotEmpty</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>499232767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsSnapshotEmpty(index_1 as Integer) As Boolean</SourceLine>
   <SourceLine>return me.snapshotBegin(index_1-1)+1 = me.snapshotEnd(index_1-1)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index_1 as Integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>OverwriteAliases</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>35883007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function OverwriteAliases() As Integer</SourceLine>
   <SourceLine>// Pass this function result to the 'aliasHandling' parameter of ExtractFromSnapshot() if</SourceLine>
   <SourceLine>// Alias files that exist at the destination shall be replaced with the item from the archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return 3</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>RemoveSnapshot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1457731583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RemoveSnapshot(index_1 as Integer) As Boolean</SourceLine>
   <SourceLine>dim ok as Boolean</SourceLine>
   <SourceLine>dim i, thisSnapshotBegin, thisSnapshotEnd , n as Integer</SourceLine>
   <SourceLine>dim thisSnapshotName as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.errmsg = ""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>n = index_1 - 1</SourceLine>
   <SourceLine>thisSnapshotBegin = me.snapshotBegin(n)</SourceLine>
   <SourceLine>thisSnapshotEnd = me.snapshotEnd(n)</SourceLine>
   <SourceLine>thisSnapshotName = me.snapshotName_(n)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = thisSnapshotEnd downto thisSnapshotBegin</SourceLine>
   <SourceLine>if not zar.RemoveEntry(i) then</SourceLine>
   <SourceLine>me.errmsg = "Removing a snapshot failed (1): "+zar.ErrorMessage</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Compact() then</SourceLine>
   <SourceLine>me.errmsg = "Removing a snapshot failed (2): "+zar.ErrorMessage</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>ok = zar.Flush</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.snapshotBegin.Remove n</SourceLine>
   <SourceLine>me.snapshotEnd.Remove n</SourceLine>
   <SourceLine>me.snapshotName_.Remove n</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errmsg = "Exception in RemoveSnapshot()"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index_1 as Integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SkipAliases</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>277293055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SkipAliases() As Integer</SourceLine>
   <SourceLine>// Pass this function result to the 'aliasHandling' parameter of ExtractFromSnapshot() if</SourceLine>
   <SourceLine>// items shall not be extracted if an Alias file exists at their destination.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return 2</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>SnapshotCount</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1999296511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SnapshotCount() As Integer</SourceLine>
   <SourceLine>return Ubound(me.snapshotBegin)+1</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>SnapshotName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1052139519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SnapshotName(index_1 as Integer) As String</SourceLine>
   <SourceLine>if index_1 &lt; 1 then</SourceLine>
   <SourceLine>raise new OutOfBoundsException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return me.snapshotName_(index_1-1)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>index_1 as Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1821089791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(archive as ZipArchive)</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// Preconditions:</SourceLine>
   <SourceLine>//   - archive must be open.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not archive.IsOpen then</SourceLine>
   <SourceLine>raise new RuntimeException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.zar = archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.markStart = "snapshot-begin-"</SourceLine>
   <SourceLine>me.markEnd = "snapshot-end-"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>z_getSnapshots</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>archive as ZipArchive</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>z_abort</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>544233471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function z_abort(f as FolderItem, code as Integer, msg as String, canCont as Boolean) As Boolean</SourceLine>
   <SourceLine>dim abort as Boolean</SourceLine>
   <SourceLine>me.errmsg = msg</SourceLine>
   <SourceLine>if me.monitor &lt;&gt; nil then</SourceLine>
   <SourceLine>if not canCont then abort = true</SourceLine>
   <SourceLine>me.monitor.ZipFileError(f, code,msg, abort)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>abort = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return not canCont or abort</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, code as Integer, msg as String, canCont as Boolean</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>z_addFolder</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>819656703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function z_addFolder(snapshot as String, prefixDOSPath as String, folder as FolderItem, useMacBinary as Integer, followFileAliasesAndSymlinks as Boolean) As Boolean</SourceLine>
   <SourceLine>dim entry as ZipEntry</SourceLine>
   <SourceLine>dim result, idx as Integer</SourceLine>
   <SourceLine>dim name as String</SourceLine>
   <SourceLine>dim f, files(-1), folders(-1) as TTsFolderItem</SourceLine>
   <SourceLine>dim abort as Boolean</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if folder = nil then</SourceLine>
   <SourceLine>me.errmsg = "no folder reference given"</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.monitor = zar.ProgressMonitor()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// first, we collect all file and folder items into an array</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>idx = 1</SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>dim f0 as FolderItem</SourceLine>
   <SourceLine>f0 = folder.TrueItem(idx)</SourceLine>
   <SourceLine>if f0 = nil then</SourceLine>
   <SourceLine>exit // end of files in this folder</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>f = new TTsFolderItem(f0)</SourceLine>
   <SourceLine>if f.Visible or me.IncludeHiddenItems then // !TT 23Apr03: hidden items won't be added to the snapshot any more by default</SourceLine>
   <SourceLine>if f.IsMacAlias or f.IsSymlink then</SourceLine>
   <SourceLine>if followFileAliasesAndSymlinks then</SourceLine>
   <SourceLine>f0 = folder.Child(f0.Name) // resolve alias</SourceLine>
   <SourceLine>if f0.Directory then</SourceLine>
   <SourceLine>f = nil // ignore aliases pointing to dirs to avoid endless recursion problems</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>f = new TTsFolderItem(f0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>f = nil // ignore all aliases</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if f &lt;&gt; nil then</SourceLine>
   <SourceLine>if f.Directory then</SourceLine>
   <SourceLine>folders.append f</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>files.append f</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>idx = idx + 1</SourceLine>
   <SourceLine>loop</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// now we add all the files from this folder to the archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to Ubound(files)</SourceLine>
   <SourceLine>f = files(idx)</SourceLine>
   <SourceLine>abort = false</SourceLine>
   <SourceLine>if me.monitor &lt;&gt; nil then</SourceLine>
   <SourceLine>me.monitor.ZipFileStarting f, abort</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if abort then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>name = prefixDOSPath+zar.CleanName(f.Name)</SourceLine>
   <SourceLine>entry = z_findInLastSnapshot(name)</SourceLine>
   <SourceLine>dim l1, l2 as Int64</SourceLine>
   <SourceLine>l1 = f.modificationDate.TotalSeconds</SourceLine>
   <SourceLine>l2 = entry.Time.TotalSeconds</SourceLine>
   <SourceLine>if entry = nil or l1 &lt;&gt; l2 then</SourceLine>
   <SourceLine>// add new item</SourceLine>
   <SourceLine>result = zar.AddItemWithRawPath(f, snapshot+name, useMacBinary)</SourceLine>
   <SourceLine>if result &gt; 0 then</SourceLine>
   <SourceLine>me.AddedNewItem = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// just add new ref to existing item in archive</SourceLine>
   <SourceLine>result = zar.AddFakeDuplicate(entry, snapshot+name, f.modificationDate, nil)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if result &lt;= 0 then</SourceLine>
   <SourceLine>if z_abort(f, result, me.errmsg, not abort) then</SourceLine>
   <SourceLine>abort = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if abort then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>redim files(-1) // free the used space before the recursion happens to save some memory</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// finally we add all the folders inside this folder to the archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while Ubound(folders) &gt;= 0</SourceLine>
   <SourceLine>f = folders(0)</SourceLine>
   <SourceLine>folders.Remove 0</SourceLine>
   <SourceLine>if not me.z_addFolder(snapshot, prefixDOSPath+zar.CleanName(f.Name)+"/", f, useMacBinary, followFileAliasesAndSymlinks) then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true // success</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>snapshot as String, prefixDOSPath as String, folder as FolderItem, useMacBinary as Integer, followFileAliasesAndSymlinks as Boolean</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>z_findInLastSnapshot</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1806295039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function z_findInLastSnapshot(path as String) As ZipEntry</SourceLine>
   <SourceLine>dim pos, i as Integer</SourceLine>
   <SourceLine>dim e as ZipEntry</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>pos = Len(me.lastSnapshotName)+2</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = me.lastSnapshotBegin+1 to me.lastSnapshotEnd-1</SourceLine>
   <SourceLine>e = zar.Entry(i)</SourceLine>
   <SourceLine>if e.SameRawPath(me.lastSnapshotName+"/"+path) then</SourceLine>
   <SourceLine>return e</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return nil</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>path as String</ItemParams>
  <ItemResult>ZipEntry</ItemResult>
 </Method>
 <Method>
  <ItemName>z_getSnapshots</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>824307711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub z_getSnapshots()</SourceLine>
   <SourceLine>dim i, pos as Integer, s, found as String, e as ZipEntry</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>redim me.snapshotBegin(-1)</SourceLine>
   <SourceLine>redim me.snapshotEnd(-1)</SourceLine>
   <SourceLine>redim me.snapshotName_(-1)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 1 to me.zar.EntryCount</SourceLine>
   <SourceLine>e = zar.Entry(i)</SourceLine>
   <SourceLine>s = e.RawPath</SourceLine>
   <SourceLine>if Left(s, Len(me.markStart)) = me.markStart then</SourceLine>
   <SourceLine>found = Mid(s, Len(me.markStart)+1)</SourceLine>
   <SourceLine>pos = i</SourceLine>
   <SourceLine>elseif Left(s, Len(me.markEnd)) = me.markEnd then</SourceLine>
   <SourceLine>if found = Mid(s, Len(me.markEnd)+1) then</SourceLine>
   <SourceLine>me.snapshotBegin.Append pos</SourceLine>
   <SourceLine>me.snapshotEnd.Append i</SourceLine>
   <SourceLine>me.snapshotName_.Append found</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>found = ""</SourceLine>
   <SourceLine>elseif Left(s, Len(found)+1) &lt;&gt; found+"/" then</SourceLine>
   <SourceLine>// all entries in the snapshot-range must be subdirs of that snapshot name</SourceLine>
   <SourceLine>found = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>z_makeDestination</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>796960767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function z_makeDestination(e as ZipEntry, dir as FolderItem, followAliases as Boolean) As FolderItem</SourceLine>
   <SourceLine>dim names(-1) as String, i as Integer</SourceLine>
   <SourceLine>dim f as FolderItem</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>e.GetPath(names)</SourceLine>
   <SourceLine>f = dir</SourceLine>
   <SourceLine>for i = 1 to Ubound(names)</SourceLine>
   <SourceLine>f = e.MakeDestinationChild(f, names(i), followAliases)</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return f</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>e as ZipEntry, dir as FolderItem, followAliases as Boolean</ItemParams>
  <ItemResult>FolderItem</ItemResult>
 </Method>
 <Note>
  <ItemName>Snapshots format</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>301461503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Snapshots format</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>A snapshot is made of the entire contents of a single folder.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>One can add several snapshots of the same folder to the archive.</NoteLine>
   <NoteLine>Each snapshot will add the entire folder's tree as a new subfolder</NoteLine>
   <NoteLine>to the archive. Each snapshot has a name, which is the folder name.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>The items of the tree will either be fake duplicates in case</NoteLine>
   <NoteLine>they're the same as the ones in the previous snapshot,</NoteLine>
   <NoteLine>or will be added items in case the were added to the tree or their</NoteLine>
   <NoteLine>data (modification date) different from the last snapshot. Files</NoteLine>
   <NoteLine>not present in the tree will also be missing from the new</NoteLine>
   <NoteLine>snapshot.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Each snapshot starts with a 0-length file entry with a name</NoteLine>
   <NoteLine>that has the text "snapshot-begin-" plus the name of the subfolder</NoteLine>
   <NoteLine>of the snapshot, and ends with one where "begin" is replaced by</NoteLine>
   <NoteLine>"end".</NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Property>
  <ItemName>AddedNewItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>610975743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AddedNewItem As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AddedNewItem As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>errmsg</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>387663871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>errmsg As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>errmsg As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IncludeHiddenItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>862121983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IncludeHiddenItems As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IncludeHiddenItems As Boolean</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>lastSnapshotBegin</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>970698751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>lastSnapshotBegin As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>lastSnapshotBegin As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>lastSnapshotEnd</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>269400063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>lastSnapshotEnd As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>lastSnapshotEnd As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>lastSnapshotName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>621242367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>lastSnapshotName As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>lastSnapshotName As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>markEnd</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>857161727</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>markEnd As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>markEnd As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>markStart</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>407089151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>markStart As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>markStart As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>monitor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1359755263</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>monitor As ZipProgressNotifier</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>monitor As ZipProgressNotifier</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>snapshotBegin(-1)</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>700530687</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>snapshotBegin(-1) As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>snapshotBegin(-1) As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>snapshotEnd(-1)</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1767860223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>snapshotEnd(-1) As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>snapshotEnd(-1) As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>snapshotName_(-1)</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1147371519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>snapshotName_(-1) As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>snapshotName_(-1) As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>zar</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>920025087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>zar As ZipArchive</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>zar As ZipArchive</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AddedNewItem</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IncludeHiddenItems</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Folder" ID="804857855">
 <ObjName>ZipSupport</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
</block>
<block type="Folder" ID="521838591">
 <ObjName>Private</ObjName>
 <ObjContainerID>804857855</ObjContainerID>
</block>
<block type="Module" ID="1627380334">
 <Hex bytesex>
</block>
<block type="Module" ID="-1164526396">
 <Hex bytesex>
</block>
<block type="Module" ID="1575361591">
 <Hex bytes="40960"></Hex>
</block>
<block type="Module" ID="2083759375">
 <Hex bytesex>
</block>
<block type="Module" ID="599688252">
 <ObjName>TTsFolderItem</ObjName>
 <ObjContainerID>804857855</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>FolderItem</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>IsMacAlias</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>873113599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsMacAlias() As Boolean</SourceLine>
   <SourceLine>if mNeedsUpdate then me.update</SourceLine>
   <SourceLine>return mIsAlias</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsSymlink</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>16355327</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsSymlink() As Boolean</SourceLine>
   <SourceLine>if mNeedsUpdate then me.update</SourceLine>
   <SourceLine>return mIsSymlink</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1164421119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>super.Constructor</SourceLine>
   <SourceLine>mNeedsUpdate = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4129</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1934303231</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(source As FolderItem)</SourceLine>
   <SourceLine>super.Constructor (source)</SourceLine>
   <SourceLine>mNeedsUpdate = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4096</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>source As FolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1076598783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(Path As String, pathMode As Integer=0)</SourceLine>
   <SourceLine>super.Constructor (Path, pathMode)</SourceLine>
   <SourceLine>mNeedsUpdate = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4129</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Path As String, pathMode As Integer=0</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>update</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1394380799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub update()</SourceLine>
   <SourceLine>LastErrorCode = 0</SourceLine>
   <SourceLine>mPath = NativePath(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// detect symlinks (Linux, OSX only)</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if false</SourceLine>
   <SourceLine>// Oddly, 64 builds do not use the 64 bit struct's order but the the old order, so this doesn't work in 64 bit builds:</SourceLine>
   <SourceLine>'declare function lstat lib SystemLib (path as CString, ByRef dataOut as unix_stat_struct_osx) as Integer</SourceLine>
   <SourceLine>'dim stat as unix_stat_struct_osx</SourceLine>
   <SourceLine>'#if Target64Bit</SourceLine>
   <SourceLine>'if stat.Size &lt;&gt; 144 then raise new RuntimeException</SourceLine>
   <SourceLine>'#endif</SourceLine>
   <SourceLine>'if lstat (mPath, stat) &lt;&gt; 0 then</SourceLine>
   <SourceLine>'// file does not exist</SourceLine>
   <SourceLine>'LastErrorCode = errno()</SourceLine>
   <SourceLine>'// leave mNeedsUpdate=true so we get the other info once the file got created</SourceLine>
   <SourceLine>'return</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine>'mMode = stat.Mode</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// Instead, we use a simpler method:</SourceLine>
   <SourceLine>dim stat as new MemoryBlock(144)</SourceLine>
   <SourceLine>declare function lstat lib SystemLib (path as CString, dataOut as Ptr) as Integer</SourceLine>
   <SourceLine>if lstat (mPath, stat) &lt;&gt; 0 then</SourceLine>
   <SourceLine>// file does not exist</SourceLine>
   <SourceLine>LastErrorCode = errno()</SourceLine>
   <SourceLine>// leave mNeedsUpdate=true so we get the other info once the file got created</SourceLine>
   <SourceLine>return</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mMode = stat.UInt16Value(8)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mIsSymlink = (mMode and &amp;o0170000) = &amp;o0120000</SourceLine>
   <SourceLine>#elseif TargetLinux</SourceLine>
   <SourceLine>declare function __lxstat lib SystemLib (stat_ver as Integer, path as CString, ByRef dataOut as unix_stat_struct_linux) as Integer</SourceLine>
   <SourceLine>dim stat as unix_stat_struct_linux</SourceLine>
   <SourceLine>if __lxstat (3, mPath, stat) &lt;&gt; 0 then</SourceLine>
   <SourceLine>// file does not exist</SourceLine>
   <SourceLine>LastErrorCode = errno()</SourceLine>
   <SourceLine>// leave mNeedsUpdate=true so we get the other info once the file got created</SourceLine>
   <SourceLine>return</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mMode = stat.Mode</SourceLine>
   <SourceLine>mLength = stat.fsize // needed to work around a bug in RB (2010r1) that gives wrong Length for symlinks</SourceLine>
   <SourceLine>mIsSymlink = (mMode and &amp;o0170000) = &amp;o0120000</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>if not FolderItem(self).Exists then</SourceLine>
   <SourceLine>// leave mNeedsUpdate=true so we get the other info once the file got created</SourceLine>
   <SourceLine>return</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not mIsSymlink then</SourceLine>
   <SourceLine>mIsAlias = me.Alias</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mNeedsUpdate = false</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1515513855</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(original As TTsFolderItem)</SourceLine>
   <SourceLine>super.Constructor (original)</SourceLine>
   <SourceLine>me.updateFrom original</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4129</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>original As TTsFolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>updateFrom</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>115894271</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub updateFrom(f as TTsFolderItem)</SourceLine>
   <SourceLine>break // Hey you - double check that this code copies every propery! Then you may remove the break here</SourceLine>
   <SourceLine>mIsAlias = f.mIsAlias</SourceLine>
   <SourceLine>mIsSymlink = f.mIsSymlink</SourceLine>
   <SourceLine>mLength = f.mLength</SourceLine>
   <SourceLine>mNeedsUpdate = f.mNeedsUpdate</SourceLine>
   <SourceLine>mMode = f.mMode</SourceLine>
   <SourceLine>mPath = f.mPath</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as TTsFolderItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Delete</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>953886719</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Delete()</SourceLine>
   <SourceLine>// TTsFolderItem.Delete deletes symlinks, not their targets</SourceLine>
   <SourceLine>if IsSymlink then // invokes me.update() if necessary</SourceLine>
   <SourceLine>soft declare function unlink lib SystemLib (path as CString) as Integer</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>call unlink (mPath)</SourceLine>
   <SourceLine>catch</SourceLine>
   <SourceLine>break // oops!</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>super.Delete</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mNeedsUpdate = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>NativePath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1757128703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function NativePath(f as FolderItem) As String</SourceLine>
   <SourceLine>// Returns a POSIX path (such as "/usr/bin/ls") on OS X and Linux.</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2013</SourceLine>
   <SourceLine>return f.NativePath</SourceLine>
   <SourceLine>#elseif TargetMacOS</SourceLine>
   <SourceLine>dim ref as MemoryBlock = FSRefOfFolderItem(f)</SourceLine>
   <SourceLine>dim path as String</SourceLine>
   <SourceLine>if ref &lt;&gt; nil then</SourceLine>
   <SourceLine>path = FSRefMakePath (ref)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if path = "" then</SourceLine>
   <SourceLine>// file does not exist - create the path from the parent and the name</SourceLine>
   <SourceLine>path = NativePath (f.Parent)</SourceLine>
   <SourceLine>if path &lt;&gt; "" then</SourceLine>
   <SourceLine>path = path + "/" + f.Name</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return path</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>return f.AbsolutePath.ConvertEncoding(Encodings.UTF8)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>UnixPermissions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1171341311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function UnixPermissions(f as FolderItem, ByRef perm as Integer) As Integer</SourceLine>
   <SourceLine>#pragma unused f</SourceLine>
   <SourceLine>#pragma unused perm</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// obsolete - use UnixStatMode instead</SourceLine>
   <SourceLine>'#if TargetMacOS</SourceLine>
   <SourceLine>'dim ref as MemoryBlock = FSRefOfFolderItem(f) // need to keep the ref until we've made the calls!</SourceLine>
   <SourceLine>'dim pb, info as MemoryBlock, err as Integer</SourceLine>
   <SourceLine>'declare function PBGetCatalogInfoSync lib CarbonLibName (paramBlock as Ptr) as short</SourceLine>
   <SourceLine>'info = new MemoryBlock(144) // FSCatalogInfo</SourceLine>
   <SourceLine>'pb = new MemoryBlock(72) // FSRefParam</SourceLine>
   <SourceLine>'pb.Ptr(28) = ref</SourceLine>
   <SourceLine>'pb.UInt32Value(32) = &amp;H0400 // FSCatalogInfoBitmap: permissions</SourceLine>
   <SourceLine>'pb.Ptr(36) = info</SourceLine>
   <SourceLine>'err = PBGetCatalogInfoSync(pb)</SourceLine>
   <SourceLine>'if err = 0 then</SourceLine>
   <SourceLine>'perm = info.UInt16Value(56+8+2)</SourceLine>
   <SourceLine>'else</SourceLine>
   <SourceLine>'break</SourceLine>
   <SourceLine>'perm = 0</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine>'return err</SourceLine>
   <SourceLine>'#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>f as FolderItem, ByRef perm as Integer</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>FSRefMakePath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1266122751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function FSRefMakePath(ref as MemoryBlock) As String</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>declare function FSRefMakePath lib CarbonLibName (ref as Ptr, path as Ptr, maxSize as Integer) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ref = nil then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mb as new MemoryBlock(PATH_MAX)</SourceLine>
   <SourceLine>dim err as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>err = FSRefMakePath (ref, mb, mb.Size)</SourceLine>
   <SourceLine>if err = 0 then</SourceLine>
   <SourceLine>return mb.CString(0).DefineEncoding(Encodings.UTF8)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// Must not call from Windows or Linux!</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>ref as MemoryBlock</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>FSRefOfFolderItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1898858495</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function FSRefOfFolderItem(f as FolderItem) As MemoryBlock</SourceLine>
   <SourceLine>// returns NIL if the FolderItem does not exist</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>#if RBVersion &gt;= 2010.05</SourceLine>
   <SourceLine>return f.MacFSRef</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>dim ref as new MemoryBlock(80)</SourceLine>
   <SourceLine>if ref = nil then</SourceLine>
   <SourceLine>raise new OutOfMemoryException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Declare function REALFSRefFromFolderItem Lib "" (f as FolderItem, FSRef as Ptr, HFSUniStr255 as Ptr) as Boolean</SourceLine>
   <SourceLine>if REALFSRefFromFolderItem (f, ref, nil) then</SourceLine>
   <SourceLine>return ref</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// Must not call from Windows or Linux!</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Method>
  <ItemName>UnixPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>231016447</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UnixPath() As String</SourceLine>
   <SourceLine>if mNeedsUpdate then me.update</SourceLine>
   <SourceLine>return mPath</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>UnixStatMode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>155088895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UnixStatMode() As UInt16</SourceLine>
   <SourceLine>// contains permissions, amoung other infos</SourceLine>
   <SourceLine>if mNeedsUpdate then me.update</SourceLine>
   <SourceLine>return mMode</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInt16</ItemResult>
 </Method>
 <Method>
  <ItemName>SetUnixPermissions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1726392319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub SetUnixPermissions(perm as UInt16)</SourceLine>
   <SourceLine>perm = Bitwise.BitAnd (perm, &amp;o7777) // mask out the upper 4 bits of the "st_mode" (UnixStatMode)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>soft declare function lchmod lib SystemLib (path as CString, flags as Integer) as Integer</SourceLine>
   <SourceLine>declare function chmod lib SystemLib (path as CString, flags as Integer) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>static has_lchmod as Boolean = true // initially, we assume that it exists (which it doesn't on OSX 10.4)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if has_lchmod then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>res = lchmod (mPath, perm)</SourceLine>
   <SourceLine>catch</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>has_lchmod = false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not has_lchmod then</SourceLine>
   <SourceLine>// fall back to "chmod", which is the same as lchmod as long as it's not a symlink it operates on</SourceLine>
   <SourceLine>if IsSymlink then</SourceLine>
   <SourceLine>// ignore this case, meaning we won't change the permissions on a symlink on OSX 10.4.x</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>res = chmod (mPath, perm)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if res &lt;&gt; 0 then</SourceLine>
   <SourceLine>LastErrorCode = errno()</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>LastErrorCode = 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mNeedsUpdate = true</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>LastErrorCode = 12367 // this is just a randomly chosen error code</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>perm as UInt16</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UnixPermissions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1974542335</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UnixPermissions() As UInt16</SourceLine>
   <SourceLine>return Bitwise.BitAnd (me.UnixStatMode, &amp;o7777) // blank out the upper 4 bits of the st_mode</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInt16</ItemResult>
 </Method>
 <Method>
  <ItemName>errno</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>274880511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function errno() As Integer</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>declare function __error lib SystemLib () as Ptr</SourceLine>
   <SourceLine>dim mb as MemoryBlock = __error()</SourceLine>
   <SourceLine>return mb.Int32Value(0)</SourceLine>
   <SourceLine>#elseif TargetLinux</SourceLine>
   <SourceLine>declare function __errno_location lib SystemLib () as Ptr</SourceLine>
   <SourceLine>dim mb as MemoryBlock = __errno_location()</SourceLine>
   <SourceLine>return mb.Int32Value(0)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>CreateSymlink</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>982738943</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CreateSymlink(to_path as String)</SourceLine>
   <SourceLine>#if TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>if mNeedsUpdate then me.update</SourceLine>
   <SourceLine>declare function symlink lib SystemLib (link as CString, path as CString) as Integer</SourceLine>
   <SourceLine>dim res as Integer</SourceLine>
   <SourceLine>res = symlink (to_path, mPath)</SourceLine>
   <SourceLine>if res &lt;&gt; 0 then</SourceLine>
   <SourceLine>dim n as Integer = errno()</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>LastErrorCode = n // Boo! This doesn't even work. So we have no way to set the LastErrorCode, unfortunately, until RS fixes this (feedback ID #11511)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>LastErrorCode = 0</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mNeedsUpdate = true</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>LastErrorCode = 12368 // this is just a randomly chosen error code</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>to_path as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Length</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>85282815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Length() As UInt64</SourceLine>
   <SourceLine>#if TargetLinux</SourceLine>
   <SourceLine>if mNeedsUpdate then me.update</SourceLine>
   <SourceLine>return mLength</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>return FolderItem(me).Length</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInt64</ItemResult>
 </Method>
 <Method>
  <ItemName>SameFolderItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>652937215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function SameFolderItem(f1 as FolderItem, f2 as FolderItem) As Boolean</SourceLine>
   <SourceLine>if f1 = f2 then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>elseif (f1 = nil) or (f2 = nil) then</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if RBVersion &gt;= 2013</SourceLine>
   <SourceLine>return StrComp (f1.NativePath, f2.NativePath, 0) = 0</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>return StrComp (f1.AbsolutePath, f2.AbsolutePath, 0) = 0</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>f1 as FolderItem, f2 as FolderItem</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Exists</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1808195583</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Exists() As Boolean</SourceLine>
   <SourceLine>#if not (TargetLinux or TargetMacOS)</SourceLine>
   <SourceLine>return FolderItem(self).Exists</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// Due to a bug in RB/Xojo we cannot rely on FolderItem.Exists to work with Symlinks, so we'll do our own test</SourceLine>
   <SourceLine>// See &lt;feedback://showreport?report_id=27683&gt;</SourceLine>
   <SourceLine>if mNeedsUpdate then</SourceLine>
   <SourceLine>self.update ' checks for existence and sets mNeedsUpdate to false when it exists</SourceLine>
   <SourceLine>return not mNeedsUpdate </SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>// now mPath contains the POSIX path to the file</SourceLine>
   <SourceLine>#if TargetMacOS</SourceLine>
   <SourceLine>// check for existence of the file using the stat function</SourceLine>
   <SourceLine>declare function stat lib SystemLib (path as CString, dataOut as Ptr) as Integer</SourceLine>
   <SourceLine>static stat as new MemoryBlock(512)</SourceLine>
   <SourceLine>dim good as Boolean = stat (mPath, stat) = 0</SourceLine>
   <SourceLine>return good</SourceLine>
   <SourceLine>#else // Linux</SourceLine>
   <SourceLine>// check for existence of the file using the lxstat function</SourceLine>
   <SourceLine>declare function __lxstat lib SystemLib (stat_ver as Integer, path as CString, ByRef dataOut as unix_stat_struct_linux) as Integer</SourceLine>
   <SourceLine>dim stat as unix_stat_struct_linux</SourceLine>
   <SourceLine>dim good as Boolean = __lxstat (3, mPath, stat) = 0</SourceLine>
   <SourceLine>return good</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetMacType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>872275967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function GetMacType(f as FolderItem) As String</SourceLine>
   <SourceLine>// Note: If you do not need support for the old 4-letter MacType codes, and if you do not like</SourceLine>
   <SourceLine>// getting the deprecation warning here, simply replace this code with: return ChrB(0)+ChrB(0)+ChrB(0)+ChrB(0)</SourceLine>
   <SourceLine>return f.MacType</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>f as FolderItem</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>SetMacType</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1961265151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Sub SetMacType(f as FolderItem, t as String)</SourceLine>
   <SourceLine>// Note: If you do not need support for the old 4-letter MacType codes, and if you do not like</SourceLine>
   <SourceLine>// getting the deprecation warning here, simply remove the code here</SourceLine>
   <SourceLine>f.MacType = t</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>f as FolderItem, t as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateUnixPermissions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1620426751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function UpdateUnixPermissions(f as FolderItem, perm_and as Integer, perm_or as Integer) As Integer</SourceLine>
   <SourceLine>#pragma unused f</SourceLine>
   <SourceLine>#pragma unused perm_or</SourceLine>
   <SourceLine>#pragma unused perm_and</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// obsolete - use UnixStatMode instead</SourceLine>
   <SourceLine>'#if TargetMacOS</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'Dim pb, info as MemoryBlock, err as Integer</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'Declare Function PBSetCatalogInfoSync Lib CarbonLibName (paramBlock as Ptr) as Short</SourceLine>
   <SourceLine>'Declare Function PBGetCatalogInfoSync Lib CarbonLibName (paramBlock as Ptr) as Short</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'dim ref as MemoryBlock = FSRefOfFolderItem(f) // need to keep the ref until we've made the calls!</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'info = new MemoryBlock(144) // FSCatalogInfo</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'pb = new MemoryBlock(72) // FSRefParam</SourceLine>
   <SourceLine>'pb.Ptr(28) = ref</SourceLine>
   <SourceLine>'pb.UInt32Value(32) = &amp;H0400 // FSCatalogInfoBitmap: permissions</SourceLine>
   <SourceLine>'pb.Ptr(36) = info</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'err = PBGetCatalogInfoSync(pb) // it's a field of 16 bytes, so we need to read them first</SourceLine>
   <SourceLine>'if err = 0 then</SourceLine>
   <SourceLine>'dim perm_current as Integer = BitwiseAnd(perm_and, info.UInt16Value(56+8+2))</SourceLine>
   <SourceLine>'info.UInt16Value(56+8+2) = BitwiseOr(perm_or, perm_current)</SourceLine>
   <SourceLine>'err = PBSetCatalogInfoSync(pb)</SourceLine>
   <SourceLine>'else</SourceLine>
   <SourceLine>'// fails on symlinks!</SourceLine>
   <SourceLine>'break</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>'return err</SourceLine>
   <SourceLine>'#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>f as FolderItem, perm_and as Integer, perm_or as Integer</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Property>
  <ItemName>mIsAlias</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1694582783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mIsAlias As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mIsAlias As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mIsSymlink</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>194435071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mIsSymlink As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mIsSymlink As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>549971967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mPath As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mPath As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mMode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1742071807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mMode As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mMode As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mNeedsUpdate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1994768383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mNeedsUpdate As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mNeedsUpdate As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mLength</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>525701119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mLength As UInt64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mLength As UInt64</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>NativePath</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Length</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Uint64</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AbsolutePath</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Count</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DisplayName</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ResourceForkLength</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ExtensionVisible</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Locked</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Exists</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Alias</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Visible</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Directory</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Type</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacType</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacCreator</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsReadable</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IsWriteable</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LastErrorCode</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacVRefNum</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MacDirID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ShellPath</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>URLPath</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Group</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Owner</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>kFSVolInfoNone</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>299524095</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>&amp;h0000</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>unix_stat_struct_linux</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>unix_stat_struct_linux</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>219058175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dev as Int64</SourceLine>
   <SourceLine>res1 as UInt32</SourceLine>
   <SourceLine>ino as UInt32</SourceLine>
   <SourceLine>mode as UInt32</SourceLine>
   <SourceLine>nlink as UInt32</SourceLine>
   <SourceLine>uid as UInt32</SourceLine>
   <SourceLine>gid as UInt32</SourceLine>
   <SourceLine>rdev as UInt64</SourceLine>
   <SourceLine>res2 as UInt32</SourceLine>
   <SourceLine>fsize as UInt32</SourceLine>
   <SourceLine>blksize as UInt32</SourceLine>
   <SourceLine>blocks as UInt32</SourceLine>
   <SourceLine>atime as UInt32</SourceLine>
   <SourceLine>atimesec as UInt32</SourceLine>
   <SourceLine>mtime as UInt32</SourceLine>
   <SourceLine>mtimesec as UInt32</SourceLine>
   <SourceLine>ctime as UInt32</SourceLine>
   <SourceLine>ctimesec as UInt32</SourceLine>
   <SourceLine>res3 as UInt64</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>unix_stat_struct_osx</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>unix_stat_struct_osx</ItemName>
  <Compatibility>(TargetDesktop and (Target64Bit))</Compatibility>
  <Attributes>StructureAlignment = 16</Attributes>
  <Visible>1</Visible>
  <PartID>619993087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dev as Int32</SourceLine>
   <SourceLine>mode as UInt16</SourceLine>
   <SourceLine>nlink as UInt16</SourceLine>
   <SourceLine>ino as UInt64</SourceLine>
   <SourceLine>uid as UInt32</SourceLine>
   <SourceLine>gid as UInt32</SourceLine>
   <SourceLine>rdev as UInt32</SourceLine>
   <SourceLine>atime as UInt64</SourceLine>
   <SourceLine>atimesec as UInt64</SourceLine>
   <SourceLine>mtime as UInt64</SourceLine>
   <SourceLine>mtimesec as UInt64</SourceLine>
   <SourceLine>ctime as UInt64</SourceLine>
   <SourceLine>ctimesec as UInt64</SourceLine>
   <SourceLine>birthtime as UInt64</SourceLine>
   <SourceLine>birthtimesec as UInt64</SourceLine>
   <SourceLine>fsize as UInt64</SourceLine>
   <SourceLine>blocks as UInt64</SourceLine>
   <SourceLine>blksize as UInt32</SourceLine>
   <SourceLine>flags as UInt32</SourceLine>
   <SourceLine>gen as UInt32</SourceLine>
   <SourceLine>lspare as UInt32</SourceLine>
   <SourceLine>qspare1 as UInt64</SourceLine>
   <SourceLine>qspare2 as UInt64</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>unix_stat_struct_osx</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>unix_stat_struct_osx</ItemName>
  <Compatibility>(TargetDesktop and (Target32Bit))</Compatibility>
  <Visible>1</Visible>
  <PartID>604133375</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>dev as Int32</SourceLine>
   <SourceLine>ino as UInt32</SourceLine>
   <SourceLine>mode as UInt16</SourceLine>
   <SourceLine>nlink as UInt16</SourceLine>
   <SourceLine>uid as UInt32</SourceLine>
   <SourceLine>gid as UInt32</SourceLine>
   <SourceLine>rdev as UInt32</SourceLine>
   <SourceLine>atime as UInt32</SourceLine>
   <SourceLine>atimesec as UInt32</SourceLine>
   <SourceLine>mtime as UInt32</SourceLine>
   <SourceLine>mtimesec as UInt32</SourceLine>
   <SourceLine>ctime as UInt32</SourceLine>
   <SourceLine>ctimesec as UInt32</SourceLine>
   <SourceLine>fsize as UInt64</SourceLine>
   <SourceLine>blocks as UInt64</SourceLine>
   <SourceLine>blksize as UInt32</SourceLine>
   <SourceLine>flags as UInt32</SourceLine>
   <SourceLine>gen as UInt32</SourceLine>
   <SourceLine>lspare as UInt32</SourceLine>
   <SourceLine>qspare1 as UInt64</SourceLine>
   <SourceLine>qspare2 as UInt64</SourceLine>
  </ItemSource>
 </Structure>
</block>
<block type="Module" ID="-1164803455">
 <ObjName>ZipBinaryStreamReader</ObjName>
 <ObjContainerID>804857855</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>IStreamReader, Readable</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>176637951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(binstream as BinaryStream, size as Int64, prefix as String, suffix as String)</SourceLine>
   <SourceLine>// the constructor</SourceLine>
   <SourceLine>me.theStream = binstream</SourceLine>
   <SourceLine>me.prefixStr = prefix</SourceLine>
   <SourceLine>me.prefixLen = LenB(prefix)</SourceLine>
   <SourceLine>me.suffixStr = suffix</SourceLine>
   <SourceLine>me.suffixLen = LenB(suffix)</SourceLine>
   <SourceLine>me.streamLen = size</SourceLine>
   <SourceLine>me.leftToRead = me.prefixLen + me.streamLen + me.suffixLen</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>binstream as BinaryStream, size as Int64, prefix as String, suffix as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ErrorValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1686730751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ErrorValue() As Integer</SourceLine>
   <SourceLine>return me.LastError</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>fetch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1867067391</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function fetch(amt_ as UInt32) As String</SourceLine>
   <SourceLine>dim amt, n as UInt32, s as String</SourceLine>
   <SourceLine>amt = amt_</SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>if me.prefixLen &gt; 0 then</SourceLine>
   <SourceLine>n = Min(me.prefixLen, amt)</SourceLine>
   <SourceLine>amt = amt - n</SourceLine>
   <SourceLine>me.prefixLen = me.prefixLen - n</SourceLine>
   <SourceLine>if me.prefixLen &gt; 0 then</SourceLine>
   <SourceLine>s = s + LeftB(me.prefixStr, n)</SourceLine>
   <SourceLine>me.prefixStr = MidB(me.prefixStr, n+1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>s = s + me.prefixStr</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif me.streamLen &gt; 0 then</SourceLine>
   <SourceLine>n = Min(me.streamLen, amt)</SourceLine>
   <SourceLine>amt = amt - n</SourceLine>
   <SourceLine>me.streamLen = me.streamLen - n</SourceLine>
   <SourceLine>if LenB(s) = 0 then</SourceLine>
   <SourceLine>s = me.theStream.Read(n)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>s = s + me.theStream.Read(n)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif me.suffixLen &gt; 0 then</SourceLine>
   <SourceLine>n = Min(me.suffixLen, amt)</SourceLine>
   <SourceLine>amt = amt - n</SourceLine>
   <SourceLine>me.suffixLen = me.suffixLen - n</SourceLine>
   <SourceLine>if me.suffixLen &gt; 0 then</SourceLine>
   <SourceLine>s = s + LeftB(me.suffixStr, n)</SourceLine>
   <SourceLine>me.suffixStr = MidB(me.suffixStr, n+1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>s = s + me.suffixStr</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>loop until amt = 0</SourceLine>
   <SourceLine>return s</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>amt_ as UInt32</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>LastError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2120908799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LastError() As Integer</SourceLine>
   <SourceLine>dim i as Integer</SourceLine>
   <SourceLine>i = me.errCode</SourceLine>
   <SourceLine>return me.errCode</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>91502591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(Count As Integer) As String</SourceLine>
   <SourceLine>return Read (Count, nil)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Count As Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Remaining</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1392070655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Remaining() As Int64</SourceLine>
   <SourceLine>return me.leftToRead</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Int64</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility>true</Compatibility>
  <Visible>1</Visible>
  <PartID>1261762559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(Count As Integer, encoding As TextEncoding = Nil) As String</SourceLine>
   <SourceLine>// Part of the Readable interface.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused encoding</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim n as Int64</SourceLine>
   <SourceLine>n = Count</SourceLine>
   <SourceLine>if n &gt; me.leftToRead then</SourceLine>
   <SourceLine>n = me.leftToRead</SourceLine>
   <SourceLine>if n = 0 then</SourceLine>
   <SourceLine>me.errCode = -39 // EOF</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if n &gt; 0 then</SourceLine>
   <SourceLine>me.leftToRead = me.leftToRead - n</SourceLine>
   <SourceLine>return fetch(n)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception exc as RuntimeException</SourceLine>
   <SourceLine>me.errCode = -1 // undefined error</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Count As Integer, encoding As TextEncoding = Nil</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>EOF</ItemName>
  <Compatibility>true</Compatibility>
  <Visible>1</Visible>
  <PartID>1535899647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function EOF() As Boolean</SourceLine>
   <SourceLine>// Part of the Readable interface.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return Remaining() = 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ReadError</ItemName>
  <Compatibility>true</Compatibility>
  <Visible>1</Visible>
  <PartID>329324543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ReadError() As Boolean</SourceLine>
   <SourceLine>// Part of the Readable interface.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>608505855</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>See the notes in the class "ZipArchive" for more information</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Property>
  <ItemName>errCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1680781311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>errCode As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>errCode As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>leftToRead</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>348633087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>leftToRead As Int64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>leftToRead As Int64</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>prefixLen</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2025302015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>prefixLen As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>prefixLen As UInt32</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>prefixStr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>990875647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>prefixStr As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>prefixStr As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>streamLen</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>631322623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>streamLen As Int64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>streamLen As Int64</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>suffixLen</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>762628095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>suffixLen As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>suffixLen As UInt32</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>suffixStr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>153387007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>suffixStr As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>suffixStr As String</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>theStream</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>981657599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>theStream As BinaryStream</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>theStream As BinaryStream</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="-1164730034">
 <ObjName>ZipBinaryStreamWriter</ObjName>
 <ObjContainerID>804857855</ObjContainerID>
 <IsClass>1</IsClass>
 <Interfaces>IStreamWriter</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>BytesWritten</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1100675071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function BytesWritten() As Integer</SourceLine>
   <SourceLine>return me.written</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>506509311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>524484607</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(binstream as BinaryStream, discardLeadingBytes as Integer)</SourceLine>
   <SourceLine>// the constructor</SourceLine>
   <SourceLine>me.binstream = binstream</SourceLine>
   <SourceLine>me.discardLeadingBytes = discardLeadingBytes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>binstream as BinaryStream, discardLeadingBytes as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>290791423</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CRC() As Integer</SourceLine>
   <SourceLine>return me.crc_</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>EnableCRCCalculation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1050687487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnableCRCCalculation()</SourceLine>
   <SourceLine>me.calcCRC = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ErrorValue</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>576180223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ErrorValue() As Integer</SourceLine>
   <SourceLine>return me.LastError</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>LastError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>38707199</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LastError() As Integer</SourceLine>
   <SourceLine>return 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>543533055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Write(dataIn As String)</SourceLine>
   <SourceLine>dim dataOut as String</SourceLine>
   <SourceLine>dim l as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dataOut = dataIn</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.calcCRC then</SourceLine>
   <SourceLine>me.crc_ = ZipConfig.CRC32 (me.crc_, dataIn)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>l = LenB(dataOut)</SourceLine>
   <SourceLine>if me.discardLeadingBytes &gt; 0 then</SourceLine>
   <SourceLine>if l &gt;= me.discardLeadingBytes then</SourceLine>
   <SourceLine>binstream.Write MidB(dataOut, me.discardLeadingBytes+1)</SourceLine>
   <SourceLine>me.written = me.written + l - me.discardLeadingBytes</SourceLine>
   <SourceLine>me.discardLeadingBytes = 0</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>me.discardLeadingBytes = me.discardLeadingBytes - l</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>binstream.Write dataOut</SourceLine>
   <SourceLine>me.written = me.written + l</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>dataIn As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>WriteFromZLib</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2030768127</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function WriteFromZLib(buf as Ptr, len as UInt32, ByRef hint as Variant) As Boolean</SourceLine>
   <SourceLine>// Fits the delegate ZLibStream.WriteProc</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#pragma unused hint</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if written = 0 and me.discardLeadingBytes = 2 then</SourceLine>
   <SourceLine>// make sure the header is as expected</SourceLine>
   <SourceLine>if buf.Byte(0) &lt;&gt; ZLibStream.Header1 or buf.Byte(1) &lt;&gt; ZLibStream.Header2 then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>raise new UnsupportedFormatException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mb as MemoryBlock = buf</SourceLine>
   <SourceLine>Write mb.StringValue (0, len)</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>buf as Ptr, len as UInt32, ByRef hint as Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>838248447</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>See the notes in the class "ZipArchive" for more information</NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Property>
  <ItemName>binstream</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1471449087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>binstream As BinaryStream</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>binstream As BinaryStream</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>calcCRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2137784319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>calcCRC As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>calcCRC As Boolean</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>crc_</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>81807359</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>crc_ As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>crc_ As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>discardLeadingBytes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>90085375</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>discardLeadingBytes As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>discardLeadingBytes As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>written</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1099585535</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>written As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>written As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="-1164613199">
 <ObjName>ZipExtraField</ObjName>
 <ObjContainerID>804857855</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>AsData</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>248465407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AsData() As String</SourceLine>
   <SourceLine>// Internal function</SourceLine>
   <SourceLine>// Returns the extra field as a string. Used by ZipArchive.Add... methods</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.data &lt;&gt; nil then</SourceLine>
   <SourceLine>return me.data.StringValue(0,me.data.Size)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetTypeCreatorName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>983367679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetTypeCreatorName(ByRef type as String, ByRef creator as String, ByRef name as String) As Boolean</SourceLine>
   <SourceLine>// Returns TRUE if the archive contains a ZipIt-compatible information about the file's</SourceLine>
   <SourceLine>//   Type and Creator codes, and an optional original Macintosh file name (in case the</SourceLine>
   <SourceLine>//   entry's normal name had to be modified to meet DOS naming conventions when it</SourceLine>
   <SourceLine>//   was stored). If this name is available, it is returned with the other information, otherwise</SourceLine>
   <SourceLine>//   it will be set to an empty string.</SourceLine>
   <SourceLine>// Returns FALSE if no such information is stored in the Extra Field. Be aware that</SourceLine>
   <SourceLine>//   an archive created by ZipIt (http://www.maczipit.com) may contain Type &amp; Creator</SourceLine>
   <SourceLine>//   information also in a second place, which is inside the optional MacBinary header in</SourceLine>
   <SourceLine>//   case the file was stored as "Mac-only". The information from such a MacBinary</SourceLine>
   <SourceLine>//   header is not detected by this function.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim ofs, c, l, i as Integer, mb as MemoryBlock</SourceLine>
   <SourceLine>mb = me.data</SourceLine>
   <SourceLine>i = me.zpit_rec</SourceLine>
   <SourceLine>if mb &lt;&gt; nil and i &gt;= 0 then</SourceLine>
   <SourceLine>c = mb.UInt16Value(i) // signature</SourceLine>
   <SourceLine>l = mb.UInt16Value(i+2) // length</SourceLine>
   <SourceLine>if (c = &amp;H2605 and l &gt;= 13) or (c = &amp;H2705 and l &gt;= 12) then</SourceLine>
   <SourceLine>if c = &amp;H2605 then</SourceLine>
   <SourceLine>name = mb.PString(i+8)</SourceLine>
   <SourceLine>ofs = LenB(name)+1</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>name = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>type = mb.StringValue(i+8+ofs, 4)</SourceLine>
   <SourceLine>creator = mb.StringValue(i+12+ofs, 4)</SourceLine>
   <SourceLine>name = me.d.decodeFromZip(name)</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef type as String, ByRef creator as String, ByRef name as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetUnixTimes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1106728959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetUnixTimes(ByRef accTime as Integer, ByRef modTime as Integer) As Boolean</SourceLine>
   <SourceLine>// The values use unix time, which counts the seconds since 1 January 1970 00:00:00</SourceLine>
   <SourceLine>// Also, they're in UTC (GMT normalized)</SourceLine>
   <SourceLine>if me.accTime &lt;&gt; 0 then</SourceLine>
   <SourceLine>accTime = me.accTime</SourceLine>
   <SourceLine>modTime = me.modTime</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ByRef accTime as Integer, ByRef modTime as Integer</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsLocked</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2058579967</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsLocked() As Boolean</SourceLine>
   <SourceLine>// Returns TRUE if the items are read-only.</SourceLine>
   <SourceLine>// This is the case once this object has been added with a file to an archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return me.locked</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsUnixType1Only</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1222809599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsUnixType1Only() As Boolean</SourceLine>
   <SourceLine>return me.hasUXonly</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Lock</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>413386751</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Lock()</SourceLine>
   <SourceLine>// Locks this object. Is called internally once this obj gets added to an archive</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.locked = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1373634559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(privDat as ZipArchiveData, fieldData as String)</SourceLine>
   <SourceLine>// Constructor, for internal use only</SourceLine>
   <SourceLine>// "fieldData" is the entire set of bytes that'll be stored in the extras field</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim c, len, i, n as Integer, mb as MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.d = privDat</SourceLine>
   <SourceLine>me.zpit_rec = -1 // nonexistent</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>len = LenB(fieldData)</SourceLine>
   <SourceLine>if len &gt; 0 then</SourceLine>
   <SourceLine>mb = new MemoryBlock(len)</SourceLine>
   <SourceLine>if mb = nil then</SourceLine>
   <SourceLine>raise new OutOfMemoryException</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mb.LittleEndian = true // this is the default!</SourceLine>
   <SourceLine>mb.StringValue(0,len) = fieldData</SourceLine>
   <SourceLine>me.data = mb</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// see if we have a ZPIT record in there</SourceLine>
   <SourceLine>i = 0</SourceLine>
   <SourceLine>while (i+4) &lt; len</SourceLine>
   <SourceLine>n = mb.UInt16Value(i+2)</SourceLine>
   <SourceLine>if n &lt;= 0 or (i+n+4) &gt; len then</SourceLine>
   <SourceLine>exit</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if n &gt;= 12 then</SourceLine>
   <SourceLine>if mb.UInt32Value(i+4) = &amp;H5449505A then // "ZPIT"</SourceLine>
   <SourceLine>c = mb.UInt16Value(i) // signature</SourceLine>
   <SourceLine>if c = &amp;H2605 or c = &amp;H2705 then</SourceLine>
   <SourceLine>// found it</SourceLine>
   <SourceLine>me.zpit_rec = i</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>i = i + n + 4</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.zpit_rec &lt; 0 then</SourceLine>
   <SourceLine>// see if we have a UX record as used by Mac OS X in there (i.e. at offset 0 and nothing else besides it)</SourceLine>
   <SourceLine>if mb.Size = 12 then</SourceLine>
   <SourceLine>if mb.UInt32Value(0) = &amp;H00085855 then</SourceLine>
   <SourceLine>me.hasUXonly = true</SourceLine>
   <SourceLine>me.accTime = mb.Int32Value(4)</SourceLine>
   <SourceLine>me.modTime = mb.Int32Value(8)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>privDat as ZipArchiveData, fieldData as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>If you want to make changes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1564907519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>If you want to make changes</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>If you should want to add Set... functions here to expand the features of what</NoteLine>
   <NoteLine>can be stored in this Extra Field, make sure you do not allow any changes</NoteLine>
   <NoteLine>be made if "me.locked" is TRUE, or it would lead to inconsistent archives.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>The better way to handle this is to have the user instantiate an object</NoteLine>
   <NoteLine>of this class, and preferrably provide all information right in the</NoteLine>
   <NoteLine>constructor, so that no one gets the idea to try and add information later</NoteLine>
   <NoteLine>when it's not OK any more.</NoteLine>
  </ItemSource>
  <ItemFlags>1</ItemFlags>
 </Note>
 <Property>
  <ItemName>accTime</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1855514623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>accTime As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>accTime As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>d</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>869574655</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>d As ZipArchiveData</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>d As ZipArchiveData</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>data</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>984645631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>data As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>data As MemoryBlock</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>hasUXonly</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1049595903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>hasUXonly As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>hasUXonly As Boolean</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>locked</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>89958399</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>locked As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>locked As Boolean</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>modTime</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>914335743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>modTime As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>modTime As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>zpit_rec</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1956739071</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>zpit_rec As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>zpit_rec As Integer</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="-1164643988">
 <ObjName>ZipProgressNotifier</ObjName>
 <ObjContainerID>804857855</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>1</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>ZipFileError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>167733247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ZipFileError(f as FolderItem, errCode as Integer, errMsg as String, ByRef abort as Boolean)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, errCode as Integer, errMsg as String, ByRef abort as Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ZipFileStarting</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>844638207</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ZipFileStarting(f as FolderItem, ByRef abort as Boolean)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>f as FolderItem, ByRef abort as Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ZipProgress</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>57460735</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ZipProgress(entry as ZipEntry, totalBytes as Int64, finishedBytes as Int64, ByRef abort as Boolean)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>8</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>entry as ZipEntry, totalBytes as Int64, finishedBytes as Int64, ByRef abort as Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="830923913">
 <ObjName>ZipSeqOutputStream</ObjName>
 <ObjContainerID>804857855</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>BinaryStream</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>315951103</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Write(s as String)</SourceLine>
   <SourceLine>myWrite s</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>s as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>WriteUInt16</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>333832191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub WriteUInt16(i as UInt16)</SourceLine>
   <SourceLine>mBuffer16.UInt16Value(0) = i</SourceLine>
   <SourceLine>myWrite mBuffer16</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>i as UInt16</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>WriteUInt32</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1919154175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub WriteUInt32(i as UInt32)</SourceLine>
   <SourceLine>mBuffer32.UInt32Value(0) = i</SourceLine>
   <SourceLine>myWrite mBuffer32</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>i as UInt32</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>notAllowed</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>509935615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Sub notAllowed()</SourceLine>
   <SourceLine>// These functions may not be called in this class as it's only meant to accept sequential writing calls</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>dim exc as new RuntimeException</SourceLine>
   <SourceLine>exc.Message = "Internal error (calling unsupported method in ZipSeqOutputStream)"</SourceLine>
   <SourceLine>raise exc</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Close</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1595639807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Close()</SourceLine>
   <SourceLine>raiseEvent Close</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1354751999</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// You need to subclass this class and call this constructor from its constructor</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.Constructor("")</SourceLine>
   <SourceLine>mCurrLength = 0</SourceLine>
   <SourceLine>mBuffer16 = new MemoryBlock (2)</SourceLine>
   <SourceLine>mBuffer16.LittleEndian = true</SourceLine>
   <SourceLine>mBuffer32 = new MemoryBlock (4)</SourceLine>
   <SourceLine>mBuffer32.LittleEndian = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>4097</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>myWrite</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>687650815</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub myWrite(d as MemoryBlock)</SourceLine>
   <SourceLine>dim abort as Boolean</SourceLine>
   <SourceLine>raiseEvent Write (d, abort)</SourceLine>
   <SourceLine>if abort then</SourceLine>
   <SourceLine>mError = true</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mCurrLength = mCurrLength + d.Size</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>d as MemoryBlock</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>SeqStreamHadError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>102606847</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SeqStreamHadError() As Boolean</SourceLine>
   <SourceLine>return mError</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>SeqStreamLength</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1627135999</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function SeqStreamLength() As UInt64</SourceLine>
   <SourceLine>return mCurrLength</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInt64</ItemResult>
 </Method>
 <Hook>
  <ItemName>Write</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams>data as MemoryBlock, ByRef abort as Boolean</ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Hook>
  <ItemName>Close</ItemName>
  <TextEncoding>134217984</TextEncoding>
  <ItemFlags>33</ItemFlags>
  <SystemFlags>0</SystemFlags>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Hook>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1845661695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>This class is specially made for the ZipArchive class and its functions.</NoteLine>
   <NoteLine>It makes a few assumptions (endianness, and which functions will</NoteLine>
   <NoteLine>be called), making it not suitable for general use but only for use</NoteLine>
   <NoteLine>with the ZipArchive.OpenForSequentialWriting method.</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>mCurrLength</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>153477119</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCurrLength As UInt64</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCurrLength As UInt64</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mBuffer32</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>301639679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mBuffer32 As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mBuffer32 As MemoryBlock</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>51609599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mError As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mError As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mBuffer16</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>315908095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mBuffer16 As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mBuffer16 As MemoryBlock</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Length</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>UInt64</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Position</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>UInt64</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LittleEndian</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LastErrorCode</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>UseIOExceptions</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Folder" ID="1920745471">
 <ObjName>ZLibClasses</ObjName>
 <ObjContainerID>780748799</ObjContainerID>
</block>
<block type="Module" ID="15918098">
 <ObjName>ZLibDeflator</ObjName>
 <ObjContainerID>1920745471</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ZLibStream</Superclass>
 <Interfaces>IStreamWriter</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>744304639</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(writer as WriteProc, level as Integer = DEFAULT_COMPRESSION)</SourceLine>
   <SourceLine>super.Constructor(writer)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>soft declare function deflateInit_ lib libz_path (stream as Ptr, level as Integer, version as CString, stream_size as Integer) as Int32</SourceLine>
   <SourceLine>soft declare function deflateInit2_ lib libz_path (stream as Ptr, level as Integer, method as Integer, windowBits as Integer, memLevel as Integer, strategy as Integer, version as CString, stream_size as Integer) as Int32</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>const MAX_WBITS = 15</SourceLine>
   <SourceLine>const DEF_MEM_LEVEL = 8</SourceLine>
   <SourceLine>const Z_DEFAULT_STRATEGY = 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim err as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if true</SourceLine>
   <SourceLine>err = deflateInit_ (mStream, level, Version(), mStream.Size)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>// alternative with more options:</SourceLine>
   <SourceLine>err = deflateInit2_ (mStream, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY, Version(), mStream.Size)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if err &lt;&gt; 0 then</SourceLine>
   <SourceLine>raise new ZLibStreamException (me, err)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>writer as WriteProc, level as Integer = DEFAULT_COMPRESSION</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>901029887</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>if IsZLibAvailable(false) then</SourceLine>
   <SourceLine>soft declare sub deflateEnd lib libz_path (stream as Ptr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>deflateEnd mStream</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Reset</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1936695295</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Reset()</SourceLine>
   <SourceLine>soft declare sub deflateReset lib libz_path (stream as Ptr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>deflateReset mStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.Reset</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mCRC = 0</SourceLine>
   <SourceLine>mCalcCRC = false</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Deflate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>279181311</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Deflate(input as Ptr, len as UInt32, flush as FlushCode, ByRef hint as Variant) As Boolean</SourceLine>
   <SourceLine>soft declare function deflate lib libz_path (stream as Ptr, flush as Integer) as Int32</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mCalcCRC and len &gt; 0 then</SourceLine>
   <SourceLine>mCRC = ZLibStream.CRC32(mCRC, input, len)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.z_next_in = input</SourceLine>
   <SourceLine>me.z_avail_in = len</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim result as Integer</SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>me.z_next_out = mBuffer</SourceLine>
   <SourceLine>me.z_avail_out = mBuffer.Size</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = deflate (mStream, Integer(flush))</SourceLine>
   <SourceLine>if result = Z_STREAM_ERROR then</SourceLine>
   <SourceLine>raise new ZLibStreamException (me, result)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim written as UInt32 = mBuffer.Size - me.z_avail_out</SourceLine>
   <SourceLine>if written &gt; 0 then</SourceLine>
   <SourceLine>if not mWriter.Invoke (mBuffer, written, hint) then</SourceLine>
   <SourceLine>// cancelled</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>loop until me.z_avail_out &lt;&gt; 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.z_avail_in &lt;&gt; 0 then</SourceLine>
   <SourceLine>// Oops - not all input was consumed. This should never ever happen</SourceLine>
   <SourceLine>raise new ZLibStreamException (me, 101)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if flush = FlushCode.FINISH and result &lt;&gt; Z_STREAM_END then</SourceLine>
   <SourceLine>// Oops - stream was not completed. This should never ever happen</SourceLine>
   <SourceLine>raise new ZLibStreamException (me, 102)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>input as Ptr, len as UInt32, flush as FlushCode, ByRef hint as Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1801029631</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Write(data as MemoryBlock)</SourceLine>
   <SourceLine>dim v as Variant</SourceLine>
   <SourceLine>call Deflate (data, data.Size, FlushCode.NO_FLUSH, v)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data as MemoryBlock</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Finish</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2025160703</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Finish()</SourceLine>
   <SourceLine>dim v as Variant</SourceLine>
   <SourceLine>call Deflate (nil, 0, FlushCode.FINISH, v)</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>LastError</ItemName>
  <Compatibility>true</Compatibility>
  <Visible>1</Visible>
  <PartID>1936347135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LastError() As Integer</SourceLine>
   <SourceLine>// Part of the IStreamWriter interface.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>CRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2064250879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CRC() As Integer</SourceLine>
   <SourceLine>return me.mCRC</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>EnableCRCCalculation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>135421951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnableCRCCalculation()</SourceLine>
   <SourceLine>mCalcCRC = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Write</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>130123775</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Write(data as String)</SourceLine>
   <SourceLine>dim mb as MemoryBlock = data</SourceLine>
   <SourceLine>Write mb</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>data as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>322207743</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>This class is used to compress data into zlib compression format</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>mCalcCRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>837206015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCalcCRC As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCalcCRC As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mCRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>341557247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCRC As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCRC As UInt32</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>DEFAULT_COMPRESSION</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>802269183</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>-1</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>BEST_COMPRESSION</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>596815871</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>9</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>BEST_SPEED</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>8191</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>1</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>NO_COMPRESSION</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>665343999</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>0</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
</block>
<block type="Module" ID="1501307424">
 <ObjName>ZLibInflator</ObjName>
 <ObjContainerID>1920745471</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>ZLibStream</Superclass>
 <Interfaces>IStreamReader</Interfaces>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1244837887</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(writer as WriteProc)</SourceLine>
   <SourceLine>super.Constructor(writer)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>soft declare function inflateInit_ lib libz_path (stream as Ptr, version as CString, stream_size as Integer) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim err as Integer</SourceLine>
   <SourceLine>err = inflateInit_ (mStream, Version(), mStream.Size)</SourceLine>
   <SourceLine>if err &lt;&gt; 0 then</SourceLine>
   <SourceLine>raise new ZLibStreamException (me, err)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>writer as WriteProc</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Destructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1803313151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Destructor()</SourceLine>
   <SourceLine>if IsZLibAvailable(false) then</SourceLine>
   <SourceLine>soft declare sub inflateEnd lib libz_path (stream as Ptr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>inflateEnd mStream</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Reset</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1810411519</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Reset()</SourceLine>
   <SourceLine>soft declare sub inflateReset lib libz_path (stream as Ptr)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>inflateReset mStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>super.Reset</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mFinished = false</SourceLine>
   <SourceLine>mDataError = false</SourceLine>
   <SourceLine>mCalcCRC = false</SourceLine>
   <SourceLine>mCRC = 0</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Inflate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1486712831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Inflate(input as Ptr, len as UInt32, ByRef consumedOut as UInt32, ByRef finished as Boolean, ByRef hint as Variant) As Boolean</SourceLine>
   <SourceLine>// This function takes a specific amount of input data and attempts to uncompress all of it</SourceLine>
   <SourceLine>// It does NOT set either mDataError nor mFinished nor mCRC.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>soft declare function inflate lib libz_path (stream as Ptr, flush as Integer) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim result as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if len = 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>consumedOut = 0</SourceLine>
   <SourceLine>finished = false</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.z_next_in = input</SourceLine>
   <SourceLine>me.z_avail_in = len</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>me.z_next_out = mBuffer</SourceLine>
   <SourceLine>me.z_avail_out = mBuffer.Size</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = inflate (mStream, 0)</SourceLine>
   <SourceLine>if result = Z_STREAM_ERROR then</SourceLine>
   <SourceLine>raise new ZLibStreamException (me, result)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim written as UInt32 = mBuffer.Size - me.z_avail_out</SourceLine>
   <SourceLine>if written &gt; 0 then</SourceLine>
   <SourceLine>if not mWriter.Invoke (mBuffer, written, hint) then</SourceLine>
   <SourceLine>// cancelled</SourceLine>
   <SourceLine>consumedOut = len - me.z_avail_in</SourceLine>
   <SourceLine>finished = false</SourceLine>
   <SourceLine>return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>loop until me.z_avail_out &lt;&gt; 0 or result &lt;&gt; 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>consumedOut = len - me.z_avail_in</SourceLine>
   <SourceLine>finished = (result = Z_STREAM_END)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end // if len &gt; 0 else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return finished or result = 0</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>input as Ptr, len as UInt32, ByRef consumedOut as UInt32, ByRef finished as Boolean, ByRef hint as Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>972601343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(amount as Integer) As String</SourceLine>
   <SourceLine>// Part of the IStreamReader interface.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// This function returns a specific amount of uncompressed data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mb as new MemoryBlock (amount)</SourceLine>
   <SourceLine>dim n as UInt32 = Read (mb, mb.Size)</SourceLine>
   <SourceLine>if n = mb.Size then</SourceLine>
   <SourceLine>return mb</SourceLine>
   <SourceLine>elseif n = 0 then</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return mb.StringValue(0,n)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>amount as Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>LastError</ItemName>
  <Compatibility>true</Compatibility>
  <Visible>1</Visible>
  <PartID>1181106175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function LastError() As Integer</SourceLine>
   <SourceLine>// Part of the IStreamReader interface.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mDataError then</SourceLine>
   <SourceLine>return -1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Read</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2112153599</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Read(readBuf as Ptr, amount as UInt32, chunkSize as UInt32 = 0) As UInt32</SourceLine>
   <SourceLine>// This function returns a specific amount of uncompressed data</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>soft declare function inflate lib libz_path (stream as Ptr, flush as Int32) as Int32</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if chunkSize &lt;= 0 then</SourceLine>
   <SourceLine>chunkSize = 4096 // could be increased for better performance, maybe</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim totalOutBefore as UInt32 = me.z_total_out</SourceLine>
   <SourceLine>dim result as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if amount &gt; 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.z_next_out = readBuf</SourceLine>
   <SourceLine>me.z_avail_out = amount</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>do</SourceLine>
   <SourceLine>if me.z_avail_in = 0 then</SourceLine>
   <SourceLine>me.z_avail_in = chunkSize</SourceLine>
   <SourceLine>mBuffer = mReader.Read (me.z_avail_in)</SourceLine>
   <SourceLine>me.z_next_in = mBuffer</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>result = inflate (mStream, Integer(FlushCode.SYNC_FLUSH))</SourceLine>
   <SourceLine>if result = Z_STREAM_ERROR then</SourceLine>
   <SourceLine>raise new ZLibStreamException (me, result)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>loop until me.z_avail_out = 0 or result &lt;&gt; 0</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result &lt; 0 and result &lt;&gt; Z_DATA_ERROR then break</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end // if len &gt; 0 else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if result = Z_STREAM_END then</SourceLine>
   <SourceLine>mFinished = true</SourceLine>
   <SourceLine>elseif result = Z_DATA_ERROR then</SourceLine>
   <SourceLine>mFinished = true</SourceLine>
   <SourceLine>mDataError = true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>amount = me.z_total_out - totalOutBefore</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mCalcCRC and amount &gt; 0 then</SourceLine>
   <SourceLine>mCRC = ZLibStream.CRC32(mCRC, readBuf, amount)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return amount</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>readBuf as Ptr, amount as UInt32, chunkSize as UInt32 = 0</ItemParams>
  <ItemResult>UInt32</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>205598719</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(reader as Readable)</SourceLine>
   <SourceLine>me.Constructor(WriteProc(nil))</SourceLine>
   <SourceLine>mReader = reader</SourceLine>
   <SourceLine>mBuffer = nil // we're not using a pre-allocated buffer in this mode</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>reader as Readable</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>TotalIn</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1600825343</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function TotalIn() As UInt32</SourceLine>
   <SourceLine>return me.z_total_in</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>UInt32</ItemResult>
 </Method>
 <Method>
  <ItemName>IsFinished</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>190492671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IsFinished() As Boolean</SourceLine>
   <SourceLine>return mFinished</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>EnableCRCCalculation</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>999860223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub EnableCRCCalculation()</SourceLine>
   <SourceLine>mCalcCRC = true</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1607890943</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CRC() As Integer</SourceLine>
   <SourceLine>return me.mCRC</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>HadDataError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>549916671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function HadDataError() As Boolean</SourceLine>
   <SourceLine>return mDataError</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1864153087</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>This class is used to uncompress zlib-compressed data</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>You can use it in either of two modes:</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>1.</NoteLine>
   <NoteLine>Use Read() to fetch pre-determined amounts of uncompressed data</NoteLine>
   <NoteLine>from a compressed stream. For this mode, use Constructor(Readable).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>2.</NoteLine>
   <NoteLine>Use Inflate() to pass compressed data and have it passed to a Write</NoteLine>
   <NoteLine>function that was specified by using Constructor(WriteProc).</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Note: Inflate() and Read() can not be mixed!</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>mReader</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1319596031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mReader As Readable</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mReader As Readable</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mFinished</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2008004607</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mFinished As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mFinished As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mCalcCRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1800992767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCalcCRC As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCalcCRC As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mCRC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>89866239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mCRC As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mCRC As UInt32</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mDataError</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>837615615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mDataError As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mDataError As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1714807283">
 <ObjName>ZLibStream</ObjName>
 <ObjContainerID>1920745471</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Version</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2073053183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function Version() As String</SourceLine>
   <SourceLine>// Returns the version of the used zlib code.</SourceLine>
   <SourceLine>// Returns an empty string if the zlib library (DLL) is not available</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsZLibAvailable(false) then</SourceLine>
   <SourceLine>soft declare function zlibVersion lib libz_path () as CString</SourceLine>
   <SourceLine>return zLibVersion</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1493164031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine>// You can not use this class directly - you need to use ZLibInflator or ZLibDeflator!</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mStream = NewZStream()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>call IsZLibAvailable(true) // raises exception if zlib not available</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mBuffer = new MemoryBlock (&amp;h10000) // This size is arbitrary. Feel free to change it</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CRC32</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2021292031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function CRC32(crc as UInt32, buf as Ptr, len as UInt32) As UInt32</SourceLine>
   <SourceLine>call IsZLibAvailable(true)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>soft declare function crc32x lib libz_path alias "crc32" (crc as UInt32, buf as Ptr, len as UInt32) as UInt32</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return crc32x (crc, buf, len)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>crc as UInt32, buf as Ptr, len as UInt32</ItemParams>
  <ItemResult>UInt32</ItemResult>
 </Method>
 <Method>
  <ItemName>CRC32</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>124911615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function CRC32(mb as MemoryBlock) As UInt32</SourceLine>
   <SourceLine>return crc32 (crc32(0,nil,0), mb, mb.Size)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>mb as MemoryBlock</ItemParams>
  <ItemResult>UInt32</ItemResult>
 </Method>
 <Method>
  <ItemName>Message</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>810420223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Message() As String</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>return mStream.CString(24)</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>return mStream.CString(48)</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>return mStream.CString(32)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>Reset</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2021806079</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Reset()</SourceLine>
   <SourceLine>me.z_avail_in = 0</SourceLine>
   <SourceLine>me.z_avail_out = 0</SourceLine>
   <SourceLine>me.z_total_in = 0</SourceLine>
   <SourceLine>me.z_total_out = 0</SourceLine>
   <SourceLine>me.z_next_in = nil</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <DelegateDeclaration>
  <ItemName>WriteProc</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>396705791</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Delegate Function WriteProc(buf as Ptr, len as UInt32, ByRef hint as Variant) As Boolean</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>buf as Ptr, len as UInt32, ByRef hint as Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </DelegateDeclaration>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>755533823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(writer as WriteProc)</SourceLine>
   <SourceLine>me.Constructor()</SourceLine>
   <SourceLine>mWriter = writer</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>writer as WriteProc</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>_SelfTest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>328693759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Sub _SelfTest()</SourceLine>
   <SourceLine>// does some tests to verify that it works</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if IsZLibAvailable(false) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>System.DebugLog "ZLib version: " + Version</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zd as new ZLibDeflator (AddressOf _SelfTestWriter, 9)</SourceLine>
   <SourceLine>dim zi as new ZLibInflator (AddressOf _SelfTestWriter)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim v as Variant</SourceLine>
   <SourceLine>dim sin as MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Compress using Deflate() in two parts:</SourceLine>
   <SourceLine>sin = "abcd"</SourceLine>
   <SourceLine>if not zd.Deflate (sin, sin.Size, ZLibStream.FlushCode.NO_FLUSH, v) then</SourceLine>
   <SourceLine>#if TargetHasGUI</SourceLine>
   <SourceLine>MsgBox "Deflate 1 failed"</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>sin = "ef"</SourceLine>
   <SourceLine>if not zd.Deflate (sin, sin.Size, ZLibStream.FlushCode.FINISH, v) then</SourceLine>
   <SourceLine>#if TargetHasGUI</SourceLine>
   <SourceLine>MsgBox "Deflate 2 failed"</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Uncompress using Inflate() in two parts:</SourceLine>
   <SourceLine>dim l as UInt32, f as Boolean</SourceLine>
   <SourceLine>dim compressedData as String = v.StringValue</SourceLine>
   <SourceLine>sin = compressedData.LeftB(5)</SourceLine>
   <SourceLine>v = ""</SourceLine>
   <SourceLine>if not zi.Inflate (sin, sin.Size, l, f, v) or f then</SourceLine>
   <SourceLine>#if TargetHasGUI</SourceLine>
   <SourceLine>MsgBox "Inflate 1 failed"</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if v &lt;&gt; "ab" then</SourceLine>
   <SourceLine>#if TargetHasGUI</SourceLine>
   <SourceLine>MsgBox "Inflate 1 - wrong data"</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>// second and last part...</SourceLine>
   <SourceLine>sin = compressedData.MidB(6)</SourceLine>
   <SourceLine>if not zi.Inflate (sin, sin.Size, l, f, v) or not f then</SourceLine>
   <SourceLine>#if TargetHasGUI</SourceLine>
   <SourceLine>MsgBox "Inflate 2 failed"</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if v &lt;&gt; "abcdef" then</SourceLine>
   <SourceLine>#if TargetHasGUI</SourceLine>
   <SourceLine>MsgBox "Inflate 2 - wrong data"</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>_SelfTestWriter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1657966591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function _SelfTestWriter(buf as Ptr, len as UInt32, ByRef hint as Variant) As Boolean</SourceLine>
   <SourceLine>dim s as String = hint</SourceLine>
   <SourceLine>dim mb as MemoryBlock = buf</SourceLine>
   <SourceLine>s = s + mb.StringValue(0,len)</SourceLine>
   <SourceLine>hint = s</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>buf as Ptr, len as UInt32, ByRef hint as Variant</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>IsZLibAvailable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>403812351</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function IsZLibAvailable(raiseExceptionIfNotAvail as Boolean = false) As Boolean</SourceLine>
   <SourceLine>if gLibAvailable then return true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not gLibChecked then</SourceLine>
   <SourceLine>gLibChecked = true</SourceLine>
   <SourceLine>gLibAvailable = System.IsFunctionAvailable ("zlibVersion", libz_path)</SourceLine>
   <SourceLine>if not gLibAvailable then</SourceLine>
   <SourceLine>System.DebugLog ("ZLibStream fatal error: zlib library is missing at "+libz_path)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if not gLibAvailable and raiseExceptionIfNotAvail then</SourceLine>
   <SourceLine>raise new ZLibStreamException (nil, -1)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return gLibAvailable</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>raiseExceptionIfNotAvail as Boolean = false</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>NewZStream</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1488037887</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function NewZStream() As MemoryBlock</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>return new MemoryBlock (z_stream_s_32.Size)</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>return new MemoryBlock (z_stream_s_64.Size)</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>return new MemoryBlock (z_stream_s_Win64.Size)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>1</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>MemoryBlock</ItemResult>
 </Method>
 <Note>
  <ItemName>About</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>849461247</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>About</NoteLine>
   <NoteLine>This is a base class for ZLibDeflator and ZLibInflator, to perform zlib</NoteLine>
   <NoteLine>compression and decompression.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>For docs on the used zlib functions see: http://www.zlib.net/manual.html</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Note>
  <ItemName>Read here for MS Windows</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2021335039</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Read here for MS Windows</NoteLine>
   <NoteLine>While Mac OS X and Linux already have the necessary zlib-library installed,</NoteLine>
   <NoteLine>you will need to get it separately for use with Windows.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>--- When building a 32 bit application ---</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Get the DLL from here: http://www.zlib.net/ (download the "zlib compiled DLL")</NoteLine>
   <NoteLine>Then copy the zlib1.dll file to your app's "Libs" folder or next to the .exe file.</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>--- When building a 64 bit application ---</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Get a 64 bit version of the zlib DLL for Windows and place it into your app's "Libs" folder</NoteLine>
   <NoteLine>or next to the .exe file. It should be named "zlib1.dll".</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>You can build your own following these instructions:</NoteLine>
   <NoteLine>http://stackoverflow.com/questions/24118729/vs2013-c-link-compiled-zlib-dll-to-x64-processes</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine>Or download a pre-built version from my server:</NoteLine>
   <NoteLine>http://files.tempel.org/zlib/Windows_64bit/</NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>mStream</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1212573695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mStream As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mStream As MemoryBlock</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mBuffer</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1361602559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mBuffer As MemoryBlock</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mBuffer As MemoryBlock</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mWriter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>78129151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mWriter As WriteProc</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mWriter As WriteProc</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>gLibChecked</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1876979711</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared gLibChecked As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>gLibChecked As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
 </Property>
 <Property>
  <ItemName>gLibAvailable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>933031935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared gLibAvailable As Boolean</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>gLibAvailable As Boolean</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
 </Property>
 <Property>
  <ItemName>z_next_in</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>795305983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>z_next_in As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>z_next_in As Ptr</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>mStream.Ptr(0) = value</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>return mStream.Ptr(0)</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>z_avail_in</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>263868415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>z_avail_in As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>z_avail_in As UInt32</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>mStream.UInt32Value(4) = value</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>mStream.UInt32Value(8) = value</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>return mStream.UInt32Value(4)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>return mStream.UInt32Value(8)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>z_total_in</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>492257279</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>z_total_in As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>z_total_in As UInt32</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>mStream.UInt32Value(8) = value</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>mStream.UInt64Value(16) = value</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>mStream.UInt32Value(12) = value</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>return mStream.UInt32Value(8)</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>return CType (mStream.UInt64Value(16), UInt32)</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>return mStream.UInt32Value(12)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>z_next_out</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>476882943</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>z_next_out As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>z_next_out As Ptr</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>mStream.Ptr(12) = value</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>mStream.Ptr(24) = value</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>mStream.Ptr(16) = value</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>return mStream.Ptr(12)</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>return mStream.Ptr(24)</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>return mStream.Ptr(16)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>z_avail_out</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1323638783</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>z_avail_out As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>z_avail_out As UInt32</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>mStream.UInt32Value(16) = value</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>mStream.UInt32Value(32) = value</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>mStream.UInt32Value(24) = value</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>return mStream.UInt32Value(16)</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>return UInt32(mStream.UInt32Value(32))</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>return mStream.UInt32Value(24)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>z_total_out</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2115409919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>z_total_out As UInt32</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>z_total_out As UInt32</ItemDeclaration>
  <ItemFlags>1</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>mStream.UInt32Value(20) = value</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>mStream.UInt64Value(40) = value</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>mStream.UInt32Value(28) = value</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>#if Target32Bit</SourceLine>
   <SourceLine>return mStream.UInt32Value(20)</SourceLine>
   <SourceLine>#elseif TargetMacOS or TargetLinux</SourceLine>
   <SourceLine>return CType (mStream.UInt64Value(40), UInt32)</SourceLine>
   <SourceLine>#else // -&gt; TargetWindows and Target64Bit</SourceLine>
   <SourceLine>return mStream.UInt32Value(28)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>libz_path</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>961611775</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>1</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>2</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>zlib1.dll</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>1</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>/usr/lib/libz.dylib</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>libz.so.1</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>Z_STREAM_END</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1591138303</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>1</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>Z_STREAM_ERROR</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1736265727</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>-2</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>Z_DATA_ERROR</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>140007423</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>-3</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>Z_NEED_DICT</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1257961471</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>2</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>Z_DEFLATED</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1432627199</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>8</ItemDef>
  <ItemFlags>1</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>Header1</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1886242815</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>&amp;h78</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>Header2</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>405407743</PartID>
  <TextEncoding>134217984</TextEncoding>
  <ItemType>2</ItemType>
  <ItemDef>&amp;h9C</ItemDef>
  <ItemFlags>0</ItemFlags>
 </Constant>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>z_stream_s_64</ItemName>
  <ItemFlags>1</ItemFlags>
  <ItemName>z_stream_s_64</ItemName>
  <Compatibility>Target64Bit</Compatibility>
  <Attributes></Attributes>
  <Visible>1</Visible>
  <PartID>914626559</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>next_in as UInt64</SourceLine>
   <SourceLine>avail_in as UInt32</SourceLine>
   <SourceLine>pad1 as Int32</SourceLine>
   <SourceLine>total_in as UInt64</SourceLine>
   <SourceLine>next_out as UInt64</SourceLine>
   <SourceLine>avail_out as UInt32</SourceLine>
   <SourceLine>pad2 as Int32</SourceLine>
   <SourceLine>total_out as UInt64</SourceLine>
   <SourceLine>msg as UInt64</SourceLine>
   <SourceLine>state as UInt64</SourceLine>
   <SourceLine>zalloc as UInt64</SourceLine>
   <SourceLine>zfree as UInt64</SourceLine>
   <SourceLine>opaque as UInt64</SourceLine>
   <SourceLine>data_type as UInt32</SourceLine>
   <SourceLine>pad3 as Int32</SourceLine>
   <SourceLine>adler as UInt64</SourceLine>
   <SourceLine>reserved as UInt64</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>z_stream_s_32</ItemName>
  <ItemFlags>1</ItemFlags>
  <ItemName>z_stream_s_32</ItemName>
  <Compatibility>Target32Bit</Compatibility>
  <Visible>1</Visible>
  <PartID>1853120511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>next_in as Ptr</SourceLine>
   <SourceLine>avail_in as UInt32</SourceLine>
   <SourceLine>total_in as UInt32</SourceLine>
   <SourceLine>next_out as Ptr</SourceLine>
   <SourceLine>avail_out as UInt32</SourceLine>
   <SourceLine>total_out as UInt32</SourceLine>
   <SourceLine>msg as CString</SourceLine>
   <SourceLine>state as Ptr</SourceLine>
   <SourceLine>zalloc as Ptr</SourceLine>
   <SourceLine>zfree as Ptr</SourceLine>
   <SourceLine>opaque as UInt32</SourceLine>
   <SourceLine>data_type as UInt32</SourceLine>
   <SourceLine>adler as UInt32</SourceLine>
   <SourceLine>reserved as UInt32</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>z_stream_s_Win64</ItemName>
  <ItemFlags>1</ItemFlags>
  <ItemName>z_stream_s_Win64</ItemName>
  <Compatibility>Target64Bit</Compatibility>
  <Visible>1</Visible>
  <PartID>1952796671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>next_in as UInt64</SourceLine>
   <SourceLine>avail_in as UInt32</SourceLine>
   <SourceLine>total_in as UInt32</SourceLine>
   <SourceLine>next_out as UInt64</SourceLine>
   <SourceLine>avail_out as UInt32</SourceLine>
   <SourceLine>total_out as UInt32</SourceLine>
   <SourceLine>msg as UInt64</SourceLine>
   <SourceLine>state as UInt64</SourceLine>
   <SourceLine>zalloc as UInt64</SourceLine>
   <SourceLine>zfree as UInt64</SourceLine>
   <SourceLine>opaque as UInt64</SourceLine>
   <SourceLine>data_type as UInt32</SourceLine>
   <SourceLine>adler as UInt32</SourceLine>
   <SourceLine>reserved as UInt32</SourceLine>
   <SourceLine>padding as Int32</SourceLine>
  </ItemSource>
 </Structure>
 <Enumeration>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>FlushCode</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemType>Integer</ItemType>
  <ItemName>FlushCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1181095935</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>NO_FLUSH</SourceLine>
   <SourceLine>PARTIAL_FLUSH</SourceLine>
   <SourceLine>SYNC_FLUSH</SourceLine>
   <SourceLine>FULL_FLUSH</SourceLine>
   <SourceLine>FINISH</SourceLine>
   <SourceLine>BLOCK</SourceLine>
  </ItemSource>
 </Enumeration>
</block>
<block type="Module" ID="1688523371">
 <ObjName>ZLibStreamException</ObjName>
 <ObjContainerID>1920745471</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>RuntimeException</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1916573695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(fromStream as ZLibStream, errorCode as Integer)</SourceLine>
   <SourceLine>mStream = fromStream</SourceLine>
   <SourceLine>mErrorCode = errorCode</SourceLine>
   <SourceLine>dim msg as String</SourceLine>
   <SourceLine>if mStream &lt;&gt; nil then</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>msg = mStream.Message()</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>break</SourceLine>
   <SourceLine>msg = "zlib missing"</SourceLine>
   <SourceLine>System.DebugLog "ZLibStreamException: zlib missing"</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>if errorCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>if msg &lt;&gt; "" then</SourceLine>
   <SourceLine>msg = msg + ", "</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>msg = msg + "Code "+Str(errorCode,"-#")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>me.Message = msg</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>fromStream as ZLibStream, errorCode as Integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>mErrorCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>423495679</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mErrorCode As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mErrorCode As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mStream</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>749260799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mStream As ZLibStream</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mStream As ZLibStream</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Reason</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Text</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Message</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ErrorNumber</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1831372799">
 <ObjName>ModuleAggiuntivo</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>IT_app</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>902940671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function IT_app(campi() as String) As string</SourceLine>
   <SourceLine>dim outputFile as string, cr as string=endofline.Windows, eancode as string, shippingservice as string</SourceLine>
   <SourceLine>dim app() as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;"+ campi(21) +"&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;Non applicabile&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(20)="DEL" then</SourceLine>
   <SourceLine>shippingservice= "IT_OtherCourier3To5Days"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS)&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;Per ulteriori informazioni contattateci a: lufelappi@libero.it&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;" + shippingservice +"&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;L'oggetto può essere restituito, ma il prodotto non deve essere montato e deve essere nelle stesse condizioni in cui è partito. Per costi e dettagli, contattare il venditore&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(20)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(20)="FEL" or  campi(20)="ALC" or campi(20)="MAK" or campi(20)="CG" or campi(20)="TG" or campi(20)="DEL" then     </SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif campi(20)="OZ" or campi(20)="TEK" or campi(20)="MOM"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Marca&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>'if campi(22) ="" then ' inserita gestione  EAN</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(22)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>'else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Diametro cerchio&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"""&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Distanza fori/PCD]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Offset&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"mm&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Larghezza del canale&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"J&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Fori&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if mid(campi(1),1,17)="CERCHI IN ACCIAO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Materiale&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Cerchi in acciaio&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Materiale&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Cerchi in lega&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine>' UTILIZZO KTYPE</SourceLine>
   <SourceLine>app=split(campi(23), ",")</SourceLine>
   <SourceLine>for idd as Integer = 0 to ubound(app)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ " &lt;Compatibility&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Name&gt;KType&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Value&gt;"+trim(app(idd))+ "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/Compatibility&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as String</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>DE_app</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1698729983</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DE_app(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string, cr as string=endofline.Windows, eancode as string, shippingservice as string</SourceLine>
   <SourceLine>dim app() as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;"+ campi(21) +"&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;Non applicabile&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(20)="DEL" then</SourceLine>
   <SourceLine>shippingservice= "IT_OtherCourier3To5Days"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS)&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Für weitere Informationen kontaktieren Sie mich: lufelappi@libero.it - For other information contact me at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;DE_ExpressversandAusDemAusland&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;DE_ExpressInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;AT&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 1 month. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller.&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Months_1&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Hersteller&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>'if ubound(campi) =25 then ' inserita gestione  EAN</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(25)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>'else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Zollgröße]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Lochkreis&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Einpresstiefe&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Felgenbreite&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"J&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Lochzahl&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if mid(campi(1),1,17)="CERCHI IN ACCIAO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Material&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Stahl&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Material&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Aluminium&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine>' UTILIZZO KTYPE</SourceLine>
   <SourceLine>app=split(campi(23), ",")</SourceLine>
   <SourceLine>for idd as Integer = 0 to ubound(app)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ " &lt;Compatibility&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Name&gt;KType&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Value&gt;"+trim(app(idd))+ "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/Compatibility&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>UK_app</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1618751487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UK_app(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string, cr as string=endofline.Windows, eancode as string, shippingservice as string</SourceLine>
   <SourceLine>dim app() as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;"+ campi(21) +"&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;Non applicabile&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[For more informations please contact us at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;UK_ExpeditedShippingFromOutside&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;UK_CollectInPersonInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;BE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;IE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;DE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;GR&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;IT&lt;/ExcludeShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_14&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Manufacturer&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre Width]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;R "+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Rim Diameter]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Stud Diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Offset&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Number of studs&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' UTILIZZO KTYPE</SourceLine>
   <SourceLine>app=split(campi(23), ",")</SourceLine>
   <SourceLine>for idd as Integer = 0 to ubound(app)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ " &lt;Compatibility&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Name&gt;KType&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Value&gt;"+trim(app(idd))+ "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/Compatibility&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>FR_app</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1913745407</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function FR_app(campi() as String) As string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as String</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>ES_app</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>628402175</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ES_app(campi() as String) As string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as String</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>AU_app</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1748498431</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AU_app(campi() as String) As string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as String</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="807926484">
 <ObjName>Ebay</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>GetJobStatus</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2076717055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetJobStatus(JobID as string, nodeReturn as String = "ack") As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, sRes as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If JobID &lt;&gt;"" then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;getJobStatusRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;jobId&gt;"+str(JobID)+"&lt;/jobId&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/getJobStatusRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SERVICE-NAME","BulkDataExchangeService")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-OPERATION-NAME","getJobStatus")</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>CallResponse = http.post(me.BulkDataExchangeService,1500)</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>sRes=XMLDoc.xql(nodeReturn).item(0).firstchild.value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>sRes=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Return sRes</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>JobID as string, nodeReturn as String = "ack"</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetJobs</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>233805823</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetJobs(StartDate as string,OnlyOpen as Boolean =False, sJobType as String="") As XmlDocument</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if StartDate ="" then</SourceLine>
   <SourceLine>StartDate = "2014-10-01"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;getJobsRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>if Len(StartDate) &gt;0 Then</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;creationTimeFrom&gt;"+StartDate+"&lt;/creationTimeFrom&gt;"</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine>if OnlyOpen Then</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;jobStatus&gt;Created&lt;/jobStatus&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;jobStatus&gt;InProcess&lt;/jobStatus&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;jobStatus&gt;Scheduled&lt;/jobStatus&gt;"</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine>if len(sJobType)&gt;0 Then</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;jobType&gt;"+sJobType+"&lt;/jobType&gt;"</SourceLine>
   <SourceLine>End</SourceLine>
   <SourceLine>'request = request+EndOfLine+"&lt;jobType&gt;"+sJobType+"&lt;/jobType&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/getJobsRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SERVICE-NAME","BulkDataExchangeService")</SourceLine>
   <SourceLine>if useMMAC = false then</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-APPNAME",me.appID)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-APPNAME",me.appID_mmac)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-OPERATION-NAME","getJobs")</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CallResponse = http.post(me.BulkDataExchangeService,1500)</SourceLine>
   <SourceLine>if len(CallResponse)&gt;0 then</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>Return XMLDoc</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>StartDate as string,OnlyOpen as Boolean =False, sJobType as String=""</ItemParams>
  <ItemResult>XmlDocument</ItemResult>
 </Method>
 <Method>
  <ItemName>AbortJob</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1520648191</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AbortJob(jobId as String) As Boolean</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If len( JobID) &gt; 0 then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;abortJobRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;jobId&gt;"+JobID+"&lt;/jobId&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/abortJobRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SERVICE-NAME","BulkDataExchangeService")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-OPERATION-NAME","abortJob")</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>CallResponse = http.post(me.BulkDataExchangeService,600)</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if XMLDoc.xql("//ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>Return true</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>Return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>jobId as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>startDownloadJobRequest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1838843903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function startDownloadJobRequest(tipoAzione as String, UUID as String) As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;startDownloadJobRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;downloadJobType&gt;"+tipoAzione+"&lt;/downloadJobType&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;UUID&gt;"+UUID+"&lt;/UUID&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/startDownloadJobRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SERVICE-NAME","BulkDataExchangeService")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-OPERATION-NAME","startDownloadJob")</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>CallResponse = http.post(me.BulkDataExchangeService,1500)</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>if XMLDoc.xql("/startDownloadJobResponse/ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>Return XMLDoc.xql("/startDownloadJobResponse/jobId").item(0).firstchild.value</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tipoAzione as String, UUID as String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>DownloadFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1075372031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function DownloadFile(jobId as string, fileReference as string, filePath as string) As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, UUID as String, contentId as String, fileZip as string</SourceLine>
   <SourceLine>Dim pos as Integer, posEnd as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If jobId &lt;&gt;"" then</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>DebugLog "Inizio creazione job richiesta DownloadFile"</SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;downloadFileRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;taskReferenceId&gt;"+str(jobId)+"&lt;/taskReferenceId&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;fileReferenceId&gt;"+str(fileReference)+"&lt;/fileReferenceId&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/downloadFileRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SERVICE-NAME","FileTransferService")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-OPERATION-NAME","downloadFile")</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DebugLog "Chiamata DownloadFile"</SourceLine>
   <SourceLine>CallResponse = http.post(me.FileTransferService ,600)</SourceLine>
   <SourceLine>pos = instr(0,CallResponse,"href=""cid:urn:uuid:")</SourceLine>
   <SourceLine>posEnd =  instr(pos + 9,CallResponse,"""")          </SourceLine>
   <SourceLine>UUID = mid(CallResponse,pos + 19, posEnd - (pos + 19))</SourceLine>
   <SourceLine>contentId = "Content-ID: &lt;urn:uuid:" + UUID + "&gt;"</SourceLine>
   <SourceLine>pos = instr(0,CallResponse,contentId)</SourceLine>
   <SourceLine>pos = pos + contentId.Len + 4</SourceLine>
   <SourceLine>posEnd =  instr(pos,CallResponse,"--MIMEBoundaryurn_uuid_")  - 2 </SourceLine>
   <SourceLine>fileZip = mid(CallResponse, pos, posEnd)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim f as FolderItem</SourceLine>
   <SourceLine>Dim stream as BinaryStream</SourceLine>
   <SourceLine>DebugLog "Salvataggio file ZIP"</SourceLine>
   <SourceLine>f=New FolderItem(filePath,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If f&lt;&gt; Nil Then</SourceLine>
   <SourceLine>stream=BinaryStream.Create(f,True)</SourceLine>
   <SourceLine>stream.Write(fileZip)</SourceLine>
   <SourceLine>stream.Close</SourceLine>
   <SourceLine>End if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return CallResponse</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>SendEmail "Errore DownloadFile Job Report",startAction + " - Errore DownloadFile Job Report"</SourceLine>
   <SourceLine>Return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>jobId as string, fileReference as string, filePath as string</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>createUploadJobRequest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1237020671</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function createUploadJobRequest(tipoAzione as String, UUID as String) As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;createUploadJobRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;uploadJobType&gt;"+tipoAzione+"&lt;/uploadJobType&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;UUID&gt;"+UUID+"&lt;/UUID&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/createUploadJobRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SERVICE-NAME","BulkDataExchangeService")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-OPERATION-NAME","createUploadJob")</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>CallResponse = http.post(me.BulkDataExchangeService,1500)</SourceLine>
   <SourceLine>if len(CallResponse)&gt;0 then</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox CallResponse</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if XMLDoc.xql("//ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>Return XMLDoc.xql("//jobId").item(0).firstchild.value + "|" + XMLDoc.xql("//fileReferenceId").item(0).firstchild.value</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>Dim tipoerrore as string, i as integer</SourceLine>
   <SourceLine>tipoerrore= XMLDoc.xql("//errorId").item(0).firstchild.value</SourceLine>
   <SourceLine>if tipoerrore="2" then 'job già presente</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tipoAzione as String, UUID as String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>createUploadFileRequest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1359921151</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function createUploadFileRequest(jobid as String, fileReferenceId as String, inputFilename as String) As string</SourceLine>
   <SourceLine>Dim request as string   = "&lt;?xml version='1.0' encoding='utf-8' ?&gt;"</SourceLine>
   <SourceLine>Dim requestPart as String, binaryPart as String, requestAll as string, sfileStream as String, contentType as String</SourceLine>
   <SourceLine>Dim http as new  HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String</SourceLine>
   <SourceLine>Dim fzip as FolderItem, bs as BinaryStream</SourceLine>
   <SourceLine>Dim URN_UUID_ATTACHMENT as string, URN_UUID_REQUEST as string, UUID as string</SourceLine>
   <SourceLine>Dim boundary as string = "MIME_boundary"</SourceLine>
   <SourceLine>Dim CR as string= Encodings.ASCII.Chr(13) + Encodings.ASCII.Chr(10)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fzip=New FolderItem(inputFilename,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>bs=BinaryStream.Open(fzip,false)</SourceLine>
   <SourceLine>sfilestream = bs.read( bs.length )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>bs.close</SourceLine>
   <SourceLine>URN_UUID_ATTACHMENT =  RandStr(13,True,False,False,False)</SourceLine>
   <SourceLine>URN_UUID_REQUEST = RandStr(13,True,False,False,False)</SourceLine>
   <SourceLine>UUID =  RandStr(13,True,False,False,False)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+_</SourceLine>
   <SourceLine>"&lt;uploadFileRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;taskReferenceId&gt;"+jobid+"&lt;/taskReferenceId&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;fileReferenceId&gt;"+fileReferenceId+"&lt;/fileReferenceId&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;fileFormat&gt;zip&lt;/fileFormat&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;fileAttachment&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;Size&gt;"+str(len(sfilestream))+"&lt;/Size&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;Data&gt;&lt;xop:Include xmlns:xop=""http://www.w3.org/2004/08/xop/include"" href=""cid:urn:uuid:" + URN_UUID_ATTACHMENT  + """ /&gt;&lt;/Data&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;/fileAttachment&gt;"</SourceLine>
   <SourceLine>request = request+"&lt;/uploadFileRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>requestPart = "--"+boundary+CR</SourceLine>
   <SourceLine>requestPart = requestPart+"Content-Type: application/xop+xml; charset=UTF-8; type=""text/xml; charset=UTF-8"""+CR</SourceLine>
   <SourceLine>requestPart = requestPart+"Content-Transfer-Encoding: binary"+CR</SourceLine>
   <SourceLine>requestPart = requestPart+"Content-ID: &lt;0.urn:uuid:" + URN_UUID_REQUEST+"&gt;"+CR+CR</SourceLine>
   <SourceLine>requestPart = requestPart+request+CR</SourceLine>
   <SourceLine>'</SourceLine>
   <SourceLine>binaryPart = "--"+boundary+CR</SourceLine>
   <SourceLine>binaryPart = binaryPart+"Content-Type: application/octet-stream"+CR</SourceLine>
   <SourceLine>binaryPart = binaryPart+"Content-Transfer-Encoding: binary"+CR</SourceLine>
   <SourceLine>binaryPart = binaryPart+"Content-ID: &lt;urn:uuid:"+URN_UUID_ATTACHMENT+"&gt;"+ CR + CR</SourceLine>
   <SourceLine>binaryPart = binaryPart+sfilestream</SourceLine>
   <SourceLine>binaryPart =  binaryPart+CR+"--"+boundary+"--"+ CR</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>requestAll = requestPart + binaryPart</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>contentType = "multipart/related; boundary="+boundary+"; type=""application/xop+xml""; start=""&lt;0.urn:uuid:" + URN_UUID_REQUEST + "&gt;""; start-info=""text/xml"""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.requestHeaders.AppendHeader("X-EBAY-SOA-SERVICE-NAME","FileTransferService")</SourceLine>
   <SourceLine>http.requestHeaders.AppendHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.requestHeaders.AppendHeader("X-EBAY-SOA-OPERATION-NAME","uploadFile")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.SetPostContent(requestAll, contentType)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>CallResponse = http.post( me.FileTransferService,1500)</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if XMLDoc.xql("//ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>Return "Success"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>jobid as String, fileReferenceId as String, inputFilename as String</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>startUploadJobRequest</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>750168063</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function startUploadJobRequest(jobID as String) As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;startUploadJobRequest xmlns:sct=""http://www.ebay.com/soaframework/common/types"" xmlns=""http://www.ebay.com/marketplace/services""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;jobId&gt;"+jobID+"&lt;/jobId&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/startUploadJobRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SERVICE-NAME","BulkDataExchangeService")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-SECURITY-TOKEN",me.userToken)</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-SOA-OPERATION-NAME","startUploadJob")</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>CallResponse = http.post(me.BulkDataExchangeService,1500)</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>if XMLDoc.xql("//ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>Return "Success"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>Return "Error"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>jobID as String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetCategories</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2032570367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetCategories(CategoryParent as Integer, CategorySiteID as Integer, inputFilename as String, CategoryParent2 as Int64 = 0, CategoryParent3 as Int64 = 0,CategoryParent4 as Int64 = 0) As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, sRes as string</SourceLine>
   <SourceLine>Dim fCat as FolderItem</SourceLine>
   <SourceLine>Dim stream as TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;GetCategoriesRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;RequesterCredentials&gt;&lt;eBayAuthToken&gt;"+me.userToken+"&lt;/eBayAuthToken&gt;&lt;/RequesterCredentials&gt;"</SourceLine>
   <SourceLine>if CategoryParent &gt; 0 then</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;CategoryParent&gt;"+str(CategoryParent)+"&lt;/CategoryParent&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if CategoryParent2 &gt; 0 then</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;CategoryParent&gt;"+str(CategoryParent2)+"&lt;/CategoryParent&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if CategoryParent3 &gt; 0 then</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;CategoryParent&gt;"+str(CategoryParent3)+"&lt;/CategoryParent&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if CategoryParent4 &gt; 0 then</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;CategoryParent&gt;"+str(CategoryParent4)+"&lt;/CategoryParent&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;CategorySiteID&gt;"+str(CategorySiteID)+"&lt;/CategorySiteID&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;OutputSelector&gt;CategoryArray.Category.CategoryID&lt;/OutputSelector&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;OutputSelector&gt;CategoryArray.Category.CategoryName&lt;/OutputSelector&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;OutputSelector&gt;CategoryArray.Category.CategoryParentID&lt;/OutputSelector&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;OutputSelector&gt;CategoryArray.Category.CategoryLevel&lt;/OutputSelector&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;DetailLevel&gt;ReturnAll&lt;/DetailLevel&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/GetCategoriesRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CALL-NAME","getCategories")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-SITEID", me.siteID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-APP-NAME", me.appID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CERT-NAME", me.certID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-COMPATIBILITY-LEVEL", "709"  )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine>if me.certID="567e6875-8f5d-4efe-a140-707a6af207ff" then</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.sandbox.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>sRes=CallResponse</SourceLine>
   <SourceLine>fCat=New FolderItem(inputFilename,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>If fCat &lt;&gt; Nil then</SourceLine>
   <SourceLine>stream=TextOutputStream.Create(fCat)</SourceLine>
   <SourceLine>stream.Write(sRes)</SourceLine>
   <SourceLine>Stream.Close</SourceLine>
   <SourceLine>End if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>Stream.Close</SourceLine>
   <SourceLine>sRes=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Return sRes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>CategoryParent as Integer, CategorySiteID as Integer, inputFilename as String, CategoryParent2 as Int64 = 0, CategoryParent3 as Int64 = 0,CategoryParent4 as Int64 = 0</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetCategorySpecifics</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1972463615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetCategorySpecifics(Category as Integer, ItemSpecifics as string = "Style", inputFilename as String) As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, sRes as string, jobID as string, FileID as String </SourceLine>
   <SourceLine>Dim fCat as FolderItem</SourceLine>
   <SourceLine>Dim stream as TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;GetCategorySpecificsRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;RequesterCredentials&gt;&lt;eBayAuthToken&gt;"+me.userToken+"&lt;/eBayAuthToken&gt;&lt;/RequesterCredentials&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'request = request+EndOfLine+"&lt;CategorySpecificsFileInfo&gt;True&lt;/CategorySpecificsFileInfo&gt;"</SourceLine>
   <SourceLine>'request = request+EndOfLine+"&lt;CategorySpecific&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"     &lt;CategoryID&gt;" + str(Category) + "&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>'request = request+EndOfLine+"&lt;/CategorySpecific&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;ExcludeRelationships&gt;True&lt;/ExcludeRelationships&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/GetCategorySpecificsRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CALL-NAME","GetCategorySpecifics")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-SITEID", me.siteID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-APP-NAME", me.appID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CERT-NAME", me.certID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-COMPATIBILITY-LEVEL", "709"  )</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.certID="567e6875-8f5d-4efe-a140-707a6af207ff" then</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.sandbox.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>if XMLDoc.xql("//Ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>sRes=CallResponse</SourceLine>
   <SourceLine>fCat=New FolderItem(inputFilename,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>If fCat &lt;&gt; Nil then</SourceLine>
   <SourceLine>stream=TextOutputStream.Create(fCat)</SourceLine>
   <SourceLine>stream.Write(sRes)</SourceLine>
   <SourceLine>Stream.Close</SourceLine>
   <SourceLine>End if</SourceLine>
   <SourceLine>Return sRes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Category as Integer, ItemSpecifics as string = "Style", inputFilename as String</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GeteBayDetails</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>886824959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GeteBayDetails(Dettaglio as String="ShippingServiceDetails") As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, sRes as string</SourceLine>
   <SourceLine>Dim fCat as FolderItem</SourceLine>
   <SourceLine>Dim stream as TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;GeteBayDetailsRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;RequesterCredentials&gt;&lt;eBayAuthToken&gt;"+me.userToken+"&lt;/eBayAuthToken&gt;&lt;/RequesterCredentials&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;DetailName&gt;"+dettaglio+"&lt;/DetailName&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/GeteBayDetailsRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CALL-NAME","GeteBayDetails")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-SITEID", me.siteID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-APP-NAME", me.appID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CERT-NAME", me.certID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-COMPATIBILITY-LEVEL", "709"  )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>sRes=CallResponse</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>sRes=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Return sRes</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Dettaglio as String="ShippingServiceDetails"</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>ActiveInventoryReport</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1114454015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ActiveInventoryReport() As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, sRes as string</SourceLine>
   <SourceLine>Dim fCat as FolderItem</SourceLine>
   <SourceLine>Dim stream as TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;ActiveInventoryReportRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;RequesterCredentials&gt;&lt;eBayAuthToken&gt;"+me.userToken+"&lt;/eBayAuthToken&gt;&lt;/RequesterCredentials&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/ActiveInventoryReportRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CALL-NAME","ActiveInventoryReport")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-SITEID", me.siteID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-APP-NAME", me.appID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CERT-NAME", me.certID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-COMPATIBILITY-LEVEL", "709"  )</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine>if me.certID="567e6875-8f5d-4efe-a140-707a6af207ff" then</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.sandbox.ebay.com/ws/api.dll",900)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.ebay.com/ws/api.dll",900)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>sRes=CallResponse</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>sRes=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Return sRes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetCategoryFeatures</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>738156543</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetCategoryFeatures(Category as Integer) As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, sRes as string, jobID as string, FileID as String </SourceLine>
   <SourceLine>Dim fCat as FolderItem</SourceLine>
   <SourceLine>Dim stream as TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;GetCategoryFeaturesRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;RequesterCredentials&gt;&lt;eBayAuthToken&gt;"+me.userToken+"&lt;/eBayAuthToken&gt;&lt;/RequesterCredentials&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;CategoryID&gt;" + str(Category) + "&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;FeatureID&gt;EANEnabled&lt;/FeatureID&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;FeatureID&gt;UPCEnabled&lt;/FeatureID&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;FeatureID&gt;BrandMPNIdentifierEnabled&lt;/FeatureID&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/GetCategoryFeaturesRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CALL-NAME","GetCategoryFeatures")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-SITEID", me.siteID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-APP-NAME", me.appID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CERT-NAME", me.certID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-COMPATIBILITY-LEVEL", "709"  )</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.certID="567e6875-8f5d-4efe-a140-707a6af207ff" then</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.sandbox.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>if XMLDoc.xql("//Ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>sRes=CallResponse</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return sRes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Category as Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>GetSellingManagerSoldListings</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>728616959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetSellingManagerSoldListings() As String</SourceLine>
   <SourceLine>Dim request as string = "&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>Dim http as new HTTPSecureSocket</SourceLine>
   <SourceLine>Dim XMLDoc as XmlDocument = new XmlDocument</SourceLine>
   <SourceLine>Dim CallResponse as String, sRes as string, jobID as string, FileID as String </SourceLine>
   <SourceLine>Dim fCat as FolderItem</SourceLine>
   <SourceLine>Dim stream as TextOutputStream</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+_</SourceLine>
   <SourceLine>"&lt;GetSellingManagerSoldListingsRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;RequesterCredentials&gt;&lt;eBayAuthToken&gt;"+me.userToken+"&lt;/eBayAuthToken&gt;&lt;/RequesterCredentials&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;Archived&gt;True&lt;/Archived&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;Pagination&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;EntriesPerPage&gt;2&lt;/EntriesPerPage&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;PageNumber&gt;1&lt;/PageNumber&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/Pagination&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;SaleDateRange&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;TimeFrom&gt;2015-11-01T01:01:01.768Z&lt;/TimeFrom&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;TimeTo&gt;2015-11-09T01:01:01.768Z&lt;/TimeTo&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/SaleDateRange&gt;"</SourceLine>
   <SourceLine>request = request+EndOfLine+"&lt;/GetSellingManagerSoldListingsRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>http.Secure=true</SourceLine>
   <SourceLine>http.ConnectionType=SSLSocket.TLSv1</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CALL-NAME","GetSellingManagerSoldListings")</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-SITEID", me.siteID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-APP-NAME", me.appID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-CERT-NAME", me.certID  )</SourceLine>
   <SourceLine>http.SetRequestHeader("X-EBAY-API-COMPATIBILITY-LEVEL", "945"  )</SourceLine>
   <SourceLine>http.SetPostContent(request, "text/xml")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if me.certID="567e6875-8f5d-4efe-a140-707a6af207ff" then</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.sandbox.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>CallResponse = http.post("https://api.ebay.com/ws/api.dll",600)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>XMLDoc.LoadXml(CallResponse)</SourceLine>
   <SourceLine>if XMLDoc.xql("//Ack").item(0).firstchild.value = "Success" then</SourceLine>
   <SourceLine>sRes=CallResponse</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return sRes</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Property>
  <ItemName>devID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>645019647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>devID As String = "a0e46157-61ca-41b3-a989-7a51972ac97b"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>devID As String = "a0e46157-61ca-41b3-a989-7a51972ac97b"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>appID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2122420223</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>appID As String = "Supporto-6c30-40e9-87bf-5b6ccbb0e669"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>appID As String = "Supporto-6c30-40e9-87bf-5b6ccbb0e669"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>certID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>775643135</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>certID As String = "303cb306-8468-45d4-b7bf-fa5c37cd8af5"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>certID As String = "303cb306-8468-45d4-b7bf-fa5c37cd8af5"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>userToken</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1225498623</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>userToken As String = "AgAAAA**AQAAAA**aAAAAA**xc+fWg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wGkoGgD5eCpgmdj6x9nY+seQ**gRYBAA**AAMAAA**DF3FN7fJr0EwT6NoJGZ+HxEi0S46vSbtSqYToWgquQ/C3LFZPIEzFUQ4ngW/0C7iwx9F+624fEVX3JmKiMF/wwJdmk046N9U+V5QmY3LMp2SqRnajnPQFAWEsrSbf544PUu5O0LMx7XXSx22pHM0qR0gqvd48t4QHSvnuR1SS1FVZDu2PV1mW/WKbX2zpLvUH3As1vFo/XHCmTDfesiqsTsBsR5CkoMNVRHE+wJuDM3KF/5RPv85ytWM8DdZ+JPCkypEP+xRLzEcWprwjeS8c2QXDjxX1YCVpnn/SavuWpGI5+bu/2GMYIEoS3B45+zJZgjuj5XQO37InGBYqL0T99UAxxkUHmZSHQVPYjvj805EircjhaWNY1w/4ey1t0QA833g0NqjaIYP9gzH6sgIsFTwTCcsEkY6ox5nQrZ1YHtZJjCwb4SfupOYb70KNjunZ4BhPkpU29EieqRh7R4EuWLjiSGdWE2DUySZ1ythx6jjZ1o592iQZslMnRXmLEvztjppXeHUaItGXffobxQx0rNkfOqYRmYt8TdJZisuFnSmtYd9HENlAvVPQj8pRy7zF6Q0hz2RmnVmuBLA6IvMRrr4PdpqbS7hUINk2tb5+u3knrFpRX/7wSRLwI9v1tCdPOfuCZYL/GZ8CER+yOzBQFMt4cCbWyRxX6v8it3gc4sWS3q7zB4t16zmTOepZlE0l51WaJgzhLNS2Xzva4WT+Yi4dKuf/CaiEZTz7bCrJilsYQy9rDIuRkdFafalQArS"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>userToken As String = "AgAAAA**AQAAAA**aAAAAA**xc+fWg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wGkoGgD5eCpgmdj6x9nY+seQ**gRYBAA**AAMAAA**DF3FN7fJr0EwT6NoJGZ+HxEi0S46vSbtSqYToWgquQ/C3LFZPIEzFUQ4ngW/0C7iwx9F+624fEVX3JmKiMF/wwJdmk046N9U+V5QmY3LMp2SqRnajnPQFAWEsrSbf544PUu5O0LMx7XXSx22pHM0qR0gqvd48t4QHSvnuR1SS1FVZDu2PV1mW/WKbX2zpLvUH3As1vFo/XHCmTDfesiqsTsBsR5CkoMNVRHE+wJuDM3KF/5RPv85ytWM8DdZ+JPCkypEP+xRLzEcWprwjeS8c2QXDjxX1YCVpnn/SavuWpGI5+bu/2GMYIEoS3B45+zJZgjuj5XQO37InGBYqL0T99UAxxkUHmZSHQVPYjvj805EircjhaWNY1w/4ey1t0QA833g0NqjaIYP9gzH6sgIsFTwTCcsEkY6ox5nQrZ1YHtZJjCwb4SfupOYb70KNjunZ4BhPkpU29EieqRh7R4EuWLjiSGdWE2DUySZ1ythx6jjZ1o592iQZslMnRXmLEvztjppXeHUaItGXffobxQx0rNkfOqYRmYt8TdJZisuFnSmtYd9HENlAvVPQj8pRy7zF6Q0hz2RmnVmuBLA6IvMRrr4PdpqbS7hUINk2tb5+u3knrFpRX/7wSRLwI9v1tCdPOfuCZYL/GZ8CER+yOzBQFMt4cCbWyRxX6v8it3gc4sWS3q7zB4t16zmTOepZlE0l51WaJgzhLNS2Xzva4WT+Yi4dKuf/CaiEZTz7bCrJilsYQy9rDIuRkdFafalQArS"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>BulkDataExchangeService</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>858365951</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>BulkDataExchangeService As String = "https://webservices.ebay.com/BulkDataExchangeService"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>BulkDataExchangeService As String = "https://webservices.ebay.com/BulkDataExchangeService"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>FileTransferService</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>945403903</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>FileTransferService As String = "https://storage.ebay.com/FileTransferService"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>FileTransferService As String = "https://storage.ebay.com/FileTransferService"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>siteID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>917915647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>siteID As String = "101"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>siteID As String = "101"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>appID_mmac</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1436059647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>appID_mmac As String = "MMAC62820-c34d-4e6b-a81a-ba42a9b7fad"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>appID_mmac As String = "MMAC62820-c34d-4e6b-a81a-ba42a9b7fad"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>certID_mmac</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1903781887</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>certID_mmac As String = "b67318fd-cf30-4bad-bc78-e6a52c4651d0"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>certID_mmac As String = "b67318fd-cf30-4bad-bc78-e6a52c4651d0"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>devID_mmac</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1635921919</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>devID_mmac As String = "d553aea2-e113-440c-a178-a5b12511870b"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>devID_mmac As String = "d553aea2-e113-440c-a178-a5b12511870b"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>useMMAC</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2114967551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>useMMAC As Boolean = true</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>useMMAC As Boolean = true</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>devID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>a0e46157-61ca-41b3-a989-7a51972ac97b</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>appID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>Supporto-3dc4-4ad4-89f2-8468927eb119</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>certID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>567e6875-8f5d-4efe-a140-707a6af207ff</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>userToken</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>AgAAAA**AQAAAA**aAAAAA**PoKDTQ**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wBl4GoDJWDpAydj6x9nY+seQ**gRYBAA**AAMAAA**w5n/pe6A1rsY3tkymSHkTjEAdO9WTLfqygunHMch4A+CBHdjx5mxyP7honGqRIqSpR2WXKEO0GL6EHRL7/CgG2Fb/Sx+TOLAY4YXMyP3ePSgRqrbxDXgfcKdfkORcL6fYSjtCTPullW2yfcVAN2553grqLZGzNHSyhYSaOiO5Fs5YrnD0SJoyViDFcsBMDj+0PfmfLJNkJtWqiz19GpSaHTmNTd2+yZcf2ysDf2Sf1tLcHnhHdTMfNDeOSuvtakz2zosps2BZPNxAJ+Op2d943R4uFeVx47v1EMug9+dQ8xkaXWxxB1evTcg3eBUJJtFCuC8NaV0IlkhtmhpdQkLjbMfVKkvUQOB2bDIle0MqkfHzoOfOknC6ezsH8XUGrTF7anbArnDTQLp+gsQgjrjlTT/1zQOWlw/uTvrzRNR4AKRND3zrIKacVRPnEPyNXigEvelTIo7lhdzB/+d9yFwlFhQyfxrosAB/red9Z1ljC03zQusCB4v1fppF8kEizY9/AH5cWAXL+5upOc8kdr+/vZHRaoHN6n8kiZtZYaFr87aSmVqkOF2BZt1tjPbwA4lUapOypXTyqCRHekghC1vFw2C4loQvm99VTMsaWSucT/uhdDzKzaRuRh3q2+XSe6N+s5U+3iu4qkdsDWUDvc/dv8rK4492J4ewxtVbWlV/kH6eTlamXhiqGcDe2lb/XV3GqWas5KDokR6E277ZOSS0QB5adeIOgLBh7tak/XDW0/dBvsapMIf/Lo6mDeX7tRh</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>BulkDataExchangeService</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>https://webservices.ebay.com/BulkDataExchangeService</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FileTransferService</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>https://storage.ebay.com/FileTransferService</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>siteID</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>101</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>appID_mmac</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>MMAC62820-c34d-4e6b-a81a-ba42a9b7fad</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>certID_mmac</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>b67318fd-cf30-4bad-bc78-e6a52c4651d0</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>devID_mmac</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>d553aea2-e113-440c-a178-a5b12511870b</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>useMMAC</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>false</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="Module" ID="1513147821">
 <ObjName>ModuloPrincipale</ObjName>
 <ObjContainerID>0</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Attributes></Attributes>
 <Method>
  <ItemName>RandStr</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>252604415</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RandStr(ranlen As Integer,nmb As Boolean,lcs As Boolean,ucs As Boolean,smb As Boolean) As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim source As String = ""</SourceLine>
   <SourceLine>if nmb = True then source = source + "1234567890"</SourceLine>
   <SourceLine>if lcs = True then source = source + "abcdefghijklmnopqrstuvwxyz"</SourceLine>
   <SourceLine>if ucs = True then source = source + "ABCDEFGHIJKLMNOPQRSTUVWXYZ"</SourceLine>
   <SourceLine>if smb = True then source = source + "|@#~$%()=^*+[]{}-_"</SourceLine>
   <SourceLine>Dim chrstr,num As String</SourceLine>
   <SourceLine>Dim NumChar,start,i As Integer</SourceLine>
   <SourceLine>NumChar = source.Len( )</SourceLine>
   <SourceLine>for i = 1 To ranlen</SourceLine>
   <SourceLine>Dim r as New Random</SourceLine>
   <SourceLine>start = r.InRange( 1, NumChar )</SourceLine>
   <SourceLine>num = source.Mid( start, 1 )</SourceLine>
   <SourceLine>chrstr = chrstr + num</SourceLine>
   <SourceLine>Next</SourceLine>
   <SourceLine>return chrstr</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ranlen As Integer,nmb As Boolean,lcs As Boolean,ucs As Boolean,smb As Boolean</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>AddEbayOrders</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1963565055</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function AddEbayOrders(nomeFile as String) As Boolean</SourceLine>
   <SourceLine>Dim XDoc as XmlDocument</SourceLine>
   <SourceLine>Dim f as FolderItem</SourceLine>
   <SourceLine>Dim sXml as String</SourceLine>
   <SourceLine>Dim i as Integer, x as Integer</SourceLine>
   <SourceLine>dim sOrderID as String, BuyerUserID as string, OrderCreationTime as String, sOrderLineID as String, sSKU as String, ListingSiteID as String, ItemID as String</SourceLine>
   <SourceLine>dim   Quantity as string, SellingManagerSaleRecordID as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'DATABASE</SourceLine>
   <SourceLine>dim db as ODBCDatabase</SourceLine>
   <SourceLine>db = new ODBCDatabase</SourceLine>
   <SourceLine>dim sql as String</SourceLine>
   <SourceLine>db.DataSource="LINKY"</SourceLine>
   <SourceLine>db.UserName = "supportodigitale"</SourceLine>
   <SourceLine>db.Password = "6DigitaleSulzano"</SourceLine>
   <SourceLine>db.DatabaseName = "LINKY"</SourceLine>
   <SourceLine>If db.Connect then</SourceLine>
   <SourceLine>//proceed with database operations</SourceLine>
   <SourceLine>'MsgBox "The connection ok"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>MsgBox "Connessione al db fallita"</SourceLine>
   <SourceLine>Exit</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>f=New FolderItem(nomeFile,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>Dim t As TextInputStream = TextInputStream.Open(f)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>t.Encoding = Encodings.UTF8</SourceLine>
   <SourceLine>sXml=t.ReadAll</SourceLine>
   <SourceLine>Finally</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DebugLog "Eseguo il parsing del file"</SourceLine>
   <SourceLine>XDoc=new XmlDocument</SourceLine>
   <SourceLine>XDoc.LoadXml(sXml)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim RequestList As XmlNodeList = XDoc.Xql("//OrderDetails")</SourceLine>
   <SourceLine>Dim ItemList As XmlNodeList </SourceLine>
   <SourceLine>Dim NodeList as XmlNode, Item as XmlNode</SourceLine>
   <SourceLine>Dim OrderItemDetails as XmlNode</SourceLine>
   <SourceLine>'dim BulkDataExchangeResponses as XmlNode = XDoc.FirstChild</SourceLine>
   <SourceLine>'dim SoldReport as XmlNode = BulkDataExchangeResponses.FirstChild</SourceLine>
   <SourceLine>'dim OrderDetails as XmlNode = SoldReport.FirstChild</SourceLine>
   <SourceLine>'dim OrderLines as XmlNode  = OrderDetails.FirstChild</SourceLine>
   <SourceLine>'dim OrderLine as XmlNode  = OrderLines.FirstChild</SourceLine>
   <SourceLine>dim PaymentMethod as string, OrderTotalCost as string</SourceLine>
   <SourceLine>dim BuyerFirstName as string, BuyerLastName as string, BuyerEmail as string, BuyerPhone as string, ShipRecipientName as string</SourceLine>
   <SourceLine>dim ShipStreet1 as string, ShipStreet2 as string, ShipCityName as string, ShipStateOrProvince as string, ShipPostalCode as string, ShipCountryName as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for i = 0 to RequestList.Length-1</SourceLine>
   <SourceLine>NodeList  = RequestList.Item(i)</SourceLine>
   <SourceLine>sOrderID = NodeList.Xql("OrderID").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>BuyerUserID = NodeList.Xql("BuyerUserID").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>OrderCreationTime = NodeList.Xql("OrderCreationTime").Item(0).FirstChild.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>PaymentMethod=NodeList.Xql("PaymentMethod").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>PaymentMethod=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>OrderTotalCost=NodeList.Xql("OrderTotalCost").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>OrderTotalCost=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>BuyerFirstName=NodeList.Xql("BuyerFirstName").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>BuyerFirstName=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>BuyerLastName=NodeList.Xql("BuyerLastName").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>BuyerLastName=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>BuyerEmail=NodeList.Xql("BuyerEmail").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>BuyerEmail=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>BuyerPhone=NodeList.Xql("BuyerPhone").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>BuyerPhone=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>ShipRecipientName=NodeList.Xql("ShipRecipientName").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>ShipRecipientName=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>ShipStreet1=NodeList.Xql("ShipStreet1").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>ShipStreet1=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>ShipStreet2=NodeList.Xql("ShipStreet2").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>ShipStreet2=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>ShipCityName=NodeList.Xql("ShipCityName").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>ShipCityName=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>ShipStateOrProvince=NodeList.Xql("ShipStateOrProvince").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>ShipStateOrProvince=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>ShipPostalCode=NodeList.Xql("ShipPostalCode").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>ShipPostalCode=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>ShipCountryName=NodeList.Xql("ShipCountryName").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>ShipCountryName=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>OrderItemDetails=NodeList.Xql("OrderItemDetails").Item(0)</SourceLine>
   <SourceLine>ItemList = OrderItemDetails.Xql("OrderLineItem")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for x =  0 to ItemList.Length-1</SourceLine>
   <SourceLine>Item  = ItemList.Item(x)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sOrderLineID=Item.Xql("OrderLineItemID").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Quantity = Item.Xql("QuantitySold").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>'SalePrice = Item.Xql("SalePrice").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>ListingSiteID = Item.Xql("ListingSiteID").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>ItemID = Item.Xql("ItemID").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>SellingManagerSaleRecordID=Item.Xql("SellingManagerSaleRecordID").Item(0).FirstChild.Value</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>sSKU=Item.Xql("SKU").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>sSKU=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>sql = "INSERT INTO linky_EbayOrders (OrderLineID, BuyerUserID, SiteID, OrderCreationDate, ItemID, " _</SourceLine>
   <SourceLine>+   "SKU, SellingManagerSaleRecordID, Quantity, Price,BuyerFirstName , BuyerLastName , BuyerEmail , BuyerPhone , ShipRecipientName,ShipStreet1 , ShipStreet2 , ShipCityName , ShipStateOrProvince , ShipPostalCode , ShipCountryName,PaymentMethod ) values ('" _</SourceLine>
   <SourceLine>   +sOrderLineID+"','"+BuyerUserID+"','"+ListingSiteID+"','"+OrderCreationTime+"',"+str(ItemID)+",'" _</SourceLine>
   <SourceLine>   +sSKU+"','"+SellingManagerSaleRecordID+"',"+Quantity+","+OrderTotalCost _</SourceLine>
   <SourceLine>   +",'"+  BuyerFirstName +"','"+ BuyerLastName +"','"+   BuyerEmail   +"','"+   BuyerPhone   +"','"+   ShipRecipientName   +"','"+    ShipStreet1  +"','"+   ShipStreet2  +"','"+  _</SourceLine>
   <SourceLine>     ShipCityName  +"','"+   ShipStateOrProvince +"','"+   ShipPostalCode +"','"+ ShipCountryName + "','"+_</SourceLine>
   <SourceLine>      PaymentMethod + "')"</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>db.SQLExecute(sql)</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>sql = "UPDATE linky_EbayOrders set Price = " + OrderTotalCost + ", PaymentMethod='" + PaymentMethod + "' WHERE OrderLineID = '" + sOrderLineID + "'"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>db.SQLExecute(sql)</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>DebugLog "Errore inserimento record " + sOrderLineID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>db.Close</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>nomeFile as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>DebugLog</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1993932799</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub DebugLog(testo as String)</SourceLine>
   <SourceLine>MainWindow.resField.Text = testo</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>testo as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileCloseItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>799444991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileCloseItem(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine>Dim fcsv as FolderItem,  fzip as FolderItem,site as String</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream</SourceLine>
   <SourceLine>Dim riga as String, campi() as string </SourceLine>
   <SourceLine>Dim outputFile as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String</SourceLine>
   <SourceLine>Dim CR as string= Encodings.ASCII.Chr(13) + Encodings.ASCII.Chr(10)</SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fcsv = Nil or fcsv.Length = 0  then </SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Header&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/Header&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>Elseif siteid="205" then</SourceLine>
   <SourceLine>site="IE"</SourceLine>
   <SourceLine>nazione="ie"</SourceLine>
   <SourceLine>Elseif siteid="193" then</SourceLine>
   <SourceLine>site="CH"</SourceLine>
   <SourceLine>nazione="ch"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, "|")</SourceLine>
   <SourceLine>if ubound(campi) &gt; 1 then</SourceLine>
   <SourceLine>SKU = campi(0) +site</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;EndFixedPriceItemRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;SKU&gt;&lt;![CDATA["+SKU+"]]&gt;&lt;/SKU&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;EndingReason&gt;NotAvailable&lt;/EndingReason&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/EndFixedPriceItemRequest&gt;"</SourceLine>
   <SourceLine>t.WriteLine outputFile</SourceLine>
   <SourceLine>outputFile = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = CR+"&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'t.Write ConvertEncoding(outputFile, Encodings.WindowsANSI)</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'ConvertEncoding(TextField1.text, Encodings.WindowsANSI)</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as new ZipArchive</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>'MsgBox "Error: " + root.LastErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetEbayOrders</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1810208767</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetEbayOrders()</SourceLine>
   <SourceLine>Dim jobIds as String</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.startDownloadJobRequest("SoldReport" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>MainWindow.tmJobOrder.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmJobOrder.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>MainWindow.pbGetOrders.Enabled=False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CloseEbayItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1497663487</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CloseEbayItems()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay_stock_it_0.csv"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine>sFile="ebay_stock_de_0.csv"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="146"</SourceLine>
   <SourceLine>sFile="ebay_stock_nl_0.csv"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>sFile="ebay_stock_fr_0.csv"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>sFile="ebay_stock_es_0.csv"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>sFile="ebay_stock_us_0.csv"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>sFile="ebay_stock_aus_0.csv"</SourceLine>
   <SourceLine>case "IE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="205"</SourceLine>
   <SourceLine>sFile="ebay_stock_ie_0.csv"</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="193"</SourceLine>
   <SourceLine>sFile="ebay_stock_ch_0.csv"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="3"</SourceLine>
   <SourceLine>sFile="ebay_stock_uk_0.csv"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.Title="CLOSE " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if CheckFileSize(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if GenFileCloseItem(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>CheckJobBeforeStart "EndFixedPriceItem"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("EndFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "CLOSE","CREATED"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if  cEbay.AbortJob(jobId) then</SourceLine>
   <SourceLine>linkyjobLOG jobid, "CLOSE","ABORT",true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UpdateEbayStockItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2044715007</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub UpdateEbayStockItems()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String, howgo as Boolean</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay_stock.csv"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine>sFile="ebay_stock_de.csv"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="146"</SourceLine>
   <SourceLine>sFile="ebay_stock_nl.csv"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>sFile="ebay_stock_fr.csv"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>sFile="ebay_stock_es.csv"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>sFile="ebay_stock_us.csv"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>sFile="ebay_stock_aus.csv"</SourceLine>
   <SourceLine>case "IE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="205"</SourceLine>
   <SourceLine>sFile="ebay_stock_ie.csv"</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="193"</SourceLine>
   <SourceLine>sFile="ebay_stock_ch.csv"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="3"</SourceLine>
   <SourceLine>sFile="ebay_stock_uk.csv"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.Title="UPDATE " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>if CheckFileSize(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if GenFileUpdateStockItem(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "upd_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>CheckJobBeforeStart "ReviseInventoryStatus"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("ReviseInventoryStatus" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "UPDATE","CREATED"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator + "upd_data.zip")</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "UPDATE","ABORT"</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine> howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileUpdateStockItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>408066047</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileUpdateStockItem(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine>Dim fcsv as FolderItem,  fzip as FolderItem</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream, site as string</SourceLine>
   <SourceLine>Dim riga as String, campi() as string</SourceLine>
   <SourceLine>Dim outputFile as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String</SourceLine>
   <SourceLine>Dim CR as string= Encodings.ASCII.Chr(13) + Encodings.ASCII.Chr(10)</SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fcsv = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Header&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/Header&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>Elseif siteid="205" then</SourceLine>
   <SourceLine>site="IE"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>Elseif siteid="193" then</SourceLine>
   <SourceLine>site="CH"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, "|")</SourceLine>
   <SourceLine>if ubound(campi)&gt;1 then</SourceLine>
   <SourceLine>SKU = campi(0) + site</SourceLine>
   <SourceLine>if instr(sku,EndOfLine)&gt;0 then</SourceLine>
   <SourceLine>'MsgBox "test"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;ReviseInventoryStatusRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"   &lt;InventoryStatus&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"       &lt;SKU&gt;&lt;![CDATA["+SKU+"]]&gt;&lt;/SKU&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"       &lt;Quantity&gt;"+campi(3)+"&lt;/Quantity&gt;"</SourceLine>
   <SourceLine>Dim prezzofinale as double</SourceLine>
   <SourceLine>if campi(2)&lt;&gt;"0" then</SourceLine>
   <SourceLine>if siteid ="101" then 'Italy</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='EUR'&gt;"+replace(campi(2),",",".")+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="77" then 'Germany</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='EUR'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="146" then 'Nederlands</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='EUR'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="71" then 'Nederlands</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='EUR'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="186" then 'Spain</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='EUR'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="0" then 'US</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='USD'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="15" then 'AUS</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='AUD'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="205" then 'IE</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='EUR'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="193" then 'CH</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",","."))</SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='CHF'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if campi(4) = "PNEUMATICI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CERCHI" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "MOTO" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>elseif campi(4) = "CAPS" then</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(2),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='GBP'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"   &lt;/InventoryStatus&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/ReviseInventoryStatusRequest&gt;"</SourceLine>
   <SourceLine>t.WriteLine outputFile</SourceLine>
   <SourceLine>outputFile = ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = "&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as new ZipArchive</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "upd_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "upd_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>'MsgBox "Error: " + root.LastErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1694619647</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine> Dim fcsv as FolderItem,  site as string</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream, prezzofinale as double</SourceLine>
   <SourceLine>Dim riga as String, campi() as string, speseSped as string</SourceLine>
   <SourceLine>Dim outputFile as string, shippingservice as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String, valuta as String</SourceLine>
   <SourceLine>Dim quantity as Integer, eancode as string</SourceLine>
   <SourceLine>Dim cr as String</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fcsv = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;&lt;BulkDataExchangeRequests&gt;&lt;Header&gt;&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;&lt;Version&gt;965&lt;/Version&gt;&lt;/Header&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>valuta="USD"</SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>valuta="AUD"</SourceLine>
   <SourceLine>Elseif siteid="205" then</SourceLine>
   <SourceLine>site="IE"</SourceLine>
   <SourceLine>nazione="ie"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="193" then</SourceLine>
   <SourceLine>site="CH"</SourceLine>
   <SourceLine>nazione="ch"</SourceLine>
   <SourceLine>valuta="CHF"</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>valuta="GBP"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Nome file: " + outputFileName</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, "|")</SourceLine>
   <SourceLine>SKU = campi(0) +site</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ubound(campi) &gt;23 then</SourceLine>
   <SourceLine>if campi(23)="DEL" then</SourceLine>
   <SourceLine>shippingservice= "IT_OtherCourier3To5Days"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if ubound(campi) &gt;24 then ' inserita gestione  EAN</SourceLine>
   <SourceLine>if campi(24)&lt;&gt;"" then</SourceLine>
   <SourceLine>if siteid="15" then 'AUS</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;UPC&gt;"+ campi(24) +"&lt;/UPC&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;"+ campi(24) +"&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if siteid="15" then '----------------------------------------------------------AUS</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;UPC&gt;Does not apply&lt;/UPC&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (siteid="205" or siteid="3" or siteid="100") then '------------------------- IE_UK_US</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;Does Not Apply&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (siteid="193" or siteid="77") then '-----------------------------------------CH_DE</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;nicht zutreffend&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (siteid="146") then '----------------------------------------------------------NL</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;Niet van toepassing&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (siteid="186") then '----------------------------------------------------------ES</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;No aplicable&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (siteid="101") then '----------------------------------------------------------IT</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;Non applicabile&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif (siteid="71") then '-----------------------------------------------------------FR</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"+cr+"&lt;EAN&gt;Non applicable&lt;/EAN&gt;"+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>quantity = val(replace(campi(8),",","."))</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;AddFixedPriceItemRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;DetailLevel&gt;ReturnAll&lt;/DetailLevel&gt;&lt;ErrorLanguage&gt;us_US&lt;/ErrorLanguage&gt;&lt;Version&gt;965&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Item&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+" &lt;Country&gt;"+campi(4)+"&lt;/Country&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Country&gt;IT&lt;/Country&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Currency&gt;"+valuta+"&lt;/Currency&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Site&gt;"+campi(3)+"&lt;/Site&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Quantity&gt;"+str(quantity)+"&lt;/Quantity&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;SKU&gt;&lt;![CDATA["+SKU+"]]&gt;&lt;/SKU&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;InventoryTrackingMethod&gt;SKU&lt;/InventoryTrackingMethod&gt;&lt;HitCounter&gt;BasicStyle&lt;/HitCounter&gt;&lt;ListingDuration&gt;GTC&lt;/ListingDuration&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ListingType&gt;"+campi(5)+"&lt;/ListingType&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if siteid ="101" then 'Italy</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ShipToLocations&gt;IT&lt;/ShipToLocations&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+replace(campi(7),",",".")+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="77" then 'Germany</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "RUOTINI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CAPS" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="146" then 'Nederlands</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "RUOTINI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CAPS" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="186" then 'SPAIN</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "RUOTINI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CAPS" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid="100" then 'US</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="70"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="50"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "RUOTINI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CAPS" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid="15" then 'AUS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="70"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="50"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "RUOTINI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CAPS" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid="205" then 'IE</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid="193" then 'IE</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>else 'UK</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "RUOTINI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CAPS" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ShippingTermsInDescription&gt;True&lt;/ShippingTermsInDescription&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Title&gt;&lt;![CDATA["+campi(1)+"]]&gt;&lt;/Title&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Description&gt;&lt;![CDATA["+campi(17)+"]]&gt;&lt;/Description&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then 'Italy</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;&lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;&lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS)&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;Per ulteriori informazioni contattateci a: lufelappi@libero.it&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;&lt;ShippingServiceOptions&gt;&lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;" + shippingservice +"&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;&lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_IT_parts(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="77" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- GERMANY ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_DE_part(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="146" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- NEDERLANDS ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_NL_part(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="71" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- FRANCE ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_FR_part(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="186" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- SPAIN ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_ES_part(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="100" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- UNITED STATES ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="50"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[For more informations please contact us at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;ExpeditedShippingFromOutsideUS&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;CA&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Months_1&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"    then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or campi(23)="PIR" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Manufacturer&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>'if ubound(campi) =25 then ' inserita gestione  EAN</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(25)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>'else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(24)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(24) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Diameter]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre Width]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Aspect Ratio]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Load index]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Speed Rating]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(19) = "N" or campi(19) = "X" or campi(19) = "I" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Type]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Winter&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>elseif campi(19) = "4" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Type]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All seasons&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else </SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Type]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Summer&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(20) &lt;&gt; "" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[External rolling noise (dB; class)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(20) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre fuel efficiency (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(22) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Wet grip performance (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(21) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Rim Diameter]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Stud Diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Bold Pattern&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"x"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Material&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Alloy&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Offset&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Number of studs&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if partner="MAK" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Car&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(20)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+left(campi(21),40)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Year&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+replace(campi(22),"/","-")+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Car&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All cars&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "RUOTINI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ Ruotini_UK(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Characteristics&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tyre diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tyre width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Schoulder&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Mesh Thickness]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Mark&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Marks&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine>elseif siteid="15" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- AUSTRALIA ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;AutoPay&gt;true&lt;/AutoPay&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[For more informations please contact us at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;AU_ExpeditedDeliveryFromOutsideAU&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;AU_ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;CA&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;Asia&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;JP&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;Americas&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;NZ&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;HK&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;Europe&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;BR&lt;/ExcludeShipToLocation&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;IT&lt;/ExcludeShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_AUS_parts(campi)</SourceLine>
   <SourceLine>elseif siteid="205" then 'IE </SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_IE_part(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid ="193" then 'CH</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_CH_part(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else 'UK</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- UNITED KINGDOM ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;&lt;CategoryID&gt;"+trim(campi(2))+"&lt;/CategoryID&gt;&lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+GenFileAddItem_UK_part(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/Item&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/AddFixedPriceItemRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>outputFile = ""</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ZipfileAdd(fxml) then</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>AddEbayItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1346576383</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddEbayItems()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String, howgo as Boolean</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay.csv"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine>sFile="ebay_de.csv"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="146"</SourceLine>
   <SourceLine>sFile="ebay_nl.csv"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>sFile="ebay_fr.csv"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>sFile="ebay_es.csv"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>sFile="ebay_us.csv"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>sFile="ebay_aus.csv"</SourceLine>
   <SourceLine>case "IE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="205"</SourceLine>
   <SourceLine>sFile="ebay_ie.csv"</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="193"</SourceLine>
   <SourceLine>sFile="ebay_ch.csv"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="3"</SourceLine>
   <SourceLine>sFile="ebay_uk.csv"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.Title="ADDEBAY " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if CheckFileSize(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile) then</SourceLine>
   <SourceLine>if GenFileAddItem(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "File creato !"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>CheckJobBeforeStart "AddFixedPriceItem"</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("AddFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","CREATED"</SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip")</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","ABORT", true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","ABORT", true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>sendEmail</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>85911551</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub sendEmail(strMessage as string, strSubject as string)</SourceLine>
   <SourceLine>Dim mailer As New   SMTPSecureSocket</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mailer.Secure = TRUE</SourceLine>
   <SourceLine>mailer.ConnectionType = 2</SourceLine>
   <SourceLine>mailer.Address = "smtp.gmail.com"</SourceLine>
   <SourceLine>mailer.Port = 465</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mailer.Username = "alesconti@gmail.com"</SourceLine>
   <SourceLine>mailer.Password = "alBrioschi70"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Prepare email message</SourceLine>
   <SourceLine>Dim mailMessage As EmailMessage</SourceLine>
   <SourceLine>mailMessage = New EmailMessage</SourceLine>
   <SourceLine>mailMessage.AddRecipient("alesconti@gmail.com")</SourceLine>
   <SourceLine>Dim AddressFrom As String = "alesconti@gmail.com"</SourceLine>
   <SourceLine>mailMessage.FromAddress = AddressFrom</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mailMessage.Headers.AppendHeader "Return-path", "alesconti@gmail.com"</SourceLine>
   <SourceLine>mailMessage.Headers.AppendHeader "Reply-To", "alesconti@gmail.com"</SourceLine>
   <SourceLine>mailMessage.Headers.AppendHeader "X-Mailer", "PNEUS SERVER"</SourceLine>
   <SourceLine>mailMessage.Headers.AppendHeader "X-Accept-Language", "en"</SourceLine>
   <SourceLine>mailMessage.Headers.AppendHeader "Content-Type", "text/plain; charset=us-ascii"</SourceLine>
   <SourceLine>mailMessage.Headers.AppendHeader "Content-Transfer-Encoding", "7bit"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mailMessage.Subject = strSubject</SourceLine>
   <SourceLine>mailMessage.BodyPlainText = strMessage</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mailer.Messages.Append mailMessage</SourceLine>
   <SourceLine>mailer.SendMail</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>strMessage as string, strSubject as string</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetEbayDetails</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>125194239</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetEbayDetails(Detail as String="ShippingServiceDetails")</SourceLine>
   <SourceLine>Dim jobIds as String</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>case "IE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="205"</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="193"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.GeteBayDetails("ShippingServiceDetails")</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Detail as String="ShippingServiceDetails"</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>linkyJobLOG</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1901074431</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub linkyJobLOG(jobID as string, action as string, status as string, upd as Boolean=false)</SourceLine>
   <SourceLine>dim db as ODBCDatabase, sql as String</SourceLine>
   <SourceLine>Dim today As New Date</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>db = new ODBCDatabase</SourceLine>
   <SourceLine>db.DataSource="LINKY"</SourceLine>
   <SourceLine>db.UserName = "supportodigitale"</SourceLine>
   <SourceLine>db.Password = "6DigitaleSulzano"</SourceLine>
   <SourceLine>db.DatabaseName = "LINKY"</SourceLine>
   <SourceLine>If db.Connect then</SourceLine>
   <SourceLine>SQL="INSERT INTO LINKY_JOBLOG VALUES('" + jobID + "','" + action  + "','" + linkyAction+ "','" + str(today)  + "','" + status + "','" + linkyCountry + "')"</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>db.SQLExecute(sql)</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>db.Close</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>jobID as string, action as string, status as string, upd as Boolean=false</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>RefreshActiveReports</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>553594879</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function RefreshActiveReports(nomeFile as String) As Boolean</SourceLine>
   <SourceLine>Dim XDoc as XmlDocument</SourceLine>
   <SourceLine>Dim f as FolderItem</SourceLine>
   <SourceLine>Dim sXml as String</SourceLine>
   <SourceLine>Dim i as Integer</SourceLine>
   <SourceLine>dim  sOrderLineID as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim db as ODBCDatabase</SourceLine>
   <SourceLine>dim sql as String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>db = new ODBCDatabase</SourceLine>
   <SourceLine>db.DataSource="LINKY"</SourceLine>
   <SourceLine>db.UserName = "supportodigitale"</SourceLine>
   <SourceLine>db.Password = "6DigitaleSulzano"</SourceLine>
   <SourceLine>db.DatabaseName = "LINKY"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If db.Connect then</SourceLine>
   <SourceLine>//proceed with database operations</SourceLine>
   <SourceLine>'MsgBox "The connection ok"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>MsgBox "Connessione al db fallita"</SourceLine>
   <SourceLine>Exit</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>f=New FolderItem(nomeFile,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>Dim t As TextInputStream = TextInputStream.Open(f)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Try</SourceLine>
   <SourceLine>t.Encoding = Encodings.UTF8</SourceLine>
   <SourceLine>sXml=t.ReadAll</SourceLine>
   <SourceLine>Finally</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine>End Try</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sql = "truncate table LINKY_EBAY_REPORT"</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>db.SQLExecute(sql)</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>DebugLog "Errore eliminazione record " + sOrderLineID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DebugLog "Eseguo il parsing del file"</SourceLine>
   <SourceLine>XDoc=new XmlDocument</SourceLine>
   <SourceLine>XDoc.LoadXml(sXml)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' ESEGUO PRIMO PASSAGGIO PER AGGIORNAMENTO ARTICOLI SENZA VARIANTI</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'dim BulkDataExchangeResponses as XmlNode = XDoc.FirstChild</SourceLine>
   <SourceLine>Dim RequestList As XmlNodeList = XDoc.Xql("//SKUDetails")</SourceLine>
   <SourceLine>Dim NodeList as XmlNode</SourceLine>
   <SourceLine>dim SKU as string, QTY AS string</SourceLine>
   <SourceLine>QTY="0"</SourceLine>
   <SourceLine>for i = 0 to RequestList.Length-1</SourceLine>
   <SourceLine>NodeList  = RequestList.Item(i)</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>SKU=NodeList.Xql("SKU").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>QTY=NodeList.Xql("Quantity").Item(0).FirstChild.Value</SourceLine>
   <SourceLine>sql = "INSERT INTO LINKY_EBAY_REPORT(ebaysku,qty) values ('"+SKU+"'," + qty  + ")"</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>db.SQLExecute(sql)</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>DebugLog "Errore inserimento record " + sOrderLineID</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Exception</SourceLine>
   <SourceLine>QTY="0"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>db.Close</SourceLine>
   <SourceLine>Return True</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>nomeFile as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GetActiveInventory</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1764259839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetActiveInventory()</SourceLine>
   <SourceLine>Dim jobIds as String</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "AT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "CA"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>cEbay.FileTransferService=  SandBoxgetFileTransferService</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.startDownloadJobRequest("ActiveInventoryReport" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>MainWindow.tmJobActiveReport.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmJobActiveReport.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>'MainWindow.pbGetOrders.Enabled=False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetCategoryFeatures</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>209121279</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetCategoryFeatures(categoryid as integer)</SourceLine>
   <SourceLine>Dim jobIds as String</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "AT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "CA"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.GetCategoryFeatures(categoryid)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>categoryid as integer</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GetEbaySoldListing</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>263958527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub GetEbaySoldListing()</SourceLine>
   <SourceLine>Dim jobIds as String</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "AT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "CA"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.GetSellingManagerSoldListings</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CloseEbaySpecial</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1107496959</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CloseEbaySpecial()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay.csv"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine>sFile="ebay_DE.csv"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="146"</SourceLine>
   <SourceLine>sFile="ebay_nl.csv"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>sFile="ebay_fr.csv"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>sFile="ebay_es.csv"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>sFile="ebay_us.csv"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>sFile="ebay_aus.csv"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="3"</SourceLine>
   <SourceLine>sFile="ebay_uk.csv"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.Title="CLOSE " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if GenFileCloseSpecial(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("EndFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "CLOSE","CREATED"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if  cEbay.AbortJob(jobId) then</SourceLine>
   <SourceLine>linkyjobLOG jobid, "CLOSE","ABORT",true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileCloseSpecial</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2081454079</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileCloseSpecial(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine>Dim fcsv as FolderItem,  fzip as FolderItem,site as String</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream</SourceLine>
   <SourceLine>Dim riga as String, campi() as string </SourceLine>
   <SourceLine>Dim outputFile as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String</SourceLine>
   <SourceLine>Dim CR as string= Encodings.ASCII.Chr(13) + Encodings.ASCII.Chr(10)</SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fcsv = Nil or fcsv.Length = 0  then </SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Header&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/Header&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>Elseif siteid="ie" then</SourceLine>
   <SourceLine>site="IE"</SourceLine>
   <SourceLine>nazione="ie"</SourceLine>
   <SourceLine>Elseif siteid="ch" then</SourceLine>
   <SourceLine>site="CH"</SourceLine>
   <SourceLine>nazione="ch"</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, "|")</SourceLine>
   <SourceLine>'if ubound(campi) &gt; 1 then</SourceLine>
   <SourceLine>SKU = campi(0) + site</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;EndFixedPriceItemRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;SKU&gt;"+SKU+"&lt;/SKU&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;EndingReason&gt;OtherListingError&lt;/EndingReason&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/EndFixedPriceItemRequest&gt;"</SourceLine>
   <SourceLine>t.WriteLine outputFile</SourceLine>
   <SourceLine>outputFile = ""</SourceLine>
   <SourceLine>'end</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = CR+"&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'t.Write ConvertEncoding(outputFile, Encodings.WindowsANSI)</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'ConvertEncoding(TextField1.text, Encodings.WindowsANSI)</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as new ZipArchive</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>'MsgBox "Error: " + root.LastErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>AddEbayItemsApp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>2081519615</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddEbayItemsApp()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String, howgo as Boolean</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay_app_it.csv"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine>sFile="ebay_app_de.csv"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="146"</SourceLine>
   <SourceLine>sFile="ebay_nl.csv"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>sFile="ebay_fr.csv"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>sFile="ebay_app_es.csv"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>sFile="ebay_us.csv"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>sFile="ebay_aus.csv"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="3"</SourceLine>
   <SourceLine>sFile="ebay_app_uk.csv"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if CheckFileSize(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.Title="ADDEBAY " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if GenFileAddItemApp(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "File creato !"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>CheckJobBeforeStart "AddFixedPriceItem"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("AddFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","CREATED"</SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip")</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","ABORT", true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","ABORT", true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItemApp</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1774051327</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItemApp(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine>Dim fcsv as FolderItem,  fzip as FolderItem, site as string</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream</SourceLine>
   <SourceLine>Dim riga as String, campi() as string, speseSped as string</SourceLine>
   <SourceLine>Dim outputFile as string, shippingservice as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String, valuta as String</SourceLine>
   <SourceLine>Dim quantity as Integer, eancode as string, app() as string</SourceLine>
   <SourceLine>Dim CarMake() as string,model() as string,syear() as string,variant() as string,bodystyle() as string,type() as string,engine() as string</SourceLine>
   <SourceLine>Dim cr as String</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fcsv = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Header&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Version&gt;965&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/Header&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>valuta="USD"</SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>valuta="AUD"</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>valuta="GBP"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Nome file: " + outputFileName</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, "^")</SourceLine>
   <SourceLine>SKU = campi(0) +site</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if ubound(campi) =23 then</SourceLine>
   <SourceLine>if campi(23)="DEL" then</SourceLine>
   <SourceLine>shippingservice= "IT_OtherCourier3To5Days"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"</SourceLine>
   <SourceLine>eancode = eancode+cr+"&lt;EAN&gt;"+ campi(21) +"&lt;/EAN&gt;"</SourceLine>
   <SourceLine>eancode = eancode+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>quantity = val(replace(campi(8),",","."))</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;AddFixedPriceItemRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;DetailLevel&gt;ReturnAll&lt;/DetailLevel&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ErrorLanguage&gt;us_US&lt;/ErrorLanguage&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Version&gt;965&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Item&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Country&gt;IT&lt;/Country&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+" &lt;Country&gt;"+campi(4)+"&lt;/Country&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Currency&gt;"+valuta+"&lt;/Currency&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Site&gt;"+campi(3)+"&lt;/Site&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Quantity&gt;"+str(quantity)+"&lt;/Quantity&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;SKU&gt;"+SKU+"&lt;/SKU&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;InventoryTrackingMethod&gt;SKU&lt;/InventoryTrackingMethod&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;HitCounter&gt;BasicStyle&lt;/HitCounter&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ListingDuration&gt;GTC&lt;/ListingDuration&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ListingType&gt;"+campi(5)+"&lt;/ListingType&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+" &lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>Dim prezzofinale as double</SourceLine>
   <SourceLine>if siteid ="101" then 'Italy</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ShipToLocations&gt;IT&lt;/ShipToLocations&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+replace(campi(7),",",".")+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="77" then 'Germany</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="146" then 'Nederlands</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid ="186" then 'SPAIN</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid="100" then 'US</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="70"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="50"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>elseif siteid="15" then 'AUS</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="70"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="50"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",","."))</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>else 'UK</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>prezzofinale=val(replace(campi(7),",",".")) </SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+str(prezzofinale)+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ShippingTermsInDescription&gt;True&lt;/ShippingTermsInDescription&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Title&gt;&lt;![CDATA["+campi(1)+"]]&gt;&lt;/Title&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Description&gt;&lt;![CDATA["+campi(17)+"]]&gt;&lt;/Description&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then 'Italy</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+IT_app(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="77" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- GERMANY ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>outputFile = outputFile+cr+DE_app(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="146" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- NEDERLANDS ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Neem voor meer informatie contact met ons op: lufelappi@libero.it - For other information contact me at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;NL_ExpressDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;" + speseSped +"&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;NL_ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;BE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;AT&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;DE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;IT&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund.Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Reifenhersteller&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Inches]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Bandbreedte]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Sectie band]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Load index]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Snelheidsindex]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(19) = "N" or campi(19) = "X" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Luchtbanden]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Winterbanden&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(20) &lt;&gt; "" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Rumorosità di rotolamento (dB; classe)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(20) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Consumo di carburante (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(22) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Aderenza sul bagnato (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(21) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Inches]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;R "+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Inter azen&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Offset&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Velgbreedte&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Aantal gaten&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if partner="MAK" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Fabrikant&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(20)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Modellen&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+left(campi(21),40)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Baujahr&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+replace(campi(22),"/","-")+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Fabrikant&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Alle Merken&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Modellen&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Alle Modellen&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Functies&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Band radius&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Spoorbreedte&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Schouder&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Dikte mesh]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Fabrikant&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Alle Marken&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Modelle&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Alle Modellen&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine>elseif siteid="71" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- FRANCE ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="15"</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Pour plus d'informations s'il vous plaît contactez-nous au: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;FR_StandardDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;" + speseSped +"&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;FR_ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;BE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;DE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;&lt;![CDATA[Si vous n'êtes pas satisfait, retourner l'article pour un remboursement. Dans les 14 jours ouvrables. L'article peut être retourné, mais le produit ne doit pas être monté et doit être dans le même état ​​qu'il a été livré. Pour les coûts et les détails, contactez le vendeur]]&gt;&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Marque&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Diamètre Intérieur]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Largeur]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Ratio Flanc/Semelle]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Indice de charge]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Indice de vitesse]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(19) = "N" or campi(19) = "X" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Saison]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Hiver&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'External rolling noise (dB; class)</SourceLine>
   <SourceLine>'Tyre fuel efficiency (A-G)</SourceLine>
   <SourceLine>'Wet grip performance (A-G)</SourceLine>
   <SourceLine>if campi(20) &lt;&gt; "" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[External rolling noise (dB; class)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(20) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre fuel efficiency (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(22) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Wet grip performance (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(21) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Fabricant de la jante&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Diamètre de la jante]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Entraxe Diamètre&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Deport (ET)&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Largeur de la jante&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Entraxe (Nombre de trous)&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if partner="MAK" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Marque compatible&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(20)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+left(campi(21),40)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Year&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+replace(campi(22),"/","-")+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Make&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Makes&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Characteristics&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Diamètre Intérieur&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Largeur&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Ratio Flanc/Semelle&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Croisillons]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Marque compatible&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Marks&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine>elseif siteid="186" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- SPAIN ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="9"</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="13"</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="9"</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="9"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="9"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Para más información por favor contacte con nosotros en: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;ES_StandardDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;" + speseSped +"&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;Si usted no está satisfecho, devuelva el artículo para el reembolso. Dentro de los 14 días hábiles. El artículo se puede volver, pero el producto no se debe montar y debe estar en las mismas condiciones en que fue entregado. Para los costos y detalles, póngase en contacto con el vendedor&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"    then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Fabricante&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Marca&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Díametro]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Ancho]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Altura]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Indice de carga]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Indice de velocidad]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(19) = "N" or campi(19) = "X" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Temporada]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;INVIERNO&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'External rolling noise (dB; class)</SourceLine>
   <SourceLine>'Tyre fuel efficiency (A-G)</SourceLine>
   <SourceLine>'Wet grip performance (A-G)</SourceLine>
   <SourceLine>if campi(20) &lt;&gt; "" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Ruido de rodadura exterior (dB; clase)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(20) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Eficiencia de los neumáticos (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(22) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Adherencia en superficie mojada (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(21) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Ancho]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;R "+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Díametro&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Offset&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Anclaje&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tornillos&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if partner="MAK" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand coche&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(20)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Modelo&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+left(campi(21),40)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Año&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+replace(campi(22),"/","-")+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand coche&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Makes&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Modelo&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Carateristicas&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Diámetro&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Anchura&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Altura&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Mesh Thickness]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Mark&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Marks&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="100" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- UNITED STATES ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="50"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[For more informations please contact us at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;ExpeditedShippingFromOutsideUS&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;CA&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"    then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Manufacturer&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Diameter]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Rim size]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+campi(9)+"""]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre Width]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Aspect Ratio]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Load index]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Speed Rating]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(19) = "N" or campi(19) = "X" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Type]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Winter&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'External rolling noise (dB; class)</SourceLine>
   <SourceLine>'Tyre fuel efficiency (A-G)</SourceLine>
   <SourceLine>'Wet grip performance (A-G)</SourceLine>
   <SourceLine>if campi(20) &lt;&gt; "" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[External rolling noise (dB; class)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(20) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre fuel efficiency (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(22) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Wet grip performance (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(21) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Rim Diameter]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Stud Diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Bold Pattern&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"x"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Material&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Alloy&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Offset&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Number of studs&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if partner="MAK" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Car&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(20)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+left(campi(21),40)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Year&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+replace(campi(22),"/","-")+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Car&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All cars&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Characteristics&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tyre diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tyre width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Schoulder&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Mesh Thickness]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Mark&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Marks&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>elseif siteid="15" then</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- AUSTRALIA ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' Determino le spese di spedizione</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "MOTO" then</SourceLine>
   <SourceLine>speseSped="80"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>speseSped="50"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[For more informations please contact us at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;AU_ExpeditedDeliveryFromOutsideAU&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;AU_ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;CA&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;Asia&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;JP&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;Americas&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;NZ&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;HK&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;Europe&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;BR&lt;/ExcludeShipToLocation&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;IT&lt;/ExcludeShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Months_1&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Manufacturer&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(21)&lt;&gt;"" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;EAN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"         &lt;Value&gt;"+ campi(21) +"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if campi(16) = "PNEUMATICI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Diameter]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre Width]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Aspect Ratio]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Load index]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Speed Rating]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if campi(19) = "N" or campi(19) = "X" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Type]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Winter&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'External rolling noise (dB; class)</SourceLine>
   <SourceLine>'Tyre fuel efficiency (A-G)</SourceLine>
   <SourceLine>'Wet grip performance (A-G)</SourceLine>
   <SourceLine>if campi(20) &lt;&gt; "" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[External rolling noise (dB; class)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(20) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Tyre fuel efficiency (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(22) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Wet grip performance (A-G)]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;" +  campi(21) + "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "CERCHI" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Rim Diameter]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Stud Diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Bold Pattern&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"x"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Material&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;Alloy&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Offset&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(14)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Number of studs&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(13)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>if partner="MAK" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Car&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(20)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+left(campi(21),40)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Year&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+replace(campi(22),"/","-")+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Car&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All cars&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>elseif campi(16) = "ACCOPPIATE MOTO" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Characteristics&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>elseif campi(16) = "CATENE DA NEVE" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tyre diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tyre width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Schoulder&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA[Mesh Thickness]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(12)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Mark&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Marks&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;All Models&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else 'UK</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine>' ---------- UNITED KINGDOM ---------------------</SourceLine>
   <SourceLine>' ----------------------------------------</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+UK_app(campi)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/Item&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/AddFixedPriceItemRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>outputFile = ""</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as new ZipArchive</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Errore ZIP" + zar.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Errore inserimento file ZIP: " + zar.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'MsgBox "Error: " + root.LastErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ZipfileAdd</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1701269503</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function ZipfileAdd(fxml as FolderItem) As Boolean</SourceLine>
   <SourceLine>dim zar as new ZipArchive,fzip as FolderItem</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Errore ZIP" + zar.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Errore inserimento file ZIP: " + zar.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>fxml as FolderItem</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>Ruotini_UK</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>294459391</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Ruotini_UK(campi() as String) As string</SourceLine>
   <SourceLine>dim outputFile as string =""</SourceLine>
   <SourceLine>Dim cr as String</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Rim Diameter&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(9)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Tyre width&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(11)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Aspect ratio&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(10)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(19)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Model&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+left(campi(12),40)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Year&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+replace(campi(13),"/","-")+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as String</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>CheckJobBeforeStart</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1697210367</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CheckJobBeforeStart(JobType as String)</SourceLine>
   <SourceLine>Dim jEbay as new Ebay, jobIds as XmlDocument</SourceLine>
   <SourceLine>dim testjob as string,sRes as string</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="101"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="101"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="101"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="71"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="186"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="0"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="15"</SourceLine>
   <SourceLine>case "IE"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="205"</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="193"</SourceLine>
   <SourceLine>case "UK"</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="3"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>jEbay.userToken=IT_Token</SourceLine>
   <SourceLine>jEbay.siteID="101"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>//testjob = jEbay.createUploadJobRequest("AddFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = jEbay.GetJobs("",true,JobType)</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>sRes=jobIds.xql("//jobId").item(0).firstchild.value</SourceLine>
   <SourceLine>if jEbay.AbortJob(sRes) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>exception</SourceLine>
   <SourceLine>sRes=""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'MainWindow.txtJobId.Text=jobIds.ToString</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>JobType as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>CheckFileSize</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>567468031</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function CheckFileSize(Filename as String) As Boolean</SourceLine>
   <SourceLine>'Esegue un controllo sulla dimensione del file</SourceLine>
   <SourceLine>'Se il file è vuoto chiude la procedura</SourceLine>
   <SourceLine>Dim filesize As Double</SourceLine>
   <SourceLine>dim fcsv as FolderItem</SourceLine>
   <SourceLine>fcsv=New FolderItem(FileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fcsv = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>filesize = fcsv.Length</SourceLine>
   <SourceLine>if filesize&gt;0 then</SourceLine>
   <SourceLine>Return true</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>Filename as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_IT_parts</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>698116095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_IT_parts(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;&lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;&lt;VATPercent&gt;22.00&lt;/VATPercent&gt;&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;L'oggetto può essere restituito, ma il prodotto non deve essere montato e deve essere nelle stesse condizioni in cui è partito. Per costi e dettagli, contattare il venditore&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;SellerProfiles&gt;&lt;SellerReturnProfile&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "    &lt;ReturnProfileID&gt;137756522021&lt;/ReturnProfileID&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;/SellerReturnProfile&gt;&lt;/SellerProfiles&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if campi(23)="TY" or campi(23)="PIR" or campi(23)="FIN" or campi(23)="CG" or campi(23)="ETT" or campi(23)="UNI" or campi(23)="BER" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL" or  campi(23)="ALC" or campi(23)="MAK"  or campi(23)="TG" or campi(23)="DEL" then     </SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif campi(23)="OZ" or campi(23)="TEK" or campi(23)="MOM"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;&lt;Name&gt;Quantità&lt;/Name&gt;&lt;Value&gt;1&lt;/Value&gt;&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>AddEbayItemsTPMS</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1805588479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub AddEbayItemsTPMS()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String, howgo as Boolean</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay.csv"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine>sFile="ebay_de.csv"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="146"</SourceLine>
   <SourceLine>sFile="ebay_nl.csv"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>sFile="ebay_fr.csv"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>sFile="ebay_es.csv"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>sFile="ebay_us.csv"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>sFile="ebay_aus.csv"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="3"</SourceLine>
   <SourceLine>sFile="ebay_uk.csv"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if CheckFileSize(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.Title="ADDEBAY TPMS " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if GenFileAddItemTPMS(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "File creato !"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>CheckJobBeforeStart "AddFixedPriceItem"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("AddFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","CREATED"</SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip")</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","ABORT", true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "ADD","ABORT", true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItemTPMS</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>382967807</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItemTPMS(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine>Dim fcsv as FolderItem,  fzip as FolderItem, site as string</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream</SourceLine>
   <SourceLine>Dim riga as String, campi() as string, speseSped as string</SourceLine>
   <SourceLine>Dim outputFile as string, shippingservice as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String, valuta as String</SourceLine>
   <SourceLine>Dim quantity as Integer, eancode as string, app() as string</SourceLine>
   <SourceLine>Dim CarMake() as string,model() as string,syear() as string,variant() as string,bodystyle() as string,type() as string,engine() as string</SourceLine>
   <SourceLine>Dim cr as String</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fcsv = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Header&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Version&gt;965&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/Header&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>valuta="EUR"</SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>valuta="USD"</SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>valuta="AUD"</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>valuta="GBP"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Nome file: " + outputFileName</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, "|")</SourceLine>
   <SourceLine>SKU = campi(0) +site</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if ubound(campi) =23 then</SourceLine>
   <SourceLine>if campi(23)="DEL" then</SourceLine>
   <SourceLine>shippingservice= "IT_OtherCourier3To5Days"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>shippingservice= "IT_ExpressCourier"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if ubound(campi) =24 then ' inserita gestione  EAN</SourceLine>
   <SourceLine>if campi(24)&lt;&gt;"" then</SourceLine>
   <SourceLine>eancode = "&lt;ProductListingDetails&gt;"</SourceLine>
   <SourceLine>eancode = eancode+cr+"&lt;EAN&gt;Non applicabile&lt;/EAN&gt;"</SourceLine>
   <SourceLine>eancode = eancode+cr+"&lt;/ProductListingDetails&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>eancode= ""</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>quantity = val(replace(campi(8),",","."))</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;AddFixedPriceItemRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;DetailLevel&gt;ReturnAll&lt;/DetailLevel&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ErrorLanguage&gt;us_US&lt;/ErrorLanguage&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Version&gt;965&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;Item&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+" &lt;Country&gt;"+campi(4)+"&lt;/Country&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Country&gt;IT&lt;/Country&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Currency&gt;"+valuta+"&lt;/Currency&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Site&gt;"+campi(3)+"&lt;/Site&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Quantity&gt;"+str(quantity)+"&lt;/Quantity&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;SKU&gt;"+SKU+"&lt;/SKU&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;InventoryTrackingMethod&gt;SKU&lt;/InventoryTrackingMethod&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;HitCounter&gt;BasicStyle&lt;/HitCounter&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ListingDuration&gt;GTC&lt;/ListingDuration&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ListingType&gt;"+campi(5)+"&lt;/ListingType&gt;"</SourceLine>
   <SourceLine>Dim prezzofinale as double</SourceLine>
   <SourceLine>if siteid ="101" then 'Italy</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ShipToLocations&gt;IT&lt;/ShipToLocations&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;StartPrice currencyID='"+valuta+"'&gt;"+replace(campi(7),",",".")+"&lt;/StartPrice&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;ShippingTermsInDescription&gt;True&lt;/ShippingTermsInDescription&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Title&gt;&lt;![CDATA["+campi(1)+"]]&gt;&lt;/Title&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Description&gt;&lt;![CDATA["+campi(9)+"]]&gt;&lt;/Description&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then 'Italy</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PayPal&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentMethods&gt;PaymentSeeDescription&lt;/PaymentMethods&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PayPalEmailAddress&gt;info@pneus-center.it&lt;/PayPalEmailAddress&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;CategoryID&gt;"+campi(2)+"&lt;/CategoryID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;/PrimaryCategory&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ eancode 'INSERITA GESTIONE EAN</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS)&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;Per ulteriori informazioni contattateci a: lufelappi@libero.it&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;" + shippingservice +"&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;L'oggetto può essere restituito, ma il prodotto non deve essere montato e deve essere nelle stesse condizioni in cui è partito. Per costi e dettagli, contattare il venditore&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Marca&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Brand&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+campi(6)+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;MPN&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;"+mpn+"&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Modello auto&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+campi(12)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Marca auto&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+campi(11)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Numero sensori&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;4&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine>' UTILIZZO KTYPE</SourceLine>
   <SourceLine>app=split(campi(14), ",")</SourceLine>
   <SourceLine>for idd as Integer = 0 to ubound(app)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ " &lt;Compatibility&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Name&gt;KType&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;Value&gt;"+trim(app(idd))+ "&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/Compatibility&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "  &lt;/ItemCompatibilityList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(10)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/Item&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/AddFixedPriceItemRequest&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>outputFile = ""</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as new ZipArchive</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "new_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Errore ZIP" + zar.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>MsgBox "Errore inserimento file ZIP: " + zar.ErrorMessage</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'MsgBox "Error: " + root.LastErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_IE_part</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>160860159</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_IE_part(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[For more informations please contact us at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;IE_ExpressDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;IE_SellersStandardRateInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;Europe&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;EuropeanUnion&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;RU&lt;/ExcludeShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;IS&lt;/ExcludeShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or campi(23)="PIR" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_CH_part</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>533182463</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_CH_part(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Für weitere Informationen kontaktieren Sie mich: lufelappi@libero.it - For other information contact me at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;CH_ExpressDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 1 month. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller.&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" or campi(23)="PIR"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_AUS_parts</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1474639871</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_AUS_parts(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or campi(23)="PIR" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_DE_part</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>926212095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_DE_part(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Für weitere Informationen kontaktieren Sie mich: lufelappi@libero.it - For other information contact me at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;DE_ExpressversandAusDemAusland&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;" + speseSped +"&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;DE_ExpressInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;AT&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 1 month. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller.&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Months_1&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" or campi(23)="PIR"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Anzahl der Einheiten&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_ES_part</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1958404095</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_ES_part(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Para más información por favor contacte con nosotros en: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;ES_StandardDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;Si usted no está satisfecho, devuelva el artículo para el reembolso. Dentro de los 14 días hábiles. El artículo se puede volver, pero el producto no se debe montar y debe estar en las mismas condiciones en que fue entregado. Para los costos y detalles, póngase en contacto con el vendedor&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"    then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or campi(23)="PIR" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_FR_part</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1274601471</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_FR_part(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Pour plus d'informations s'il vous plaît contactez-nous au: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;FR_StandardDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;FR_ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;BE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;DE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;&lt;![CDATA[Si vous n'êtes pas satisfait, retourner l'article pour un remboursement. Dans les 14 jours ouvrables. L'article peut être retourné, mais le produit ne doit pas être monté et doit être dans le même état ​​qu'il a été livré. Pour les coûts et les détails, contactez le vendeur]]&gt;&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or campi(23)="PIR" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_NL_part</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>918947839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_NL_part(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[Neem voor meer informatie contact met ons op: lufelappi@libero.it - For other information contact me at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;NL_ExpressDeliveryFromAbroad&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;NL_ExpeditedInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;BE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;AT&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;DE&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;IT&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund.Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if campi(23)="TY" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="FEL"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or campi(23)="PIR" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL"  then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileAddItem_UK_part</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1977966591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileAddItem_UK_part(campi() as string) As string</SourceLine>
   <SourceLine>dim outputFile as string</SourceLine>
   <SourceLine>Dim cr as String, specifiche() as string, valspecifiche() as string, idx as integer = 0</SourceLine>
   <SourceLine>cr=endofline.Windows</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>dim mpn as string</SourceLine>
   <SourceLine>if  instr(campi(0),"_")&gt;0  then</SourceLine>
   <SourceLine>mpn =mid( campi(0),instr(campi(0),"_") + 1)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>mpn = campi(0)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;Location&gt;PNEUS-CENTER, Marone (BS), Italy&lt;/Location&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"&lt;ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+" &lt;PaymentInstructions&gt;&lt;![CDATA[For more informations please contact us at: lufelappi@libero.it]]&gt;&lt;/PaymentInstructions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"  &lt;ShippingType&gt;Flat&lt;/ShippingType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServicePriority&gt;1&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingService&gt;UK_ExpeditedShippingFromOutside&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"     &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"    &lt;/ShippingServiceOptions&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingService&gt;UK_CollectInPersonInternational&lt;/ShippingService&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServiceCost&gt;0&lt;/ShippingServiceCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShippingServicePriority&gt;2&lt;/ShippingServicePriority&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;FreeShipping&gt;true&lt;/FreeShipping&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+"            &lt;ShippingServiceAdditionalCost&gt;0&lt;/ShippingServiceAdditionalCost&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "            &lt;ShipToLocation&gt;EuropeanUnion&lt;/ShipToLocation&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/InternationalShippingServiceOption&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;MT&lt;/ExcludeShipToLocation&gt;" 'Escluso spedizione a MALTA</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExcludeShipToLocation&gt;CY&lt;/ExcludeShipToLocation&gt;" 'Escluso spedizione a CIPRO</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ShippingDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;BusinessSeller&gt;1&lt;/BusinessSeller&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;VATPercent&gt;22.00&lt;/VATPercent&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/VATDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine>if  campi(23)="FEL"   then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;1&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>elseif  campi(23)="OZ" or campi(23)="PIR" or  campi(23)="ALC" or campi(23)="MAK" or campi(23)="TEK" or campi(23)="MOM" or campi(23)="CG" or campi(23)="TG" or campi(23)="DEL" then</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;DispatchTimeMax&gt;2&lt;/DispatchTimeMax&gt;"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>'outputFile = outputFile+cr+ "&lt;GetItFast&gt;1&lt;/GetItFast&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ConditionID&gt;1000&lt;/ConditionID&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>specifiche = Split(campi(27),"§")</SourceLine>
   <SourceLine>valspecifiche = Split(campi(28),"§")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;Unit Quantity&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;1&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>for idx = 0 to ubound(specifiche)</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;NameValueList&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Name&gt;&lt;![CDATA["+specifiche(idx)+"]]&gt;&lt;/Name&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "       &lt;Value&gt;&lt;![CDATA["+valspecifiche(idx)+"]]&gt;&lt;/Value&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;/NameValueList&gt;"</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/ItemSpecifics&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;PictureDetails&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;ExternalPictureURL&gt;"+campi(18)+"&lt;/ExternalPictureURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryURL&gt;"+campi(18)+"&lt;/GalleryURL&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "    &lt;GalleryType&gt;Gallery&lt;/GalleryType&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+cr+ "&lt;/PictureDetails&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return outputFile</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>campi() as string</ItemParams>
  <ItemResult>string</ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileCloseByItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>535797759</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileCloseByItem(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine>Dim fcsv as FolderItem,  fzip as FolderItem,site as String</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream</SourceLine>
   <SourceLine>Dim riga as String, campi() as string </SourceLine>
   <SourceLine>Dim outputFile as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String</SourceLine>
   <SourceLine>Dim CR as string= Encodings.ASCII.Chr(13) + Encodings.ASCII.Chr(10)</SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fcsv = Nil or fcsv.Length = 0  then </SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Header&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/Header&gt;"</SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>Elseif siteid="205" then</SourceLine>
   <SourceLine>site="IE"</SourceLine>
   <SourceLine>nazione="ie"</SourceLine>
   <SourceLine>Elseif siteid="193" then</SourceLine>
   <SourceLine>site="CH"</SourceLine>
   <SourceLine>nazione="ch"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, "|")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>SKU = campi(0) </SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;EndFixedPriceItemRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;Version&gt;663&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;ItemID&gt;"+SKU+"&lt;/ItemID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;EndingReason&gt;NotAvailable&lt;/EndingReason&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+CR+"&lt;/EndFixedPriceItemRequest&gt;"</SourceLine>
   <SourceLine>t.WriteLine outputFile</SourceLine>
   <SourceLine>outputFile = ""</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = CR+"&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'t.Write ConvertEncoding(outputFile, Encodings.WindowsANSI)</SourceLine>
   <SourceLine>t.Write outputFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'ConvertEncoding(TextField1.text, Encodings.WindowsANSI)</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim zar as new ZipArchive</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>'MsgBox "Error: " + root.LastErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>'MsgBox "Error: " + zar.ErrorMessage</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>CloseEbayByItems</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>57139199</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub CloseEbayByItems()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay_0.csv"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>mainWindow.Title="CLOSE " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if CheckFileSize(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if GenFileCloseByItem(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>CheckJobBeforeStart "EndFixedPriceItem"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("EndFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "CLOSE","CREATED"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator + "close_data.zip")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if  cEbay.AbortJob(jobId) then</SourceLine>
   <SourceLine>linkyjobLOG jobid, "CLOSE","ABORT",true</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>GenFileReviseReturn</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1847203839</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GenFileReviseReturn(inputFileName as String, outputFileName as String, siteid as String) As Boolean</SourceLine>
   <SourceLine>Dim fcsv as FolderItem,  fzip as FolderItem</SourceLine>
   <SourceLine>Dim fxml as FolderItem,  t as TextOutputStream</SourceLine>
   <SourceLine>Dim righe as TextInputStream</SourceLine>
   <SourceLine>Dim riga as String, campi() as string</SourceLine>
   <SourceLine>Dim outputFile as string, bloccoReso as string</SourceLine>
   <SourceLine>Dim SKU as string, nazione as String, ItemID as string, site as string</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fcsv=New FolderItem(inputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fcsv = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>righe= fcsv.OpenAsTextFile</SourceLine>
   <SourceLine>if righe = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>elseif righe.EOF then</SourceLine>
   <SourceLine>righe.Close</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.resField.Text="Inizio generazione file xml"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile ="&lt;?xml version=""1.0"" encoding=""utf-8"" ?&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;Header&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;SiteID&gt;" + siteid + "&lt;/SiteID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;Version&gt;949&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;/Header&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if siteid ="101" then</SourceLine>
   <SourceLine>nazione="it"</SourceLine>
   <SourceLine>site="IT"</SourceLine>
   <SourceLine>bloccoReso  = "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;L'oggetto può essere restituito, ma il prodotto non deve essere montato e deve essere nelle stesse condizioni in cui è partito. Per costi e dettagli, contattare il venditore&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="77" then</SourceLine>
   <SourceLine>site="DE"</SourceLine>
   <SourceLine>nazione="de"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 1 month. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller.&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Months_1&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="146" then</SourceLine>
   <SourceLine>site="NL"</SourceLine>
   <SourceLine>nazione="nl"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;If you are not satisfied, return the item for refund.Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="71" then</SourceLine>
   <SourceLine>site="FR"</SourceLine>
   <SourceLine>nazione="fr"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;&lt;![CDATA[Si vous n'êtes pas satisfait, retourner l'article pour un remboursement. Dans les 14 jours ouvrables. L'article peut être retourné, mais le produit ne doit pas être monté et doit être dans le même état ​​qu'il a été livré. Pour les coûts et les détails, contactez le vendeur]]&gt;&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="186" then</SourceLine>
   <SourceLine>site="ES"</SourceLine>
   <SourceLine>nazione="es"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;Si usted no está satisfecho, devuelva el artículo para el reembolso. Dentro de los 14 días hábiles. El artículo se puede volver, pero el producto no se debe montar y debe estar en las mismas condiciones en que fue entregado. Para los costos y detalles, póngase en contacto con el vendedor&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="100" then</SourceLine>
   <SourceLine>site="US"</SourceLine>
   <SourceLine>nazione="us"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="15" then</SourceLine>
   <SourceLine>site="AUS"</SourceLine>
   <SourceLine>nazione="aus"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="205" then</SourceLine>
   <SourceLine>site="IE"</SourceLine>
   <SourceLine>nazione="ie"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Elseif siteid="193" then</SourceLine>
   <SourceLine>site="CH"</SourceLine>
   <SourceLine>nazione="ch"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 1 month. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller.&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Else</SourceLine>
   <SourceLine>site="UK"</SourceLine>
   <SourceLine>nazione="uk"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso  +EndOfLine+ "&lt;ReturnPolicy&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;Description&gt;If you are not satisfied, return the item for refund. Within 14 working days. The item may be returned, but the product should not be mounted and must be in the same condition as it was delivered. For costs and details, contact the seller&lt;/Description&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsAcceptedOption&gt;ReturnsAccepted&lt;/ReturnsAcceptedOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;RefundOption&gt;MoneyBackOrExchange&lt;/RefundOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ShippingCostPaidByOption&gt;Buyer&lt;/ShippingCostPaidByOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "    &lt;ReturnsWithinOption&gt;Days_30&lt;/ReturnsWithinOption&gt;"</SourceLine>
   <SourceLine>bloccoReso = bloccoReso+EndOfLine+ "&lt;/ReturnPolicy&gt;"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fxml=New FolderItem(outputFileName,FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>if fxml = Nil then</SourceLine>
   <SourceLine>Return false</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>t = fxml.CreateTextFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim mmac_brand as string, dispatchtimemax as string="4"</SourceLine>
   <SourceLine>while not righe.EOF</SourceLine>
   <SourceLine>riga= righe.ReadLine</SourceLine>
   <SourceLine>campi = Split(riga, ";")</SourceLine>
   <SourceLine>ItemID=campi(0)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;ReviseFixedPriceItemRequest xmlns=""urn:ebay:apis:eBLBaseComponents""&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;Version&gt;949&lt;/Version&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"   &lt;Item&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"       &lt;ItemID&gt;"+ItemID+"&lt;/ItemID&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+ bloccoReso</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;/Item&gt;"</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;/ReviseFixedPriceItemRequest&gt;"</SourceLine>
   <SourceLine>t.Writeline outputFile</SourceLine>
   <SourceLine>outputFile=""</SourceLine>
   <SourceLine>wend</SourceLine>
   <SourceLine>outputFile = outputFile+EndOfLine+"&lt;/BulkDataExchangeRequests&gt;"</SourceLine>
   <SourceLine>t.Writeline outputFile</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'t.Write outputFile</SourceLine>
   <SourceLine>t.Close</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Cancella il file perchè non venga eseguito in continuazione nel caso di procedure ricorsiva</SourceLine>
   <SourceLine>if fcsv &lt;&gt; nil then</SourceLine>
   <SourceLine>fcsv.Delete()</SourceLine>
   <SourceLine>If fcsv.LastErrorCode &gt; 0 then</SourceLine>
   <SourceLine>MsgBox Str(fcsv.LastErrorCode)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>dim zar as new ZipArchive</SourceLine>
   <SourceLine>ZipArchive.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>zar.RegisterLicense "Alessandro Conti", 1694156619</SourceLine>
   <SourceLine>dim fzip2 as FolderItem=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator  +  "revise_"+siteid+"_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine>fzip2.Delete</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>fzip=New FolderItem(sPath + FolderSeparator + "ebay" + FolderSeparator + "revise_"+siteid+"_data.zip",FolderItem.PathTypeShell)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if not zar.Open (fzip, true) then</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>dim root as ZipFolderItem</SourceLine>
   <SourceLine>root = zar.Tree</SourceLine>
   <SourceLine>dim addedItem as ZipFolderItem</SourceLine>
   <SourceLine>addedItem = root.StoreFolderItem (fxml)</SourceLine>
   <SourceLine>if addedItem = nil then</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>if not zar.Close then</SourceLine>
   <SourceLine>return False</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>return true</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>inputFileName as String, outputFileName as String, siteid as String</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>ReviseReturn</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1896278015</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ReviseReturn()</SourceLine>
   <SourceLine>Dim cEbay as new Ebay</SourceLine>
   <SourceLine>Dim jobIds as String, fileReference as string, jobId as string, response() as string</SourceLine>
   <SourceLine>Dim sFile As String, howgo as Boolean</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.Wait</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>select Case MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>case "IT"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="101"</SourceLine>
   <SourceLine>sFile="ebay_revise_it.csv"</SourceLine>
   <SourceLine>case "DE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="77"</SourceLine>
   <SourceLine>sFile="ebay_revise_de.csv"</SourceLine>
   <SourceLine>case "NL"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="146"</SourceLine>
   <SourceLine>sFile="ebay_revise_nl.csv"</SourceLine>
   <SourceLine>case "FR"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="71"</SourceLine>
   <SourceLine>sFile="ebay_revise_fr.csv"</SourceLine>
   <SourceLine>case "ES"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="186"</SourceLine>
   <SourceLine>sFile="ebay_revise_es.csv"</SourceLine>
   <SourceLine>case "US"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="100"</SourceLine>
   <SourceLine>sFile="ebay_revise_us.csv"</SourceLine>
   <SourceLine>case "AUS"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="15"</SourceLine>
   <SourceLine>sFile="ebay_revise_aus.csv"</SourceLine>
   <SourceLine>case "IE"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="205"</SourceLine>
   <SourceLine>sFile="ebay_revise_ie.csv"</SourceLine>
   <SourceLine>case "CH"</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="193"</SourceLine>
   <SourceLine>sFile="ebay_revise_ch.csv"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>cEbay.userToken=IT_Token</SourceLine>
   <SourceLine>cEbay.siteID="3"</SourceLine>
   <SourceLine>sFile="ebay_revise_uk.csv"</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if SANDBOX=true then</SourceLine>
   <SourceLine>cEbay.BulkDataExchangeService =SandBoxBulkDataExchangeService</SourceLine>
   <SourceLine>cEbay.FileTransferService = SandBoxgetFileTransferService</SourceLine>
   <SourceLine>cEbay.userToken = SandBoxToken</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>mainWindow.Title="UPDATE " + MainWindow.cbSite.List(MainWindow.cbSite.ListIndex)</SourceLine>
   <SourceLine>if CheckFileSize(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile) then</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>'Genero il file zippato</SourceLine>
   <SourceLine>if GenFileReviseReturn(sPath + FolderSeparator + "ebay" + FolderSeparator + sFile, sPath + FolderSeparator + "ebay" + FolderSeparator + "revise_"+cEbay.siteID+"_data.xml",cEbay.siteID) =true then</SourceLine>
   <SourceLine>CheckJobBeforeStart "ReviseFixedPriceItem"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>jobIds = cEbay.createUploadJobRequest("ReviseFixedPriceItem" , RandStr(15,True,False,False,False))</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobIds</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>response = Split(jobIds,"|")</SourceLine>
   <SourceLine>jobId = response(0)</SourceLine>
   <SourceLine>fileReference = response(1)</SourceLine>
   <SourceLine>MainWindow.txtJobId.Text=jobId</SourceLine>
   <SourceLine>linkyjobLOG jobid, "UPDATE","CREATED"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>' Carico il file</SourceLine>
   <SourceLine>jobIds = cEbay.createUploadFileRequest(jobId, fileReference, sPath + FolderSeparator + "ebay" + FolderSeparator +  "revise_"+cEbay.siteID+"_data.zip")</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>jobIds = cEbay.startUploadJobRequest(jobId)</SourceLine>
   <SourceLine>if jobIds &lt;&gt; "Error" then</SourceLine>
   <SourceLine>' INIZIA IL controllo sullo stato di esecuzione del job</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Period=12000</SourceLine>
   <SourceLine>MainWindow.tmjobStatus.Mode=2</SourceLine>
   <SourceLine>MainWindow.pgWheel.Visible=True</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>linkyjobLOG jobid, "UPDATE","ABORT"</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine> howgo =cEbay.AbortJob(jobId)</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>MainWindow.MouseCursor=System.Cursors.StandardPointer</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if Batch = true then</SourceLine>
   <SourceLine>Quit(1)</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine>end</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Property>
  <ItemName>SandBoxToken</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1002260479</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SandBoxToken As String = "AgAAAA**AQAAAA**aAAAAA**+OCLTw**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4GhCJeCpgmdj6x9nY+seQ**738BAA**AAMAAA**E+XD7MjcWZUdS5Fp6Vmkq3AkroKapAzrdvZEpzTCf6syNZan7gY/xlwP5kbeCmmw59JgoAQb5I13ayMRY2Z1ustSfUjwnF96vPRWEQwBonz17wXZ9rw+l7Zh3dYJkRUtLBXbHr+w6RxnJBJOjk3nJ329vytfozueAQhPDRMtnTAypLFcBIghpUGvHBb0Hj1LIHSX98lzVVjSYZr3raRfIaC5vXygkAYppNFUFJciJwSslQJcyqR1V5Q7GlkjMGXQMILDb9LK5yulrZ5Uw3epnSbJlfhzT9+2GToyXye+7EEA2OOrqGVt2GOAl7/2ilPVoYjFrG5BUcXRzfsLj6qKkGt5cWlKY0nCwTSafl1k657l8/8inZmGedzZNnj2Rqyz1PqKiVk44bqb6RYSlsHIw0O42unH2T/TPcpOMoCx7HUKUnmaioB2XlIXtOXr8Ytn2o3Dhyj6xMLJDOqYp6luCEgecAmIclJDqpZAGMHBzt8OW4SY0bRW3RXWQA+zxzxnE4oiSKWGbeq5B2xdKgtTVmdthfRH1NSlRz5JLj6oRqbPpBvp3M/XVD89MU2RH7fuTWo185l4I5w/R7qu765xJTF7Bc0xrKn52Vnw4sPLAVBLv1fwVxbAET5pURc2Vogxi9AYTU5COfk0ywyd0X/EG2SgYAiYeLRrwribynkLWrArpiwGLMOfwUNvd2nbaXqkF1th3r3R387WECelJwlzrGuSdBhA86/rCoYvh5Z4zk7JMVNyi+cHfMVq4T9qceU+"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SandBoxToken As String = "AgAAAA**AQAAAA**aAAAAA**+OCLTw**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4GhCJeCpgmdj6x9nY+seQ**738BAA**AAMAAA**E+XD7MjcWZUdS5Fp6Vmkq3AkroKapAzrdvZEpzTCf6syNZan7gY/xlwP5kbeCmmw59JgoAQb5I13ayMRY2Z1ustSfUjwnF96vPRWEQwBonz17wXZ9rw+l7Zh3dYJkRUtLBXbHr+w6RxnJBJOjk3nJ329vytfozueAQhPDRMtnTAypLFcBIghpUGvHBb0Hj1LIHSX98lzVVjSYZr3raRfIaC5vXygkAYppNFUFJciJwSslQJcyqR1V5Q7GlkjMGXQMILDb9LK5yulrZ5Uw3epnSbJlfhzT9+2GToyXye+7EEA2OOrqGVt2GOAl7/2ilPVoYjFrG5BUcXRzfsLj6qKkGt5cWlKY0nCwTSafl1k657l8/8inZmGedzZNnj2Rqyz1PqKiVk44bqb6RYSlsHIw0O42unH2T/TPcpOMoCx7HUKUnmaioB2XlIXtOXr8Ytn2o3Dhyj6xMLJDOqYp6luCEgecAmIclJDqpZAGMHBzt8OW4SY0bRW3RXWQA+zxzxnE4oiSKWGbeq5B2xdKgtTVmdthfRH1NSlRz5JLj6oRqbPpBvp3M/XVD89MU2RH7fuTWo185l4I5w/R7qu765xJTF7Bc0xrKn52Vnw4sPLAVBLv1fwVxbAET5pURc2Vogxi9AYTU5COfk0ywyd0X/EG2SgYAiYeLRrwribynkLWrArpiwGLMOfwUNvd2nbaXqkF1th3r3R387WECelJwlzrGuSdBhA86/rCoYvh5Z4zk7JMVNyi+cHfMVq4T9qceU+"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>IT_Token</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>688766975</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>IT_Token As String = "AgAAAA**AQAAAA**aAAAAA**xc+fWg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wGkoGgD5eCpgmdj6x9nY+seQ**gRYBAA**AAMAAA**DF3FN7fJr0EwT6NoJGZ+HxEi0S46vSbtSqYToWgquQ/C3LFZPIEzFUQ4ngW/0C7iwx9F+624fEVX3JmKiMF/wwJdmk046N9U+V5QmY3LMp2SqRnajnPQFAWEsrSbf544PUu5O0LMx7XXSx22pHM0qR0gqvd48t4QHSvnuR1SS1FVZDu2PV1mW/WKbX2zpLvUH3As1vFo/XHCmTDfesiqsTsBsR5CkoMNVRHE+wJuDM3KF/5RPv85ytWM8DdZ+JPCkypEP+xRLzEcWprwjeS8c2QXDjxX1YCVpnn/SavuWpGI5+bu/2GMYIEoS3B45+zJZgjuj5XQO37InGBYqL0T99UAxxkUHmZSHQVPYjvj805EircjhaWNY1w/4ey1t0QA833g0NqjaIYP9gzH6sgIsFTwTCcsEkY6ox5nQrZ1YHtZJjCwb4SfupOYb70KNjunZ4BhPkpU29EieqRh7R4EuWLjiSGdWE2DUySZ1ythx6jjZ1o592iQZslMnRXmLEvztjppXeHUaItGXffobxQx0rNkfOqYRmYt8TdJZisuFnSmtYd9HENlAvVPQj8pRy7zF6Q0hz2RmnVmuBLA6IvMRrr4PdpqbS7hUINk2tb5+u3knrFpRX/7wSRLwI9v1tCdPOfuCZYL/GZ8CER+yOzBQFMt4cCbWyRxX6v8it3gc4sWS3q7zB4t16zmTOepZlE0l51WaJgzhLNS2Xzva4WT+Yi4dKuf/CaiEZTz7bCrJilsYQy9rDIuRkdFafalQArS"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>IT_Token As String = "AgAAAA**AQAAAA**aAAAAA**xc+fWg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wGkoGgD5eCpgmdj6x9nY+seQ**gRYBAA**AAMAAA**DF3FN7fJr0EwT6NoJGZ+HxEi0S46vSbtSqYToWgquQ/C3LFZPIEzFUQ4ngW/0C7iwx9F+624fEVX3JmKiMF/wwJdmk046N9U+V5QmY3LMp2SqRnajnPQFAWEsrSbf544PUu5O0LMx7XXSx22pHM0qR0gqvd48t4QHSvnuR1SS1FVZDu2PV1mW/WKbX2zpLvUH3As1vFo/XHCmTDfesiqsTsBsR5CkoMNVRHE+wJuDM3KF/5RPv85ytWM8DdZ+JPCkypEP+xRLzEcWprwjeS8c2QXDjxX1YCVpnn/SavuWpGI5+bu/2GMYIEoS3B45+zJZgjuj5XQO37InGBYqL0T99UAxxkUHmZSHQVPYjvj805EircjhaWNY1w/4ey1t0QA833g0NqjaIYP9gzH6sgIsFTwTCcsEkY6ox5nQrZ1YHtZJjCwb4SfupOYb70KNjunZ4BhPkpU29EieqRh7R4EuWLjiSGdWE2DUySZ1ythx6jjZ1o592iQZslMnRXmLEvztjppXeHUaItGXffobxQx0rNkfOqYRmYt8TdJZisuFnSmtYd9HENlAvVPQj8pRy7zF6Q0hz2RmnVmuBLA6IvMRrr4PdpqbS7hUINk2tb5+u3knrFpRX/7wSRLwI9v1tCdPOfuCZYL/GZ8CER+yOzBQFMt4cCbWyRxX6v8it3gc4sWS3q7zB4t16zmTOepZlE0l51WaJgzhLNS2Xzva4WT+Yi4dKuf/CaiEZTz7bCrJilsYQy9rDIuRkdFafalQArS"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>DE_Token</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>175005695</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>DE_Token As String = "AgAAAA**AQAAAA**aAAAAA**xc+fWg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wGkoGgD5eCpgmdj6x9nY+seQ**gRYBAA**AAMAAA**DF3FN7fJr0EwT6NoJGZ+HxEi0S46vSbtSqYToWgquQ/C3LFZPIEzFUQ4ngW/0C7iwx9F+624fEVX3JmKiMF/wwJdmk046N9U+V5QmY3LMp2SqRnajnPQFAWEsrSbf544PUu5O0LMx7XXSx22pHM0qR0gqvd48t4QHSvnuR1SS1FVZDu2PV1mW/WKbX2zpLvUH3As1vFo/XHCmTDfesiqsTsBsR5CkoMNVRHE+wJuDM3KF/5RPv85ytWM8DdZ+JPCkypEP+xRLzEcWprwjeS8c2QXDjxX1YCVpnn/SavuWpGI5+bu/2GMYIEoS3B45+zJZgjuj5XQO37InGBYqL0T99UAxxkUHmZSHQVPYjvj805EircjhaWNY1w/4ey1t0QA833g0NqjaIYP9gzH6sgIsFTwTCcsEkY6ox5nQrZ1YHtZJjCwb4SfupOYb70KNjunZ4BhPkpU29EieqRh7R4EuWLjiSGdWE2DUySZ1ythx6jjZ1o592iQZslMnRXmLEvztjppXeHUaItGXffobxQx0rNkfOqYRmYt8TdJZisuFnSmtYd9HENlAvVPQj8pRy7zF6Q0hz2RmnVmuBLA6IvMRrr4PdpqbS7hUINk2tb5+u3knrFpRX/7wSRLwI9v1tCdPOfuCZYL/GZ8CER+yOzBQFMt4cCbWyRxX6v8it3gc4sWS3q7zB4t16zmTOepZlE0l51WaJgzhLNS2Xzva4WT+Yi4dKuf/CaiEZTz7bCrJilsYQy9rDIuRkdFafalQArS"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>DE_Token As String = "AgAAAA**AQAAAA**aAAAAA**xc+fWg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wGkoGgD5eCpgmdj6x9nY+seQ**gRYBAA**AAMAAA**DF3FN7fJr0EwT6NoJGZ+HxEi0S46vSbtSqYToWgquQ/C3LFZPIEzFUQ4ngW/0C7iwx9F+624fEVX3JmKiMF/wwJdmk046N9U+V5QmY3LMp2SqRnajnPQFAWEsrSbf544PUu5O0LMx7XXSx22pHM0qR0gqvd48t4QHSvnuR1SS1FVZDu2PV1mW/WKbX2zpLvUH3As1vFo/XHCmTDfesiqsTsBsR5CkoMNVRHE+wJuDM3KF/5RPv85ytWM8DdZ+JPCkypEP+xRLzEcWprwjeS8c2QXDjxX1YCVpnn/SavuWpGI5+bu/2GMYIEoS3B45+zJZgjuj5XQO37InGBYqL0T99UAxxkUHmZSHQVPYjvj805EircjhaWNY1w/4ey1t0QA833g0NqjaIYP9gzH6sgIsFTwTCcsEkY6ox5nQrZ1YHtZJjCwb4SfupOYb70KNjunZ4BhPkpU29EieqRh7R4EuWLjiSGdWE2DUySZ1ythx6jjZ1o592iQZslMnRXmLEvztjppXeHUaItGXffobxQx0rNkfOqYRmYt8TdJZisuFnSmtYd9HENlAvVPQj8pRy7zF6Q0hz2RmnVmuBLA6IvMRrr4PdpqbS7hUINk2tb5+u3knrFpRX/7wSRLwI9v1tCdPOfuCZYL/GZ8CER+yOzBQFMt4cCbWyRxX6v8it3gc4sWS3q7zB4t16zmTOepZlE0l51WaJgzhLNS2Xzva4WT+Yi4dKuf/CaiEZTz7bCrJilsYQy9rDIuRkdFafalQArS"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SandBoxBulkDataExchangeService</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>974102527</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SandBoxBulkDataExchangeService As String = "https://webservices.sandbox.ebay.com/BulkDataExchangeService"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SandBoxBulkDataExchangeService As String = "https://webservices.sandbox.ebay.com/BulkDataExchangeService"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SandBoxgetFileTransferService</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1006528511</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SandBoxgetFileTransferService As String = "https://storage.sandbox.ebay.com/FileTransferService"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SandBoxgetFileTransferService As String = "https://storage.sandbox.ebay.com/FileTransferService"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SandBoxServerURL</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1972946943</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SandBoxServerURL As String = "https://api.sandbox.ebay.com/ws/api.dll"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SandBoxServerURL As String = "https://api.sandbox.ebay.com/ws/api.dll"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>SANDBOX</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>838510591</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>SANDBOX As Boolean = false</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>SANDBOX As Boolean = false</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Batch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>292536319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Batch As Boolean = false</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Batch As Boolean = false</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>sPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>536952831</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>sPath As String = "/linky/pneus"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>sPath As String = "/linky/pneus"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>FolderSeparator</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>977289215</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>FolderSeparator As String = "/"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>FolderSeparator As String = "/"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>UK_Token</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1074305023</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>UK_Token As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>UK_Token As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>partner</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>266452991</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>partner As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>partner As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>StartAction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>1533368319</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>StartAction As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>StartAction As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>linkyAction</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>281821183</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>linkyAction As string</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>linkyAction As string</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>linkyCountry</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>609273855</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>linkyCountry As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>linkyCountry As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>LogFile</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <PartID>657104895</PartID>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>LogFile As string = "ebay_Response.zip"</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>LogFile As string = "ebay_Response.zip"</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SandBoxToken</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>AgAAAA**AQAAAA**aAAAAA**v6huTQ**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wFk4CoAZKBoQWdj6x9nY+seQ**738BAA**AAMAAA**v2eQ1T5FHhqYwYxW/5qpTMJX3iCNBErG9W9u8oqDN52OzRXG9eJRhWTCtJCyrHSHlOxnUNwkNQM0VZvHuUiBoWQMUnQYfLLqyfZqUBbOcOyYZnEngeQ3ZWQU7fEDtGtpUK2FY1iwduNrSVi+KfaiYvYEoH1WlnJMs3WIlN4q5AzDZPofO35ZBC+YKhpZrA6j7fAOlhpP1qsJeFfHM+yfO9cHnNsA9/TKIC2+Tm3omaGUO4bp10vtiX9ELg909bzb8pNuevqszr0fGERAjkis0ctkWXQ5QeZ2yBrp0z9kdW3OOIVH7/UH6595uyfAXr/I2JbDNQKliaAsJrQQkICo4ptSzI5yQCzvTeobxYMYEwgr6b3zBGFFFadXmFVtttBovEVqMxaqJJ2h0SfpwhvkbzzzRDhSsHG2CPA4n7heQ+HzXLV5/CRIs7PJVMFxeXVxQfvxsFbsGdV2xI6Z1HgF+VAXm0esfbxcoqNyF5xyVr74XNKJ2vgMRO+9RnQ4+9WDP6EirEOKzeSICRafMdhE4CctSHXeGhaGt1tPaz87uRh70t1wraCZuI+5Sy3pl877T9rSXUB7ocTox26d+itWtLlt5y/MrZy5/pTCXDvZe41EybgAJuFex+hgGNafbUsq9/w/DbEBDO+/EyPg1KS9jBvQcIsaWY6OFxSu8ggVJs1D6lHLXhBsq7BYp/hQ7Mx48H6dqNGegf4gQm7tj2Zm7BVrIgFDCcOC5qvoeNwGsg5s3LaHoCr62tNVT1x3Jljx</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>UK_Token</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>AgAAAA**AQAAAA**aAAAAA**BgAwTw**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AEmIGnCJWBoAWdj6x9nY+seQ**gRYBAA**AAMAAA**ukSXc3+vcNF6mRPJTxxjMYfWMBKywtk0NJ0ICzjBJB5U0owO14m4ZraqWxg2Kul/Q/TqBVNaoJ4hc8QmZs8w0RQxrNM0wYAC2YiBeR79hEI8iMIrMUQudgYrewvCCiyCrVJFEkwxctJAwm6ZFUYaCauMn1XwM2NOGfZWEemY+mv9Gl+h/4zkZDNnTfGUTkG909hM9Fc+cRc5jjh0q/AWSwP4y23JBDhs845saK5pf6X14/K6h8eOsBYNR8gE4Z9UXPEs8VtEixAbcgd+3FBc3I40AtuvZAlphoxFcrTOWU6fSSVvcbG0AZWpWqQPjLpbCea9EOO6sUVzt2PkYK1UVpL3w8vzVNYV1CuYCFksOk8lC4dGVxMQeMJl1cGGcVC+A0bjlBtKGsGtp7nRXPs5bi8/l5Ee1p3AJQXKYvZEBWiSaXYt5+CEXHdHkmRY5QfocB/RPg4AB7UMPi+J3cssGJu7jFk1wou0nOoPZn0diks4zvw6ksesKpa5WIQIpO9Sx6ou/NaQz9UlIYmkRiT0wx7QwI2ioHz21G3mRn6fvsEJiFlk+C5nLRac9b7rGFcp5opDw4p7qZj22sIpkL7/llI2/vWVbZkfQZSK7t7TAIoUViMe/jC2WOu3tDEAJAhvtpP3ucMO+AhwVWePbfPHeve9PZtF8k+b9hKF5ZtMH0va8jWtEOK+L1SjeOFRFvGvqKAJSD1pe+xytdfdArhMBfDSW2lQVkzaZQfQry9GIMnac7K/LKJeveOLgcD1+ESa</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>IT_Token</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>AgAAAA**AQAAAA**aAAAAA**PoKDTQ**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6wBl4GoDJWDpAydj6x9nY+seQ**gRYBAA**AAMAAA**w5n/pe6A1rsY3tkymSHkTjEAdO9WTLfqygunHMch4A+CBHdjx5mxyP7honGqRIqSpR2WXKEO0GL6EHRL7/CgG2Fb/Sx+TOLAY4YXMyP3ePSgRqrbxDXgfcKdfkORcL6fYSjtCTPullW2yfcVAN2553grqLZGzNHSyhYSaOiO5Fs5YrnD0SJoyViDFcsBMDj+0PfmfLJNkJtWqiz19GpSaHTmNTd2+yZcf2ysDf2Sf1tLcHnhHdTMfNDeOSuvtakz2zosps2BZPNxAJ+Op2d943R4uFeVx47v1EMug9+dQ8xkaXWxxB1evTcg3eBUJJtFCuC8NaV0IlkhtmhpdQkLjbMfVKkvUQOB2bDIle0MqkfHzoOfOknC6ezsH8XUGrTF7anbArnDTQLp+gsQgjrjlTT/1zQOWlw/uTvrzRNR4AKRND3zrIKacVRPnEPyNXigEvelTIo7lhdzB/+d9yFwlFhQyfxrosAB/red9Z1ljC03zQusCB4v1fppF8kEizY9/AH5cWAXL+5upOc8kdr+/vZHRaoHN6n8kiZtZYaFr87aSmVqkOF2BZt1tjPbwA4lUapOypXTyqCRHekghC1vFw2C4loQvm99VTMsaWSucT/uhdDzKzaRuRh3q2+XSe6N+s5U+3iu4qkdsDWUDvc/dv8rK4492J4ewxtVbWlV/kH6eTlamXhiqGcDe2lb/XV3GqWas5KDokR6E277ZOSS0QB5adeIOgLBh7tak/XDW0/dBvsapMIf/Lo6mDeX7tRh</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DE_Token</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>AgAAAA**AQAAAA**aAAAAA**miIXTg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElYuiCpiBoQ6dj6x9nY+seQ**gRYBAA**AAMAAA**ATvFjDppvu+rfTw9xrf5wObJ1LGNdGImKrSlNHNOSdvfBQDguf93vdfHUFW1Ol8IJqk7WRfcNR8ugOS9Lp1oa/5synvznSc9YfXVMh37UGLHNiOQf5ny/+/ciQo4rwibRfKMtY9uyYkW5lPWmfEZrvYqfFJL6wPZK7MYBm+TZ5ffQU5h6bliEIyFkQCpwVxgCoHclLlgI5Q6M0YvWputr3U/HP7CoOXRKse5U1ufhGvs+B+DMIYxiMCYNVs+DKDUP7fio8uykuMc/OO3F+SyIXAu+8ufPJHFFNW/jaDk7yZqA6hPqiWerenKenrhSTThjgg9DChBEmIxcOELf7ascLibpDU6HKgxW763AJibTYfBoHBNFhvN54ceRN44Jed97k+CJrnL+PC1rEijlKaTFukY5IxoOCN4fsjaqJlMmiQwLamqdniH4i2Ytxtpv2K/nyoph3+UAoEoJ5fhSfNoo60Tfn4U1OALLTq4Ms2s9fbb/AwESEVZMsF84jOQ4FGvIvAhsyfxGTUloAz4mLOmJSj7k1Trz9iQwvQKAU3mlMmmmhe9C3DFPzGKUBaZQm8FcKvTdDF+F3kZraxu8MbRaXAMGoqyleQZhe+AV3w7FKCSS5rdLN6XKnlLSHbEAsM0/9i3g1eqSWgnudEOhruHBlh1rmw5yPH4Jp7fsvuhQD/ElOYgwJO1s/IJxUXem9tnYB3q+o0WHY3GgW7MlFZoW9ixLXud1T18pSopapUglp7Z2bWDY6OQcYDmnwM1sdLA</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SandBoxBulkDataExchangeService</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>https://webservices.sandbox.ebay.com/BulkDataExchangeService</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SandBoxgetFileTransferService</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>https://storage.sandbox.ebay.com/FileTransferService</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SandBoxServerURL</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>https://api.sandbox.ebay.com/ws/api.dll</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>SANDBOX</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>false</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Batch</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>false</PropertyValue>
   <ItemType>Boolean</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>sPath</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>/opt/frmoda</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>FolderSeparator</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>/</PropertyValue>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>partner</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>StartAction</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>linkyAction</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>linkyCountry</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LogFile</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <PropertyValue>ebay_Response.zip</PropertyValue>
   <ItemType>string</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
<block type="UIState" ID="0">
 <BreakPointGroup>
  <PartID>1513147821</PartID>
  <ItemName></ItemName>
  <UnitType>Method</UnitType>
  <UnitID>Function GenFileAddItem(inputFileName as String, outputFileName as String, siteid as String) As Boolean</UnitID>
  <lineNum>11</lineNum>
 </BreakPointGroup>
 <BreakPointGroup>
  <PartID>1513147821</PartID>
  <ItemName></ItemName>
  <UnitType>Method</UnitType>
  <UnitID>Function GenFileAddItem(inputFileName as String, outputFileName as String, siteid as String) As Boolean</UnitID>
  <lineNum>682</lineNum>
 </BreakPointGroup>
 <BreakPointGroup>
  <PartID>1513147821</PartID>
  <ItemName></ItemName>
  <UnitType>Method</UnitType>
  <UnitID>Sub AddEbayItems()</UnitID>
  <lineNum>63</lineNum>
 </BreakPointGroup>
 <BreakPointGroup>
  <PartID>1831372799</PartID>
  <ItemName></ItemName>
  <UnitType>Method</UnitType>
  <UnitID>Function IT_app(campi() as String) As string</UnitID>
  <lineNum>141</lineNum>
 </BreakPointGroup>
 <StudioWindowState>
  <EditBounds><Rect left="0" top="23" width="1680" height="958"/></EditBounds>
  <WindowMaximized>0</WindowMaximized>
  <Editors>
   <EditorCount>1</EditorCount>
   <Editor>
    <EditorIndex>0</EditorIndex>
    <EditorLocation>ModuloPrincipale.AddEbayItemsApp</EditorLocation>
    <EditorPath></EditorPath>
    <EditingPartID>1513147821</EditingPartID>
    <EditorPath></EditorPath>
   </Editor>
   <SelectedTab>0</SelectedTab>
  </Editors>
 </StudioWindowState>
</block>
</RBProject>
